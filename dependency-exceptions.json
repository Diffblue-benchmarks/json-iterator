[
 {
  "exceptions": [
   "org.junit.internal.ArrayComparisonFailure"
  ], 
  "methodRegex": "org\\.junit\\.Assert\\.assertArrayEquals\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.internal.ArrayComparisonFailure"
  ], 
  "methodRegex": "org\\.junit\\.Assert\\.assertArrayEquals\\:\\(Ljava\\/lang\\/String\\;\\[Z\\[Z\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.internal.ArrayComparisonFailure"
  ], 
  "methodRegex": "org\\.junit\\.Assert\\.assertArrayEquals\\:\\(Ljava\\/lang\\/String\\;\\[B\\[B\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.internal.ArrayComparisonFailure"
  ], 
  "methodRegex": "org\\.junit\\.Assert\\.assertArrayEquals\\:\\(Ljava\\/lang\\/String\\;\\[C\\[C\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.internal.ArrayComparisonFailure"
  ], 
  "methodRegex": "org\\.junit\\.Assert\\.assertArrayEquals\\:\\(Ljava\\/lang\\/String\\;\\[S\\[S\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.internal.ArrayComparisonFailure"
  ], 
  "methodRegex": "org\\.junit\\.Assert\\.assertArrayEquals\\:\\(Ljava\\/lang\\/String\\;\\[I\\[I\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.internal.ArrayComparisonFailure"
  ], 
  "methodRegex": "org\\.junit\\.Assert\\.assertArrayEquals\\:\\(Ljava\\/lang\\/String\\;\\[J\\[J\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.internal.ArrayComparisonFailure"
  ], 
  "methodRegex": "org\\.junit\\.Assert\\.assertArrayEquals\\:\\(Ljava\\/lang\\/String\\;\\[D\\[DD\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.internal.ArrayComparisonFailure"
  ], 
  "methodRegex": "org\\.junit\\.Assert\\.assertArrayEquals\\:\\(Ljava\\/lang\\/String\\;\\[F\\[FF\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.internal.ArrayComparisonFailure"
  ], 
  "methodRegex": "org\\.junit\\.Assert\\.internalArrayEquals\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.ExternalResource\\.before\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TestWatcher\\$1\\.\\<init\\>\\:\\(Lorg\\/junit\\/rules\\/TestWatcher\\;Lorg\\/junit\\/runner\\/Description\\;Lorg\\/junit\\/runners\\/model\\/Statement\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TestWatcher\\$1\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TemporaryFolder\\.before\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TemporaryFolder\\.create\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TemporaryFolder\\.newFile\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TemporaryFolder\\.newFile\\:\\(\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TemporaryFolder\\.newFolder\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TemporaryFolder\\.newFolder\\:\\(\\[Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TemporaryFolder\\.validateFolderName\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TemporaryFolder\\.newFolder\\:\\(\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TemporaryFolder\\.createTemporaryFolderIn\\:\\(Ljava\\/io\\/File\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.RunRules\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TestWatchman\\$1\\.\\<init\\>\\:\\(Lorg\\/junit\\/rules\\/TestWatchman\\;Lorg\\/junit\\/runners\\/model\\/FrameworkMethod\\;Lorg\\/junit\\/runners\\/model\\/Statement\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TestWatchman\\$1\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.Verifier\\$1\\.\\<init\\>\\:\\(Lorg\\/junit\\/rules\\/Verifier\\;Lorg\\/junit\\/runners\\/model\\/Statement\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.Verifier\\$1\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.ExpectedException\\.handleException\\:\\(Ljava\\/lang\\/Throwable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.AssertionError"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.ExpectedException\\.failDueToMissingException\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.ExpectedException\\.access\\$000\\:\\(Lorg\\/junit\\/rules\\/ExpectedException\\;Ljava\\/lang\\/Throwable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.AssertionError"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.ExpectedException\\.access\\$200\\:\\(Lorg\\/junit\\/rules\\/ExpectedException\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.ExpectedException\\$ExpectedExceptionStatement\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.ErrorCollector\\$1\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.Verifier\\.verify\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.Timeout\\.createFailOnTimeoutStatement\\:\\(Lorg\\/junit\\/runners\\/model\\/Statement\\;\\)Lorg\\/junit\\/runners\\/model\\/Statement\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.Timeout\\$1\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.ExternalResource\\$1\\.\\<init\\>\\:\\(Lorg\\/junit\\/rules\\/ExternalResource\\;Lorg\\/junit\\/runners\\/model\\/Statement\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.ExternalResource\\$1\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.ErrorCollector\\.verify\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.AllTests\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.JUnit4\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.BlockJUnit4ClassRunner\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.BlockJUnit4ClassRunner\\.createTest\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.ParentRunner\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runner.manipulation.NoTestsRemainException"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.ParentRunner\\.filter\\:\\(Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.ParentRunner\\.validate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.BlockJUnit4ClassRunner\\$1\\.\\<init\\>\\:\\(Lorg\\/junit\\/runners\\/BlockJUnit4ClassRunner\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.BlockJUnit4ClassRunner\\$1\\.runReflectiveCall\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.parameterized\\.ParametersRunnerFactory\\.createRunnerForTestWithParameters\\:\\(Lorg\\/junit\\/runners\\/parameterized\\/TestWithParameters\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.parameterized\\.BlockJUnit4ClassRunnerWithParameters\\.\\<init\\>\\:\\(Lorg\\/junit\\/runners\\/parameterized\\/TestWithParameters\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.parameterized\\.BlockJUnit4ClassRunnerWithParameters\\.createTest\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.parameterized\\.BlockJUnit4ClassRunnerWithParameters\\.createTestUsingConstructorInjection\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.parameterized\\.BlockJUnit4ClassRunnerWithParameters\\.createTestUsingFieldInjection\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.parameterized\\.BlockJUnit4ClassRunnerWithParametersFactory\\.createRunnerForTestWithParameters\\:\\(Lorg\\/junit\\/runners\\/parameterized\\/TestWithParameters\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Suite\\.getAnnotatedClasses\\:\\(Ljava\\/lang\\/Class\\;\\)\\[Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Suite\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/junit\\/runners\\/model\\/RunnerBuilder\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Suite\\.\\<init\\>\\:\\(Lorg\\/junit\\/runners\\/model\\/RunnerBuilder\\;\\[Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Suite\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Suite\\.\\<init\\>\\:\\(Lorg\\/junit\\/runners\\/model\\/RunnerBuilder\\;Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Suite\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.model\\.MultipleFailureException\\.assertEmpty\\:\\(Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.model\\.RunnerBuilder\\.runnerForClass\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.model\\.RunnerBuilder\\.addParent\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.model\\.RunnerBuilder\\.runners\\:\\(Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Class\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.model\\.RunnerBuilder\\.runners\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/util\\/List\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException", 
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.model\\.FrameworkField\\.get\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.model\\.Statement\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.model\\.FrameworkMethod\\.invokeExplosively\\:\\(Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException", 
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.model\\.FrameworkMethod\\$1\\.\\<init\\>\\:\\(Lorg\\/junit\\/runners\\/model\\/FrameworkMethod\\;Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.model\\.FrameworkMethod\\$1\\.runReflectiveCall\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Parameterized\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InstantiationException", 
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Parameterized\\.getParametersRunnerFactory\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runners\\/parameterized\\/ParametersRunnerFactory\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Parameterized\\.allParameters\\:\\(\\)Ljava\\/lang\\/Iterable\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Parameterized\\.getParametersMethod\\:\\(\\)Lorg\\/junit\\/runners\\/model\\/FrameworkMethod\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError", 
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Parameterized\\.createRunnersForParameters\\:\\(Ljava\\/lang\\/Iterable\\;Ljava\\/lang\\/String\\;Lorg\\/junit\\/runners\\/parameterized\\/ParametersRunnerFactory\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Parameterized\\.createTestsForParameters\\:\\(Ljava\\/lang\\/Iterable\\;Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Parameterized\\.parametersMethodReturnedWrongType\\:\\(\\)Ljava\\/lang\\/Exception\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runner.FilterFactory$FilterNotCreatedException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.FilterFactory\\.createFilter\\:\\(Lorg\\/junit\\/runner\\/FilterFactoryParams\\;\\)Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Result\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Result\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Result\\$Listener\\.testRunStarted\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Result\\$Listener\\.testRunFinished\\:\\(Lorg\\/junit\\/runner\\/Result\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Result\\$Listener\\.testFinished\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Result\\$Listener\\.testFailure\\:\\(Lorg\\/junit\\/runner\\/notification\\/Failure\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Result\\$Listener\\.testIgnored\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runner.FilterFactory$FilterNotCreatedException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.FilterFactories\\.createFilterFromFilterSpec\\:\\(Lorg\\/junit\\/runner\\/Request\\;Ljava\\/lang\\/String\\;\\)Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runner.FilterFactory$FilterNotCreatedException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.FilterFactories\\.createFilter\\:\\(Ljava\\/lang\\/String\\;Lorg\\/junit\\/runner\\/FilterFactoryParams\\;\\)Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runner.FilterFactory$FilterNotCreatedException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.FilterFactories\\.createFilter\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/junit\\/runner\\/FilterFactoryParams\\;\\)Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runner.FilterFactory$FilterNotCreatedException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.FilterFactories\\.createFilterFactory\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/junit\\/runner\\/FilterFactory\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runner.FilterFactory$FilterNotCreatedException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.FilterFactories\\.createFilterFactory\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/FilterFactory\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Result\\$SerializedForm\\.\\<init\\>\\:\\(Ljava\\/io\\/ObjectInputStream\\$GetField\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Result\\$SerializedForm\\.serialize\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Result\\$SerializedForm\\.deserialize\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)Lorg\\/junit\\/runner\\/Result\\$SerializedForm\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runner.manipulation.NoTestsRemainException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.manipulation\\.Filter\\.apply\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runner.manipulation.NoTestsRemainException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.manipulation\\.Filterable\\.filter\\:\\(Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runner.manipulation.NoTestsRemainException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.manipulation\\.Filter\\$1\\.apply\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Computer\\$1\\.\\<init\\>\\:\\(Lorg\\/junit\\/runner\\/Computer\\;Lorg\\/junit\\/runners\\/model\\/RunnerBuilder\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Computer\\$1\\.runnerForClass\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runner.notification.StoppedByUserException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\.fireTestStarted\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$1\\.\\<init\\>\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunNotifier\\;Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$1\\.notifyListener\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunListener\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$2\\.\\<init\\>\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunNotifier\\;Lorg\\/junit\\/runner\\/Result\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$2\\.notifyListener\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunListener\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$3\\.\\<init\\>\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunNotifier\\;Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$3\\.notifyListener\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunListener\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$4\\.\\<init\\>\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunNotifier\\;Ljava\\/util\\/List\\;Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$4\\.notifyListener\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunListener\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.SynchronizedRunListener\\.testRunStarted\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.SynchronizedRunListener\\.testRunFinished\\:\\(Lorg\\/junit\\/runner\\/Result\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.SynchronizedRunListener\\.testStarted\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.SynchronizedRunListener\\.testFinished\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.SynchronizedRunListener\\.testFailure\\:\\(Lorg\\/junit\\/runner\\/notification\\/Failure\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.SynchronizedRunListener\\.testIgnored\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$SafeNotifier\\.notifyListener\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunListener\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$5\\.notifyListener\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunListener\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$6\\.\\<init\\>\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunNotifier\\;Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$6\\.notifyListener\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunListener\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$7\\.\\<init\\>\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunNotifier\\;Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$7\\.notifyListener\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunListener\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunListener\\.testRunStarted\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunListener\\.testRunFinished\\:\\(Lorg\\/junit\\/runner\\/Result\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunListener\\.testStarted\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunListener\\.testFinished\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunListener\\.testFailure\\:\\(Lorg\\/junit\\/runner\\/notification\\/Failure\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunListener\\.testIgnored\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Computer\\.getSuite\\:\\(Lorg\\/junit\\/runners\\/model\\/RunnerBuilder\\;\\[Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Computer\\.getRunner\\:\\(Lorg\\/junit\\/runners\\/model\\/RunnerBuilder\\;Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException", 
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.TestMethod\\.invoke\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.SecurityException", 
   "java.lang.NoSuchMethodException"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.TestClass\\.getConstructor\\:\\(\\)Ljava\\/lang\\/reflect\\/Constructor\\;"
 }, 
 {
  "exceptions": [
   "org.junit.internal.runners.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.JUnit4ClassRunner\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.internal.runners.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.JUnit4ClassRunner\\.validate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.JUnit4ClassRunner\\.createTest\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runner.manipulation.NoTestsRemainException"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.JUnit4ClassRunner\\.filter\\:\\(Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.statements\\.Fail\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.statements\\.FailOnTimeout\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.statements\\.RunAfters\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.statements\\.RunBefores\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.statements\\.ExpectException\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.statements\\.InvokeMethod\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.statements\\.FailOnTimeout\\$CallableStatement\\.call\\:\\(\\)Ljava\\/lang\\/Throwable\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.statements\\.FailOnTimeout\\$CallableStatement\\.awaitStarted\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.statements\\.FailOnTimeout\\$CallableStatement\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.internal.runners.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.MethodValidator\\.assertValid\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runner.manipulation.NoTestsRemainException"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.JUnit38ClassRunner\\.filter\\:\\(Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.SuiteMethod\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.SuiteMethod\\.testFromSuiteMethod\\:\\(Ljava\\/lang\\/Class\\;\\)Ljunit\\/framework\\/Test\\;"
 }, 
 {
  "exceptions": [
   "org.junit.internal.runners.FailedBefore"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.MethodRoadie\\.runBefores\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.internal.runners.FailedBefore"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.ClassRoadie\\.runBefores\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.MethodRoadie\\$1\\$1\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.model\\.ReflectiveCallable\\.run\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.model\\.ReflectiveCallable\\.runReflectiveCall\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.internal.ArrayComparisonFailure"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.ComparisonCriteria\\.arrayEquals\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.Throwables\\.rethrowAsException\\:\\(Ljava\\/lang\\/Throwable\\;\\)Ljava\\/lang\\/Exception\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.Throwables\\.rethrow\\:\\(Ljava\\/lang\\/Throwable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.Classes\\.getClass\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.builders\\.JUnit4Builder\\.runnerForClass\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.builders\\.AnnotatedBuilder\\.runnerForClass\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.builders\\.AnnotatedBuilder\\.buildRunner\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.builders\\.JUnit3Builder\\.runnerForClass\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.builders\\.AllDefaultPossibilitiesBuilder\\.runnerForClass\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.builders\\.NullBuilder\\.runnerForClass\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.builders\\.SuiteMethodBuilder\\.runnerForClass\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.max\\.MaxHistory\\$RememberingListener\\.testStarted\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.max\\.MaxHistory\\$RememberingListener\\.testFinished\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.max\\.MaxHistory\\$RememberingListener\\.testFailure\\:\\(Lorg\\/junit\\/runner\\/notification\\/Failure\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.max\\.MaxHistory\\$RememberingListener\\.testRunFinished\\:\\(Lorg\\/junit\\/runner\\/Result\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.max\\.MaxCore\\$1\\$1\\.\\<init\\>\\:\\(Lorg\\/junit\\/experimental\\/max\\/MaxCore\\$1\\;Ljava\\/lang\\/Class\\;Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.experimental.max.CouldNotReadCoreException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.max\\.MaxHistory\\.readHistory\\:\\(Ljava\\/io\\/File\\;\\)Lorg\\/junit\\/experimental\\/max\\/MaxHistory\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.max\\.MaxHistory\\.save\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.max\\.MaxHistory\\.access\\$000\\:\\(Lorg\\/junit\\/experimental\\/max\\/MaxHistory\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.ParallelComputer\\.getSuite\\:\\(Lorg\\/junit\\/runners\\/model\\/RunnerBuilder\\;\\[Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.ParallelComputer\\.getRunner\\:\\(Lorg\\/junit\\/runners\\/model\\/RunnerBuilder\\;Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\$TheoryAnchor\\$2\\.\\<init\\>\\:\\(Lorg\\/junit\\/experimental\\/theories\\/Theories\\$TheoryAnchor\\;Lorg\\/junit\\/experimental\\/theories\\/internal\\/Assignments\\;Lorg\\/junit\\/runners\\/model\\/FrameworkMethod\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\$TheoryAnchor\\$2\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\$TheoryAnchor\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\$TheoryAnchor\\.runWithAssignment\\:\\(Lorg\\/junit\\/experimental\\/theories\\/internal\\/Assignments\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\$TheoryAnchor\\.runWithIncompleteAssignment\\:\\(Lorg\\/junit\\/experimental\\/theories\\/internal\\/Assignments\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\$TheoryAnchor\\.runWithCompleteAssignment\\:\\(Lorg\\/junit\\/experimental\\/theories\\/internal\\/Assignments\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\$TheoryAnchor\\.reportParameterizedError\\:\\(Ljava\\/lang\\/Throwable\\;\\[Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\$TheoryAnchor\\$1\\$1\\.\\<init\\>\\:\\(Lorg\\/junit\\/experimental\\/theories\\/Theories\\$TheoryAnchor\\$1\\;Lorg\\/junit\\/runners\\/model\\/Statement\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\$TheoryAnchor\\$1\\$1\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\$TheoryAnchor\\$1\\.\\<init\\>\\:\\(Lorg\\/junit\\/experimental\\/theories\\/Theories\\$TheoryAnchor\\;Ljava\\/lang\\/Class\\;Lorg\\/junit\\/experimental\\/theories\\/internal\\/Assignments\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\$TheoryAnchor\\$1\\.createTest\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.PotentialAssignment\\.getValue\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.PotentialAssignment\\.getDescription\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.AllMembersSupplier\\$MethodParameterValue\\.getValue\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.AllMembersSupplier\\$MethodParameterValue\\.getDescription\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.AllMembersSupplier\\.getValueSources\\:\\(Lorg\\/junit\\/experimental\\/theories\\/ParameterSignature\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.AllMembersSupplier\\.addMultiPointMethods\\:\\(Lorg\\/junit\\/experimental\\/theories\\/ParameterSignature\\;Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.Assignments\\.getActualValues\\:\\(II\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.Assignments\\.potentialsForNextUnassigned\\:\\(\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.Assignments\\.getSupplier\\:\\(Lorg\\/junit\\/experimental\\/theories\\/ParameterSignature\\;\\)Lorg\\/junit\\/experimental\\/theories\\/ParameterSupplier\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.Assignments\\.buildParameterSupplierFromClass\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/experimental\\/theories\\/ParameterSupplier\\;"
 }, 
 {
  "exceptions": [
   "org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.Assignments\\.getConstructorArguments\\:\\(\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.Assignments\\.getMethodArguments\\:\\(\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.Assignments\\.getAllArguments\\:\\(\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.Assignments\\.getArgumentStrings\\:\\(Z\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.ParameterSupplier\\.getValueSources\\:\\(Lorg\\/junit\\/experimental\\/theories\\/ParameterSignature\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runner.FilterFactory$FilterNotCreatedException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.categories\\.CategoryFilterFactory\\.createFilter\\:\\(Lorg\\/junit\\/runner\\/FilterFactoryParams\\;\\)Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.categories\\.CategoryFilterFactory\\.parseCategories\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.categories\\.Categories\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/junit\\/runners\\/model\\/RunnerBuilder\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.categories\\.Categories\\.assertNoCategorizedDescendentsOfUncategorizeableParents\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.categories\\.Categories\\.assertNoDescendantsHaveCategoryAnnotations\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.runners\\.Enclosed\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/junit\\/runners\\/model\\/RunnerBuilder\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "junit\\.framework\\.TestCase\\.runBare\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "junit\\.framework\\.TestCase\\.runTest\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "junit\\.framework\\.TestCase\\.setUp\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "junit\\.framework\\.TestCase\\.tearDown\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runner.manipulation.NoTestsRemainException"
  ], 
  "methodRegex": "junit\\.framework\\.JUnit4TestAdapter\\.filter\\:\\(Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "junit\\.framework\\.TestResult\\$1\\.\\<init\\>\\:\\(Ljunit\\/framework\\/TestResult\\;Ljunit\\/framework\\/TestCase\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "junit\\.framework\\.TestResult\\$1\\.protect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException"
  ], 
  "methodRegex": "junit\\.framework\\.TestSuite\\.getTestConstructor\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/reflect\\/Constructor\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "junit\\.framework\\.Protectable\\.protect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "junit\\.framework\\.JUnit4TestAdapterCache\\$1\\.testFailure\\:\\(Lorg\\/junit\\/runner\\/notification\\/Failure\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "junit\\.framework\\.JUnit4TestAdapterCache\\$1\\.testFinished\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "junit\\.framework\\.JUnit4TestAdapterCache\\$1\\.testStarted\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "junit\\.runner\\.BaseTestRunner\\.savePreferences\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "junit\\.runner\\.BaseTestRunner\\.loadSuiteClass\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "junit\\.extensions\\.TestSetup\\.setUp\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "junit\\.extensions\\.TestSetup\\.tearDown\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "junit\\.extensions\\.TestSetup\\$1\\.\\<init\\>\\:\\(Ljunit\\/extensions\\/TestSetup\\;Ljunit\\/framework\\/TestResult\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "junit\\.extensions\\.TestSetup\\$1\\.protect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "junit\\.textui\\.TestRunner\\.start\\:\\(\\[Ljava\\/lang\\/String\\;\\)Ljunit\\/framework\\/TestResult\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "junit\\.textui\\.TestRunner\\.runSingleMethod\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Z\\)Ljunit\\/framework\\/TestResult\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.ClassClassPath\\.openClassfile\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.ClassPath\\.openClassfile\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.ClassPool\\$1\\.run\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.ClassPool\\.getAndRename\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.ClassPool\\.get\\:\\(Ljava\\/lang\\/String\\;\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.ClassPool\\.getCtClass\\:\\(Ljava\\/lang\\/String\\;\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.ClassPool\\.get0\\:\\(Ljava\\/lang\\/String\\;Z\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "java.lang.RuntimeException"
  ], 
  "methodRegex": "javassist\\.ClassPool\\.checkNotFrozen\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.ClassPool\\.openClassfile\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException", 
   "java.io.IOException", 
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.ClassPool\\.writeClassfile\\:\\(Ljava\\/lang\\/String\\;Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.ClassPool\\.get\\:\\(\\[Ljava\\/lang\\/String\\;\\)\\[Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.ClassPool\\.getMethod\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljavassist\\/CtMethod\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.RuntimeException"
  ], 
  "methodRegex": "javassist\\.ClassPool\\.makeClass\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.RuntimeException"
  ], 
  "methodRegex": "javassist\\.ClassPool\\.makeClass\\:\\(Ljava\\/io\\/InputStream\\;Z\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "java.lang.RuntimeException"
  ], 
  "methodRegex": "javassist\\.ClassPool\\.makeClass\\:\\(Ljavassist\\/bytecode\\/ClassFile\\;\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "java.lang.RuntimeException"
  ], 
  "methodRegex": "javassist\\.ClassPool\\.makeClass\\:\\(Ljavassist\\/bytecode\\/ClassFile\\;Z\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.RuntimeException"
  ], 
  "methodRegex": "javassist\\.ClassPool\\.makeClassIfNew\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "java.lang.RuntimeException"
  ], 
  "methodRegex": "javassist\\.ClassPool\\.makeClass\\:\\(Ljava\\/lang\\/String\\;\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "java.lang.RuntimeException"
  ], 
  "methodRegex": "javassist\\.ClassPool\\.makeClass\\:\\(Ljava\\/lang\\/String\\;Ljavassist\\/CtClass\\;\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "java.lang.RuntimeException"
  ], 
  "methodRegex": "javassist\\.ClassPool\\.makeInterface\\:\\(Ljava\\/lang\\/String\\;\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "java.lang.RuntimeException"
  ], 
  "methodRegex": "javassist\\.ClassPool\\.makeInterface\\:\\(Ljava\\/lang\\/String\\;Ljavassist\\/CtClass\\;\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "java.lang.RuntimeException"
  ], 
  "methodRegex": "javassist\\.ClassPool\\.makeAnnotation\\:\\(Ljava\\/lang\\/String\\;\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.ClassPool\\.insertClassPath\\:\\(Ljava\\/lang\\/String\\;\\)Ljavassist\\/ClassPath\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.ClassPool\\.appendClassPath\\:\\(Ljava\\/lang\\/String\\;\\)Ljavassist\\/ClassPath\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.ClassPool\\.appendPathList\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.ClassPool\\.toClass\\:\\(Ljavassist\\/CtClass\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.ClassPool\\.toClass\\:\\(Ljavassist\\/CtClass\\;Ljava\\/lang\\/ClassLoader\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.ClassPool\\.toClass\\:\\(Ljavassist\\/CtClass\\;Ljava\\/lang\\/ClassLoader\\;Ljava\\/security\\/ProtectionDomain\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.ClassPool\\.makePackage\\:\\(Ljava\\/lang\\/ClassLoader\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.ClassPool\\.makePackage2\\:\\(Ljava\\/lang\\/reflect\\/Method\\;Ljava\\/lang\\/ClassLoader\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.ClassPoolTail\\.insertClassPath\\:\\(Ljava\\/lang\\/String\\;\\)Ljavassist\\/ClassPath\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.ClassPoolTail\\.appendClassPath\\:\\(Ljava\\/lang\\/String\\;\\)Ljavassist\\/ClassPath\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.ClassPoolTail\\.makePathObject\\:\\(Ljava\\/lang\\/String\\;\\)Ljavassist\\/ClassPath\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException", 
   "java.io.IOException", 
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.ClassPoolTail\\.writeClassfile\\:\\(Ljava\\/lang\\/String\\;Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.ClassPoolTail\\.openClassfile\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.ClassPoolTail\\.readStream\\:\\(Ljava\\/io\\/InputStream\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.ClassPoolTail\\.copyStream\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CodeConverter\\.replaceArrayAccess\\:\\(Ljavassist\\/CtClass\\;Ljavassist\\/CodeConverter\\$ArrayAccessReplacementMethodNames\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CodeConverter\\.redirectMethodCall\\:\\(Ljavassist\\/CtMethod\\;Ljavassist\\/CtMethod\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CodeConverter\\.redirectMethodCall\\:\\(Ljava\\/lang\\/String\\;Ljavassist\\/CtMethod\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CodeConverter\\.insertBeforeMethod\\:\\(Ljavassist\\/CtMethod\\;Ljavassist\\/CtMethod\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CodeConverter\\.insertAfterMethod\\:\\(Ljavassist\\/CtMethod\\;Ljavassist\\/CtMethod\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CodeConverter\\.doit\\:\\(Ljavassist\\/CtClass\\;Ljavassist\\/bytecode\\/MethodInfo\\;Ljavassist\\/bytecode\\/ConstPool\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtArray\\.getInterfaces\\:\\(\\)\\[Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtArray\\.subtypeOf\\:\\(Ljavassist\\/CtClass\\;\\)Z"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtArray\\.getComponentType\\:\\(\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtArray\\.getSuperclass\\:\\(\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtArray\\.getMethod\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljavassist\\/CtMethod\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtBehavior\\.copy\\:\\(Ljavassist\\/CtBehavior\\;ZLjavassist\\/ClassMap\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "javassist\\.CtBehavior\\.getAnnotation\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "javassist\\.CtBehavior\\.getAnnotations\\:\\(\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "javassist\\.CtBehavior\\.getAnnotations\\:\\(Z\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "javassist\\.CtBehavior\\.getParameterAnnotations\\:\\(\\)\\[\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "javassist\\.CtBehavior\\.getParameterAnnotations\\:\\(Z\\)\\[\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtBehavior\\.getParameterTypes\\:\\(\\)\\[Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtBehavior\\.getReturnType0\\:\\(\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtBehavior\\.getExceptionTypes\\:\\(\\)\\[Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtBehavior\\.setExceptionTypes\\:\\(\\[Ljavassist\\/CtClass\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtBehavior\\.setBody\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtBehavior\\.setBody\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtBehavior\\.setBody0\\:\\(Ljavassist\\/CtClass\\;Ljavassist\\/bytecode\\/MethodInfo\\;Ljavassist\\/CtClass\\;Ljavassist\\/bytecode\\/MethodInfo\\;Ljavassist\\/ClassMap\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtBehavior\\.useCflow\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtBehavior\\.addLocalVariable\\:\\(Ljava\\/lang\\/String\\;Ljavassist\\/CtClass\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtBehavior\\.insertParameter\\:\\(Ljavassist\\/CtClass\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtBehavior\\.addParameter\\:\\(Ljavassist\\/CtClass\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.CtBehavior\\.addParameter2\\:\\(ILjavassist\\/CtClass\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtBehavior\\.instrument\\:\\(Ljavassist\\/CodeConverter\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtBehavior\\.instrument\\:\\(Ljavassist\\/expr\\/ExprEditor\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtBehavior\\.insertBefore\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtBehavior\\.insertBefore\\:\\(Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtBehavior\\.insertAfter\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtBehavior\\.insertAfter\\:\\(Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.CtBehavior\\.insertAfterAdvice\\:\\(Ljavassist\\/bytecode\\/Bytecode\\;Ljavassist\\/compiler\\/Javac\\;Ljava\\/lang\\/String\\;Ljavassist\\/bytecode\\/ConstPool\\;Ljavassist\\/CtClass\\;I\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.CtBehavior\\.insertGoto\\:\\(Ljavassist\\/bytecode\\/CodeIterator\\;II\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.CtBehavior\\.insertAfterHandler\\:\\(ZLjavassist\\/bytecode\\/Bytecode\\;Ljavassist\\/CtClass\\;ILjavassist\\/compiler\\/Javac\\;Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtBehavior\\.addCatch\\:\\(Ljava\\/lang\\/String\\;Ljavassist\\/CtClass\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtBehavior\\.addCatch\\:\\(Ljava\\/lang\\/String\\;Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtBehavior\\.getStartPosOfBody\\:\\(Ljavassist\\/bytecode\\/CodeAttribute\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtBehavior\\.insertAt\\:\\(ILjava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtBehavior\\.insertAt\\:\\(IZLjava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.CtClass\\$DelayedFileOutputStream\\.init\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.CtClass\\$DelayedFileOutputStream\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.CtClass\\$DelayedFileOutputStream\\.write\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.CtClass\\$DelayedFileOutputStream\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.CtClass\\$DelayedFileOutputStream\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.CtClass\\$DelayedFileOutputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClass\\.getURL\\:\\(\\)Ljava\\/net\\/URL\\;"
 }, 
 {
  "exceptions": [
   "java.lang.RuntimeException"
  ], 
  "methodRegex": "javassist\\.CtClass\\.checkModify\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClass\\.getComponentType\\:\\(\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClass\\.subtypeOf\\:\\(Ljavassist\\/CtClass\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClass\\.getAnnotation\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClass\\.getAnnotations\\:\\(\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClass\\.getDeclaredClasses\\:\\(\\)\\[Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClass\\.getNestedClasses\\:\\(\\)\\[Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClass\\.getSuperclass\\:\\(\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtClass\\.setSuperclass\\:\\(Ljavassist\\/CtClass\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClass\\.getInterfaces\\:\\(\\)\\[Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClass\\.getDeclaringClass\\:\\(\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClass\\.getEnclosingMethod\\:\\(\\)Ljavassist\\/CtMethod\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClass\\.getEnclosingBehavior\\:\\(\\)Ljavassist\\/CtBehavior\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClass\\.getField\\:\\(Ljava\\/lang\\/String\\;\\)Ljavassist\\/CtField\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClass\\.getField\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljavassist\\/CtField\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClass\\.getDeclaredField\\:\\(Ljava\\/lang\\/String\\;\\)Ljavassist\\/CtField\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClass\\.getDeclaredField\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljavassist\\/CtField\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClass\\.getConstructor\\:\\(Ljava\\/lang\\/String\\;\\)Ljavassist\\/CtConstructor\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClass\\.getDeclaredConstructor\\:\\(\\[Ljavassist\\/CtClass\\;\\)Ljavassist\\/CtConstructor\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClass\\.getMethod\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljavassist\\/CtMethod\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClass\\.getDeclaredMethod\\:\\(Ljava\\/lang\\/String\\;\\[Ljavassist\\/CtClass\\;\\)Ljavassist\\/CtMethod\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClass\\.getDeclaredMethods\\:\\(Ljava\\/lang\\/String\\;\\)\\[Ljavassist\\/CtMethod\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClass\\.getDeclaredMethod\\:\\(Ljava\\/lang\\/String\\;\\)Ljavassist\\/CtMethod\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtClass\\.makeClassInitializer\\:\\(\\)Ljavassist\\/CtConstructor\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtClass\\.addConstructor\\:\\(Ljavassist\\/CtConstructor\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClass\\.removeConstructor\\:\\(Ljavassist\\/CtConstructor\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtClass\\.addMethod\\:\\(Ljavassist\\/CtMethod\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClass\\.removeMethod\\:\\(Ljavassist\\/CtMethod\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtClass\\.addField\\:\\(Ljavassist\\/CtField\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtClass\\.addField\\:\\(Ljavassist\\/CtField\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtClass\\.addField\\:\\(Ljavassist\\/CtField\\;Ljavassist\\/CtField\\$Initializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClass\\.removeField\\:\\(Ljavassist\\/CtField\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtClass\\.instrument\\:\\(Ljavassist\\/CodeConverter\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtClass\\.instrument\\:\\(Ljavassist\\/expr\\/ExprEditor\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtClass\\.toClass\\:\\(\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtClass\\.toClass\\:\\(Ljava\\/lang\\/ClassLoader\\;Ljava\\/security\\/ProtectionDomain\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtClass\\.toClass\\:\\(Ljava\\/lang\\/ClassLoader\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtClass\\.toBytecode\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException", 
   "java.io.IOException", 
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtClass\\.writeFile\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException", 
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.CtClass\\.writeFile\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException", 
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.CtClass\\.toBytecode\\:\\(Ljava\\/io\\/DataOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.\\<init\\>\\:\\(Ljava\\/io\\/InputStream\\;Ljavassist\\/ClassPool\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.getURL\\:\\(\\)Ljava\\/net\\/URL\\;"
 }, 
 {
  "exceptions": [
   "java.lang.RuntimeException"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.checkModify\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.subtypeOf\\:\\(Ljavassist\\/CtClass\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.RuntimeException"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.setName\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.RuntimeException"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.replaceClassName\\:\\(Ljavassist\\/ClassMap\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.RuntimeException"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.replaceClassName\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.getNestedClasses\\:\\(\\)\\[Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.getAnnotation\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.getAnnotationType\\:\\(Ljava\\/lang\\/Class\\;Ljavassist\\/ClassPool\\;Ljavassist\\/bytecode\\/AnnotationsAttribute\\;Ljavassist\\/bytecode\\/AnnotationsAttribute\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.getAnnotations\\:\\(\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.getAnnotations\\:\\(Z\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.toAnnotationType\\:\\(ZLjavassist\\/ClassPool\\;Ljavassist\\/bytecode\\/AnnotationsAttribute\\;Ljavassist\\/bytecode\\/AnnotationsAttribute\\;\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.toAnnotationType\\:\\(ZLjavassist\\/ClassPool\\;Ljavassist\\/bytecode\\/ParameterAnnotationsAttribute\\;Ljavassist\\/bytecode\\/ParameterAnnotationsAttribute\\;Ljavassist\\/bytecode\\/MethodInfo\\;\\)\\[\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.toAnnoType\\:\\(Ljavassist\\/bytecode\\/annotation\\/Annotation\\;Ljavassist\\/ClassPool\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.getSuperclass\\:\\(\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.setSuperclass\\:\\(Ljavassist\\/CtClass\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.getInterfaces\\:\\(\\)\\[Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.getDeclaringClass\\:\\(\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.getEnclosingBehavior\\:\\(\\)Ljavassist\\/CtBehavior\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.getField\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljavassist\\/CtField\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.checkGetField\\:\\(Ljavassist\\/CtField\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljavassist\\/CtField\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.getDeclaredField\\:\\(Ljava\\/lang\\/String\\;\\)Ljavassist\\/CtField\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.getDeclaredField\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljavassist\\/CtField\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.getConstructor\\:\\(Ljava\\/lang\\/String\\;\\)Ljavassist\\/CtConstructor\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.getMethod\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljavassist\\/CtMethod\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.getDeclaredMethods\\:\\(Ljava\\/lang\\/String\\;\\)\\[Ljavassist\\/CtMethod\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.getDeclaredMethod\\:\\(Ljava\\/lang\\/String\\;\\)Ljavassist\\/CtMethod\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.getDeclaredMethod\\:\\(Ljava\\/lang\\/String\\;\\[Ljavassist\\/CtClass\\;\\)Ljavassist\\/CtMethod\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.addField\\:\\(Ljavassist\\/CtField\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.addField\\:\\(Ljavassist\\/CtField\\;Ljavassist\\/CtField\\$Initializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.removeField\\:\\(Ljavassist\\/CtField\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.makeClassInitializer\\:\\(\\)Ljavassist\\/CtConstructor\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.addConstructor\\:\\(Ljavassist\\/CtConstructor\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.removeConstructor\\:\\(Ljavassist\\/CtConstructor\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.addMethod\\:\\(Ljavassist\\/CtMethod\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.removeMethod\\:\\(Ljavassist\\/CtMethod\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.instrument\\:\\(Ljavassist\\/CodeConverter\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.instrument\\:\\(Ljavassist\\/expr\\/ExprEditor\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException", 
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.toBytecode\\:\\(Ljava\\/io\\/DataOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.dumpClassFile\\:\\(Ljavassist\\/bytecode\\/ClassFile\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException", 
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.modifyClassConstructor\\:\\(Ljavassist\\/bytecode\\/ClassFile\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.modifyClassConstructor\\:\\(Ljavassist\\/bytecode\\/ClassFile\\;Ljavassist\\/bytecode\\/Bytecode\\;II\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException", 
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.modifyConstructors\\:\\(Ljavassist\\/bytecode\\/ClassFile\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.insertAuxInitializer\\:\\(Ljavassist\\/bytecode\\/CodeAttribute\\;Ljavassist\\/bytecode\\/Bytecode\\;I\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException", 
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtClassType\\.makeFieldInitializer\\:\\(Ljavassist\\/bytecode\\/Bytecode\\;\\[Ljavassist\\/CtClass\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtConstructor\\.\\<init\\>\\:\\(Ljavassist\\/CtConstructor\\;Ljavassist\\/CtClass\\;Ljavassist\\/ClassMap\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtConstructor\\.callsSuper\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtConstructor\\.setBody\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtConstructor\\.setBody\\:\\(Ljavassist\\/CtConstructor\\;Ljavassist\\/ClassMap\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtConstructor\\.insertBeforeBody\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtConstructor\\.getStartPosOfBody\\:\\(Ljavassist\\/bytecode\\/CodeAttribute\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtConstructor\\.toMethod\\:\\(Ljava\\/lang\\/String\\;Ljavassist\\/CtClass\\;\\)Ljavassist\\/CtMethod\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtConstructor\\.toMethod\\:\\(Ljava\\/lang\\/String\\;Ljavassist\\/CtClass\\;Ljavassist\\/ClassMap\\;\\)Ljavassist\\/CtMethod\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtConstructor\\.removeConsCall\\:\\(Ljavassist\\/bytecode\\/CodeAttribute\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtField\\$ArrayInitializer\\.compile\\:\\(Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;Ljavassist\\/bytecode\\/Bytecode\\;\\[Ljavassist\\/CtClass\\;Ljavassist\\/compiler\\/Javac\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtField\\$ArrayInitializer\\.compileIfStatic\\:\\(Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;Ljavassist\\/bytecode\\/Bytecode\\;Ljavassist\\/compiler\\/Javac\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.CtField\\$CodeInitializer\\.compileExpr\\:\\(Ljavassist\\/compiler\\/Javac\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.CtField\\$CodeInitializer0\\.compileExpr\\:\\(Ljavassist\\/compiler\\/Javac\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtField\\$CodeInitializer0\\.compile\\:\\(Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;Ljavassist\\/bytecode\\/Bytecode\\;\\[Ljavassist\\/CtClass\\;Ljavassist\\/compiler\\/Javac\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtField\\$CodeInitializer0\\.compileIfStatic\\:\\(Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;Ljavassist\\/bytecode\\/Bytecode\\;Ljavassist\\/compiler\\/Javac\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtField\\$DoubleInitializer\\.check\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtField\\$DoubleInitializer\\.compile\\:\\(Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;Ljavassist\\/bytecode\\/Bytecode\\;\\[Ljavassist\\/CtClass\\;Ljavassist\\/compiler\\/Javac\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtField\\$DoubleInitializer\\.compileIfStatic\\:\\(Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;Ljavassist\\/bytecode\\/Bytecode\\;Ljavassist\\/compiler\\/Javac\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtField\\$FloatInitializer\\.check\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtField\\$FloatInitializer\\.compile\\:\\(Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;Ljavassist\\/bytecode\\/Bytecode\\;\\[Ljavassist\\/CtClass\\;Ljavassist\\/compiler\\/Javac\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtField\\$FloatInitializer\\.compileIfStatic\\:\\(Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;Ljavassist\\/bytecode\\/Bytecode\\;Ljavassist\\/compiler\\/Javac\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtField\\$Initializer\\.byNewArray\\:\\(Ljavassist\\/CtClass\\;I\\)Ljavassist\\/CtField\\$Initializer\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtField\\$Initializer\\.check\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtField\\$Initializer\\.compile\\:\\(Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;Ljavassist\\/bytecode\\/Bytecode\\;\\[Ljavassist\\/CtClass\\;Ljavassist\\/compiler\\/Javac\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtField\\$Initializer\\.compileIfStatic\\:\\(Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;Ljavassist\\/bytecode\\/Bytecode\\;Ljavassist\\/compiler\\/Javac\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtField\\$IntInitializer\\.check\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtField\\$IntInitializer\\.compile\\:\\(Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;Ljavassist\\/bytecode\\/Bytecode\\;\\[Ljavassist\\/CtClass\\;Ljavassist\\/compiler\\/Javac\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtField\\$IntInitializer\\.compileIfStatic\\:\\(Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;Ljavassist\\/bytecode\\/Bytecode\\;Ljavassist\\/compiler\\/Javac\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtField\\$LongInitializer\\.check\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtField\\$LongInitializer\\.compile\\:\\(Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;Ljavassist\\/bytecode\\/Bytecode\\;\\[Ljavassist\\/CtClass\\;Ljavassist\\/compiler\\/Javac\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtField\\$LongInitializer\\.compileIfStatic\\:\\(Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;Ljavassist\\/bytecode\\/Bytecode\\;Ljavassist\\/compiler\\/Javac\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtField\\$MethodInitializer\\.compile\\:\\(Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;Ljavassist\\/bytecode\\/Bytecode\\;\\[Ljavassist\\/CtClass\\;Ljavassist\\/compiler\\/Javac\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtField\\$MethodInitializer\\.compileIfStatic\\:\\(Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;Ljavassist\\/bytecode\\/Bytecode\\;Ljavassist\\/compiler\\/Javac\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtField\\$MultiArrayInitializer\\.check\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtField\\$MultiArrayInitializer\\.compile\\:\\(Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;Ljavassist\\/bytecode\\/Bytecode\\;\\[Ljavassist\\/CtClass\\;Ljavassist\\/compiler\\/Javac\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtField\\$MultiArrayInitializer\\.compileIfStatic\\:\\(Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;Ljavassist\\/bytecode\\/Bytecode\\;Ljavassist\\/compiler\\/Javac\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtField\\$NewInitializer\\.compile\\:\\(Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;Ljavassist\\/bytecode\\/Bytecode\\;\\[Ljavassist\\/CtClass\\;Ljavassist\\/compiler\\/Javac\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtField\\$NewInitializer\\.compileIfStatic\\:\\(Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;Ljavassist\\/bytecode\\/Bytecode\\;Ljavassist\\/compiler\\/Javac\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtField\\$NewInitializer\\.compileStringParameter\\:\\(Ljavassist\\/bytecode\\/Bytecode\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtField\\$ParamInitializer\\.compile\\:\\(Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;Ljavassist\\/bytecode\\/Bytecode\\;\\[Ljavassist\\/CtClass\\;Ljavassist\\/compiler\\/Javac\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtField\\$ParamInitializer\\.compileIfStatic\\:\\(Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;Ljavassist\\/bytecode\\/Bytecode\\;Ljavassist\\/compiler\\/Javac\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.CtField\\$PtreeInitializer\\.compileExpr\\:\\(Ljavassist\\/compiler\\/Javac\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtField\\$StringInitializer\\.compile\\:\\(Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;Ljavassist\\/bytecode\\/Bytecode\\;\\[Ljavassist\\/CtClass\\;Ljavassist\\/compiler\\/Javac\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtField\\$StringInitializer\\.compileIfStatic\\:\\(Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;Ljavassist\\/bytecode\\/Bytecode\\;Ljavassist\\/compiler\\/Javac\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtField\\.\\<init\\>\\:\\(Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;Ljavassist\\/CtClass\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtField\\.\\<init\\>\\:\\(Ljavassist\\/CtField\\;Ljavassist\\/CtClass\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtField\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljavassist\\/CtClass\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtField\\.make\\:\\(Ljava\\/lang\\/String\\;Ljavassist\\/CtClass\\;\\)Ljavassist\\/CtField\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "javassist\\.CtField\\.getAnnotation\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "javassist\\.CtField\\.getAnnotations\\:\\(\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "javassist\\.CtField\\.getAnnotations\\:\\(Z\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtField\\.getType\\:\\(\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "javassist\\.CtMember\\$Cache\\.getAnnotation\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "javassist\\.CtMember\\$Cache\\.getAnnotations\\:\\(\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "javassist\\.CtMember\\.getAnnotation\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "javassist\\.CtMember\\.getAnnotations\\:\\(\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtMethod\\$ConstParameter\\.compile\\:\\(Ljavassist\\/bytecode\\/Bytecode\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtMethod\\$IntConstParameter\\.compile\\:\\(Ljavassist\\/bytecode\\/Bytecode\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtMethod\\$LongConstParameter\\.compile\\:\\(Ljavassist\\/bytecode\\/Bytecode\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtMethod\\$StringConstParameter\\.compile\\:\\(Ljavassist\\/bytecode\\/Bytecode\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtMethod\\.\\<init\\>\\:\\(Ljavassist\\/CtMethod\\;Ljavassist\\/CtClass\\;Ljavassist\\/ClassMap\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtMethod\\.make\\:\\(Ljava\\/lang\\/String\\;Ljavassist\\/CtClass\\;\\)Ljavassist\\/CtMethod\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtMethod\\.make\\:\\(Ljavassist\\/bytecode\\/MethodInfo\\;Ljavassist\\/CtClass\\;\\)Ljavassist\\/CtMethod\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtMethod\\.getReturnType\\:\\(\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtMethod\\.setBody\\:\\(Ljavassist\\/CtMethod\\;Ljavassist\\/ClassMap\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtMethod\\.setWrappedBody\\:\\(Ljavassist\\/CtMethod\\;Ljavassist\\/CtMethod\\$ConstParameter\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtNewClass\\.addConstructor\\:\\(Ljavassist\\/CtConstructor\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException", 
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.CtNewClass\\.toBytecode\\:\\(Ljava\\/io\\/DataOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException", 
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtNewClass\\.inheritAllConstructors\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtNewConstructor\\.make\\:\\(Ljava\\/lang\\/String\\;Ljavassist\\/CtClass\\;\\)Ljavassist\\/CtConstructor\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtNewConstructor\\.make\\:\\(\\[Ljavassist\\/CtClass\\;\\[Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;Ljavassist\\/CtClass\\;\\)Ljavassist\\/CtConstructor\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtNewConstructor\\.copy\\:\\(Ljavassist\\/CtConstructor\\;Ljavassist\\/CtClass\\;Ljavassist\\/ClassMap\\;\\)Ljavassist\\/CtConstructor\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtNewConstructor\\.defaultConstructor\\:\\(Ljavassist\\/CtClass\\;\\)Ljavassist\\/CtConstructor\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtNewConstructor\\.skeleton\\:\\(\\[Ljavassist\\/CtClass\\;\\[Ljavassist\\/CtClass\\;Ljavassist\\/CtClass\\;\\)Ljavassist\\/CtConstructor\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtNewConstructor\\.make\\:\\(\\[Ljavassist\\/CtClass\\;\\[Ljavassist\\/CtClass\\;Ljavassist\\/CtClass\\;\\)Ljavassist\\/CtConstructor\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtNewConstructor\\.make\\:\\(\\[Ljavassist\\/CtClass\\;\\[Ljavassist\\/CtClass\\;ILjavassist\\/CtMethod\\;Ljavassist\\/CtMethod\\$ConstParameter\\;Ljavassist\\/CtClass\\;\\)Ljavassist\\/CtConstructor\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtNewMethod\\.make\\:\\(Ljava\\/lang\\/String\\;Ljavassist\\/CtClass\\;\\)Ljavassist\\/CtMethod\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtNewMethod\\.make\\:\\(Ljava\\/lang\\/String\\;Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljavassist\\/CtMethod\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtNewMethod\\.make\\:\\(Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;\\[Ljavassist\\/CtClass\\;\\[Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;Ljavassist\\/CtClass\\;\\)Ljavassist\\/CtMethod\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtNewMethod\\.make\\:\\(ILjavassist\\/CtClass\\;Ljava\\/lang\\/String\\;\\[Ljavassist\\/CtClass\\;\\[Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;Ljavassist\\/CtClass\\;\\)Ljavassist\\/CtMethod\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtNewMethod\\.copy\\:\\(Ljavassist\\/CtMethod\\;Ljavassist\\/CtClass\\;Ljavassist\\/ClassMap\\;\\)Ljavassist\\/CtMethod\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtNewMethod\\.copy\\:\\(Ljavassist\\/CtMethod\\;Ljava\\/lang\\/String\\;Ljavassist\\/CtClass\\;Ljavassist\\/ClassMap\\;\\)Ljavassist\\/CtMethod\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtNewMethod\\.abstractMethod\\:\\(Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;\\[Ljavassist\\/CtClass\\;\\[Ljavassist\\/CtClass\\;Ljavassist\\/CtClass\\;\\)Ljavassist\\/CtMethod\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtNewMethod\\.getter\\:\\(Ljava\\/lang\\/String\\;Ljavassist\\/CtField\\;\\)Ljavassist\\/CtMethod\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtNewMethod\\.setter\\:\\(Ljava\\/lang\\/String\\;Ljavassist\\/CtField\\;\\)Ljavassist\\/CtMethod\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtNewMethod\\.delegator\\:\\(Ljavassist\\/CtMethod\\;Ljavassist\\/CtClass\\;\\)Ljavassist\\/CtMethod\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException", 
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.CtNewMethod\\.delegator0\\:\\(Ljavassist\\/CtMethod\\;Ljavassist\\/CtClass\\;\\)Ljavassist\\/CtMethod\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtNewMethod\\.wrapped\\:\\(Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;\\[Ljavassist\\/CtClass\\;\\[Ljavassist\\/CtClass\\;Ljavassist\\/CtMethod\\;Ljavassist\\/CtMethod\\$ConstParameter\\;Ljavassist\\/CtClass\\;\\)Ljavassist\\/CtMethod\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtNewWrappedConstructor\\.wrapped\\:\\(\\[Ljavassist\\/CtClass\\;\\[Ljavassist\\/CtClass\\;ILjavassist\\/CtMethod\\;Ljavassist\\/CtMethod\\$ConstParameter\\;Ljavassist\\/CtClass\\;\\)Ljavassist\\/CtConstructor\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtNewWrappedConstructor\\.makeBody\\:\\(Ljavassist\\/CtClass\\;Ljavassist\\/bytecode\\/ClassFile\\;ILjavassist\\/CtMethod\\;\\[Ljavassist\\/CtClass\\;Ljavassist\\/CtMethod\\$ConstParameter\\;\\)Ljavassist\\/bytecode\\/Bytecode\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtNewWrappedMethod\\.wrapped\\:\\(Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;\\[Ljavassist\\/CtClass\\;\\[Ljavassist\\/CtClass\\;Ljavassist\\/CtMethod\\;Ljavassist\\/CtMethod\\$ConstParameter\\;Ljavassist\\/CtClass\\;\\)Ljavassist\\/CtMethod\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtNewWrappedMethod\\.makeBody\\:\\(Ljavassist\\/CtClass\\;Ljavassist\\/bytecode\\/ClassFile\\;Ljavassist\\/CtMethod\\;\\[Ljavassist\\/CtClass\\;Ljavassist\\/CtClass\\;Ljavassist\\/CtMethod\\$ConstParameter\\;\\)Ljavassist\\/bytecode\\/Bytecode\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtNewWrappedMethod\\.makeBody0\\:\\(Ljavassist\\/CtClass\\;Ljavassist\\/bytecode\\/ClassFile\\;Ljavassist\\/CtMethod\\;Z\\[Ljavassist\\/CtClass\\;Ljavassist\\/CtClass\\;Ljavassist\\/CtMethod\\$ConstParameter\\;Ljavassist\\/bytecode\\/Bytecode\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtNewWrappedMethod\\.checkSignature\\:\\(Ljavassist\\/CtMethod\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode", 
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.CtNewWrappedMethod\\.addBodyMethod\\:\\(Ljavassist\\/CtClassType\\;Ljavassist\\/bytecode\\/ClassFile\\;Ljavassist\\/CtMethod\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.JarClassPath\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.JarClassPath\\.openClassfile\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.JarDirClassPath\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.JarDirClassPath\\.openClassfile\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException", 
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.Loader\\.addTranslator\\:\\(Ljavassist\\/ClassPool\\;Ljavassist\\/Translator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "javassist\\.Loader\\.main\\:\\(\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "javassist\\.Loader\\.run\\:\\(\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "javassist\\.Loader\\.run\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassFormatError", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "javassist\\.Loader\\.loadClass\\:\\(Ljava\\/lang\\/String\\;Z\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "javassist\\.Loader\\.findClass\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "javassist\\.Loader\\.loadClassByDelegation\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "javassist\\.Loader\\.delegateToParent\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.LoaderClassPath\\.openClassfile\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException", 
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.SerialVersionUID\\.setSerialVersionUID\\:\\(Ljavassist\\/CtClass\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.SerialVersionUID\\.isSerializable\\:\\(Ljavassist\\/CtClass\\;\\)Z"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.SerialVersionUID\\.calculateDefault\\:\\(Ljavassist\\/CtClass\\;\\)J"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException", 
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.Translator\\.start\\:\\(Ljavassist\\/ClassPool\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException", 
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.Translator\\.onLoad\\:\\(Ljavassist\\/ClassPool\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.URLClassPath\\.openClassfile0\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/net\\/URLConnection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.URLClassPath\\.fetchClass\\:\\(Ljava\\/lang\\/String\\;ILjava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.URLClassPath\\.fetchClass0\\:\\(Ljava\\/lang\\/String\\;ILjava\\/lang\\/String\\;\\)Ljava\\/net\\/URLConnection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AnnotationDefaultAttribute\\.\\<init\\>\\:\\(Ljavassist\\/bytecode\\/ConstPool\\;ILjava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AnnotationsAttribute\\$Copier\\.close\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AnnotationsAttribute\\$Copier\\.parameters\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AnnotationsAttribute\\$Copier\\.annotationArray\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AnnotationsAttribute\\$Copier\\.annotation\\:\\(III\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AnnotationsAttribute\\$Copier\\.memberValuePair\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AnnotationsAttribute\\$Copier\\.constValueMember\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AnnotationsAttribute\\$Copier\\.enumMemberValue\\:\\(III\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AnnotationsAttribute\\$Copier\\.classMemberValue\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AnnotationsAttribute\\$Copier\\.annotationMemberValue\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AnnotationsAttribute\\$Copier\\.arrayMemberValue\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AnnotationsAttribute\\$Parser\\.parseParameters\\:\\(\\)\\[\\[Ljavassist\\/bytecode\\/annotation\\/Annotation\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AnnotationsAttribute\\$Parser\\.parseAnnotations\\:\\(\\)\\[Ljavassist\\/bytecode\\/annotation\\/Annotation\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AnnotationsAttribute\\$Parser\\.parseMemberValue\\:\\(\\)Ljavassist\\/bytecode\\/annotation\\/MemberValue\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AnnotationsAttribute\\$Parser\\.parameters\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AnnotationsAttribute\\$Parser\\.annotationArray\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AnnotationsAttribute\\$Parser\\.annotation\\:\\(III\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AnnotationsAttribute\\$Parser\\.memberValuePair\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AnnotationsAttribute\\$Parser\\.constValueMember\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AnnotationsAttribute\\$Parser\\.enumMemberValue\\:\\(III\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AnnotationsAttribute\\$Parser\\.classMemberValue\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AnnotationsAttribute\\$Parser\\.annotationMemberValue\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AnnotationsAttribute\\$Parser\\.arrayMemberValue\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AnnotationsAttribute\\$Renamer\\.annotation\\:\\(III\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AnnotationsAttribute\\$Renamer\\.enumMemberValue\\:\\(III\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AnnotationsAttribute\\$Renamer\\.classMemberValue\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AnnotationsAttribute\\$Walker\\.parameters\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AnnotationsAttribute\\$Walker\\.parameters\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AnnotationsAttribute\\$Walker\\.annotationArray\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AnnotationsAttribute\\$Walker\\.annotationArray\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AnnotationsAttribute\\$Walker\\.annotationArray\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AnnotationsAttribute\\$Walker\\.annotation\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AnnotationsAttribute\\$Walker\\.annotation\\:\\(III\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AnnotationsAttribute\\$Walker\\.memberValuePair\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AnnotationsAttribute\\$Walker\\.memberValuePair\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AnnotationsAttribute\\$Walker\\.memberValue\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AnnotationsAttribute\\$Walker\\.constValueMember\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AnnotationsAttribute\\$Walker\\.enumMemberValue\\:\\(III\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AnnotationsAttribute\\$Walker\\.classMemberValue\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AnnotationsAttribute\\$Walker\\.annotationMemberValue\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AnnotationsAttribute\\$Walker\\.arrayMemberValue\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AnnotationsAttribute\\.\\<init\\>\\:\\(Ljavassist\\/bytecode\\/ConstPool\\;ILjava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AttributeInfo\\.\\<init\\>\\:\\(Ljavassist\\/bytecode\\/ConstPool\\;ILjava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AttributeInfo\\.read\\:\\(Ljavassist\\/bytecode\\/ConstPool\\;Ljava\\/io\\/DataInputStream\\;\\)Ljavassist\\/bytecode\\/AttributeInfo\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AttributeInfo\\.write\\:\\(Ljava\\/io\\/DataOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.AttributeInfo\\.writeAll\\:\\(Ljava\\/util\\/ArrayList\\;Ljava\\/io\\/DataOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.BootstrapMethodsAttribute\\.\\<init\\>\\:\\(Ljavassist\\/bytecode\\/ConstPool\\;ILjava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.ByteStream\\.writeTo\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.ByteVector\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.ClassFile\\.\\<init\\>\\:\\(Ljava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.ClassFile\\.setSuperclass\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.DuplicateMemberException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.ClassFile\\.addField\\:\\(Ljavassist\\/bytecode\\/FieldInfo\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.DuplicateMemberException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.ClassFile\\.testExistingField\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.DuplicateMemberException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.ClassFile\\.addMethod\\:\\(Ljavassist\\/bytecode\\/MethodInfo\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.DuplicateMemberException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.ClassFile\\.testExistingMethod\\:\\(Ljavassist\\/bytecode\\/MethodInfo\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.ClassFile\\.read\\:\\(Ljava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.ClassFile\\.write\\:\\(Ljava\\/io\\/DataOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.ClassFileWriter\\$AttributeWriter\\.write\\:\\(Ljava\\/io\\/DataOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.ClassFileWriter\\$FieldWriter\\.write\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.ClassFileWriter\\$MethodWriter\\.write\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.ClassFileWriter\\.end\\:\\(Ljava\\/io\\/DataOutputStream\\;III\\[ILjavassist\\/bytecode\\/ClassFileWriter\\$AttributeWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.ClassInfo\\.\\<init\\>\\:\\(Ljava\\/io\\/DataInputStream\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.ClassInfo\\.write\\:\\(Ljava\\/io\\/DataOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeAnalyzer\\.computeMaxStack\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeAnalyzer\\.visitBytecode\\:\\(Ljavassist\\/bytecode\\/CodeIterator\\;\\[II\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeAnalyzer\\.processBranch\\:\\(ILjavassist\\/bytecode\\/CodeIterator\\;II\\[II\\[I\\)Z"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeAnalyzer\\.checkTarget\\:\\(III\\[II\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeAnalyzer\\.visitInst\\:\\(ILjavassist\\/bytecode\\/CodeIterator\\;II\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeAttribute\\$LdcEntry\\.doit\\:\\(\\[BLjavassist\\/bytecode\\/CodeAttribute\\$LdcEntry\\;Ljavassist\\/bytecode\\/ExceptionTable\\;Ljavassist\\/bytecode\\/CodeAttribute\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeAttribute\\.\\<init\\>\\:\\(Ljavassist\\/bytecode\\/ConstPool\\;Ljavassist\\/bytecode\\/CodeAttribute\\;Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeAttribute\\.\\<init\\>\\:\\(Ljavassist\\/bytecode\\/ConstPool\\;ILjava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.CodeAttribute$RuntimeCopyException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeAttribute\\.copy\\:\\(Ljavassist\\/bytecode\\/ConstPool\\;Ljava\\/util\\/Map\\;\\)Ljavassist\\/bytecode\\/AttributeInfo\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeAttribute\\.write\\:\\(Ljava\\/io\\/DataOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeAttribute\\.computeMaxStack\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeAttribute\\.copyCode\\:\\(Ljavassist\\/bytecode\\/ConstPool\\;Ljava\\/util\\/Map\\;Ljavassist\\/bytecode\\/ExceptionTable\\;Ljavassist\\/bytecode\\/CodeAttribute\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeAttribute\\.copyCode\\:\\(\\[BIILjavassist\\/bytecode\\/ConstPool\\;\\[BLjavassist\\/bytecode\\/ConstPool\\;Ljava\\/util\\/Map\\;\\)Ljavassist\\/bytecode\\/CodeAttribute\\$LdcEntry\\;"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeAttribute\\.insertLocalVar\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeAttribute\\.shiftIndex\\:\\(Ljavassist\\/bytecode\\/CodeIterator\\;II\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeAttribute\\.shiftIndex8\\:\\(Ljavassist\\/bytecode\\/CodeIterator\\;IIII\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeAttribute\\.shiftIndex0\\:\\(Ljavassist\\/bytecode\\/CodeIterator\\;IIIIII\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeIterator\\$Branch\\.write\\:\\(I\\[BI\\[B\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeIterator\\$Pointers\\.shiftPc\\:\\(IIZ\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeIterator\\$Pointers\\.shiftForSwitch\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeIterator\\$Switcher\\.write\\:\\(I\\[BI\\[B\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeIterator\\$Switcher\\.adjustOffsets\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeIterator\\.next\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeIterator\\.skipConstructor\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeIterator\\.skipSuperConstructor\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeIterator\\.skipThisConstructor\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeIterator\\.skipSuperConstructor0\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeIterator\\.insert\\:\\(\\[B\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeIterator\\.insert\\:\\(I\\[B\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeIterator\\.insertAt\\:\\(I\\[B\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeIterator\\.insertEx\\:\\(\\[B\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeIterator\\.insertEx\\:\\(I\\[B\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeIterator\\.insertExAt\\:\\(I\\[B\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeIterator\\.insert0\\:\\(I\\[BZ\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeIterator\\.insertGap\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeIterator\\.insertGap\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeIterator\\.insertExGap\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeIterator\\.insertExGap\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeIterator\\.insertGapAt\\:\\(IIZ\\)Ljavassist\\/bytecode\\/CodeIterator\\$Gap\\;"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeIterator\\.nextOpcode\\:\\(\\[BI\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeIterator\\.insertGapCore0\\:\\(\\[BIIZLjavassist\\/bytecode\\/ExceptionTable\\;Ljavassist\\/bytecode\\/CodeAttribute\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode", 
   "javassist.bytecode.CodeIterator$AlignmentException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeIterator\\.insertGapCore1\\:\\(\\[BIIZLjavassist\\/bytecode\\/ExceptionTable\\;Ljavassist\\/bytecode\\/CodeAttribute\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode", 
   "javassist.bytecode.CodeIterator$AlignmentException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeIterator\\.insertGap2\\:\\(\\[BIII\\[BZ\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeIterator\\.changeLdcToLdcW\\:\\(\\[BLjavassist\\/bytecode\\/ExceptionTable\\;Ljavassist\\/bytecode\\/CodeAttribute\\;Ljavassist\\/bytecode\\/CodeAttribute\\$LdcEntry\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeIterator\\.insertGapCore0w\\:\\(\\[BIIZLjavassist\\/bytecode\\/ExceptionTable\\;Ljavassist\\/bytecode\\/CodeAttribute\\;Ljavassist\\/bytecode\\/CodeIterator\\$Gap\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeIterator\\.insertGap2w\\:\\(\\[BIIZLjava\\/util\\/ArrayList\\;Ljavassist\\/bytecode\\/CodeIterator\\$Pointers\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeIterator\\.makeJumpList\\:\\(\\[BILjavassist\\/bytecode\\/CodeIterator\\$Pointers\\;\\)Ljava\\/util\\/ArrayList\\;"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.CodeIterator\\.makeExapndedCode\\:\\(\\[BLjava\\/util\\/ArrayList\\;II\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.ConstInfo\\.write\\:\\(Ljava\\/io\\/DataOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.ConstInfoPadding\\.write\\:\\(Ljava\\/io\\/DataOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.ConstPool\\.\\<init\\>\\:\\(Ljava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.ConstPool\\.read\\:\\(Ljava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.ConstPool\\.readOne\\:\\(Ljava\\/io\\/DataInputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.ConstPool\\.write\\:\\(Ljava\\/io\\/DataOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.ConstantAttribute\\.\\<init\\>\\:\\(Ljavassist\\/bytecode\\/ConstPool\\;ILjava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.DeprecatedAttribute\\.\\<init\\>\\:\\(Ljavassist\\/bytecode\\/ConstPool\\;ILjava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.Descriptor\\.getParameterTypes\\:\\(Ljava\\/lang\\/String\\;Ljavassist\\/ClassPool\\;\\)\\[Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.Descriptor\\.getReturnType\\:\\(Ljava\\/lang\\/String\\;Ljavassist\\/ClassPool\\;\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.Descriptor\\.toCtClass\\:\\(Ljava\\/lang\\/String\\;Ljavassist\\/ClassPool\\;\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.Descriptor\\.toCtClass\\:\\(Ljavassist\\/ClassPool\\;Ljava\\/lang\\/String\\;I\\[Ljavassist\\/CtClass\\;I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.DoubleInfo\\.\\<init\\>\\:\\(Ljava\\/io\\/DataInputStream\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.DoubleInfo\\.write\\:\\(Ljava\\/io\\/DataOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.EnclosingMethodAttribute\\.\\<init\\>\\:\\(Ljavassist\\/bytecode\\/ConstPool\\;ILjava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.ExceptionTable\\.\\<init\\>\\:\\(Ljavassist\\/bytecode\\/ConstPool\\;Ljava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.ExceptionTable\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.ExceptionTable\\.write\\:\\(Ljava\\/io\\/DataOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.ExceptionsAttribute\\.\\<init\\>\\:\\(Ljavassist\\/bytecode\\/ConstPool\\;ILjava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.FieldInfo\\.\\<init\\>\\:\\(Ljavassist\\/bytecode\\/ConstPool\\;Ljava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.FieldInfo\\.read\\:\\(Ljava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.FieldInfo\\.write\\:\\(Ljava\\/io\\/DataOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.FieldrefInfo\\.\\<init\\>\\:\\(Ljava\\/io\\/DataInputStream\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.FloatInfo\\.\\<init\\>\\:\\(Ljava\\/io\\/DataInputStream\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.FloatInfo\\.write\\:\\(Ljava\\/io\\/DataOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.InnerClassesAttribute\\.\\<init\\>\\:\\(Ljavassist\\/bytecode\\/ConstPool\\;ILjava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.IntegerInfo\\.\\<init\\>\\:\\(Ljava\\/io\\/DataInputStream\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.IntegerInfo\\.write\\:\\(Ljava\\/io\\/DataOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.InterfaceMethodrefInfo\\.\\<init\\>\\:\\(Ljava\\/io\\/DataInputStream\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.InvokeDynamicInfo\\.\\<init\\>\\:\\(Ljava\\/io\\/DataInputStream\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.InvokeDynamicInfo\\.write\\:\\(Ljava\\/io\\/DataOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.LineNumberAttribute\\.\\<init\\>\\:\\(Ljavassist\\/bytecode\\/ConstPool\\;ILjava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.LocalVariableAttribute\\.\\<init\\>\\:\\(Ljavassist\\/bytecode\\/ConstPool\\;ILjava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.LocalVariableTypeAttribute\\.\\<init\\>\\:\\(Ljavassist\\/bytecode\\/ConstPool\\;ILjava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.LongInfo\\.\\<init\\>\\:\\(Ljava\\/io\\/DataInputStream\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.LongInfo\\.write\\:\\(Ljava\\/io\\/DataOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.MemberrefInfo\\.\\<init\\>\\:\\(Ljava\\/io\\/DataInputStream\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.MemberrefInfo\\.write\\:\\(Ljava\\/io\\/DataOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.MethodHandleInfo\\.\\<init\\>\\:\\(Ljava\\/io\\/DataInputStream\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.MethodHandleInfo\\.write\\:\\(Ljava\\/io\\/DataOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.MethodInfo\\.\\<init\\>\\:\\(Ljavassist\\/bytecode\\/ConstPool\\;Ljava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.MethodInfo\\.\\<init\\>\\:\\(Ljavassist\\/bytecode\\/ConstPool\\;Ljava\\/lang\\/String\\;Ljavassist\\/bytecode\\/MethodInfo\\;Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.MethodInfo\\.rebuildStackMapIf6\\:\\(Ljavassist\\/ClassPool\\;Ljavassist\\/bytecode\\/ClassFile\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.MethodInfo\\.rebuildStackMap\\:\\(Ljavassist\\/ClassPool\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.MethodInfo\\.rebuildStackMapForME\\:\\(Ljavassist\\/ClassPool\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.MethodInfo\\.setSuperclass\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.MethodInfo\\.read\\:\\(Ljavassist\\/bytecode\\/MethodInfo\\;Ljava\\/lang\\/String\\;Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.MethodInfo\\.read\\:\\(Ljava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.MethodInfo\\.write\\:\\(Ljava\\/io\\/DataOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.MethodParametersAttribute\\.\\<init\\>\\:\\(Ljavassist\\/bytecode\\/ConstPool\\;ILjava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.MethodTypeInfo\\.\\<init\\>\\:\\(Ljava\\/io\\/DataInputStream\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.MethodTypeInfo\\.write\\:\\(Ljava\\/io\\/DataOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.MethodrefInfo\\.\\<init\\>\\:\\(Ljava\\/io\\/DataInputStream\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.ModuleInfo\\.\\<init\\>\\:\\(Ljava\\/io\\/DataInputStream\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.ModuleInfo\\.write\\:\\(Ljava\\/io\\/DataOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.NameAndTypeInfo\\.\\<init\\>\\:\\(Ljava\\/io\\/DataInputStream\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.NameAndTypeInfo\\.write\\:\\(Ljava\\/io\\/DataOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.PackageInfo\\.\\<init\\>\\:\\(Ljava\\/io\\/DataInputStream\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.PackageInfo\\.write\\:\\(Ljava\\/io\\/DataOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.ParameterAnnotationsAttribute\\.\\<init\\>\\:\\(Ljavassist\\/bytecode\\/ConstPool\\;ILjava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.SignatureAttribute\\$Cursor\\.indexOf\\:\\(Ljava\\/lang\\/String\\;I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.SignatureAttribute\\.\\<init\\>\\:\\(Ljavassist\\/bytecode\\/ConstPool\\;ILjava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.SignatureAttribute\\.toClassSignature\\:\\(Ljava\\/lang\\/String\\;\\)Ljavassist\\/bytecode\\/SignatureAttribute\\$ClassSignature\\;"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.SignatureAttribute\\.toMethodSignature\\:\\(Ljava\\/lang\\/String\\;\\)Ljavassist\\/bytecode\\/SignatureAttribute\\$MethodSignature\\;"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.SignatureAttribute\\.toFieldSignature\\:\\(Ljava\\/lang\\/String\\;\\)Ljavassist\\/bytecode\\/SignatureAttribute\\$ObjectType\\;"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.SignatureAttribute\\.toTypeSignature\\:\\(Ljava\\/lang\\/String\\;\\)Ljavassist\\/bytecode\\/SignatureAttribute\\$Type\\;"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode", 
   "java.lang.IndexOutOfBoundsException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.SignatureAttribute\\.parseSig\\:\\(Ljava\\/lang\\/String\\;\\)Ljavassist\\/bytecode\\/SignatureAttribute\\$ClassSignature\\;"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.SignatureAttribute\\.parseMethodSig\\:\\(Ljava\\/lang\\/String\\;\\)Ljavassist\\/bytecode\\/SignatureAttribute\\$MethodSignature\\;"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.SignatureAttribute\\.parseTypeParams\\:\\(Ljava\\/lang\\/String\\;Ljavassist\\/bytecode\\/SignatureAttribute\\$Cursor\\;\\)\\[Ljavassist\\/bytecode\\/SignatureAttribute\\$TypeParameter\\;"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.SignatureAttribute\\.parseObjectType\\:\\(Ljava\\/lang\\/String\\;Ljavassist\\/bytecode\\/SignatureAttribute\\$Cursor\\;Z\\)Ljavassist\\/bytecode\\/SignatureAttribute\\$ObjectType\\;"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.SignatureAttribute\\.parseClassType\\:\\(Ljava\\/lang\\/String\\;Ljavassist\\/bytecode\\/SignatureAttribute\\$Cursor\\;\\)Ljavassist\\/bytecode\\/SignatureAttribute\\$ClassType\\;"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.SignatureAttribute\\.parseClassType2\\:\\(Ljava\\/lang\\/String\\;Ljavassist\\/bytecode\\/SignatureAttribute\\$Cursor\\;Ljavassist\\/bytecode\\/SignatureAttribute\\$ClassType\\;\\)Ljavassist\\/bytecode\\/SignatureAttribute\\$ClassType\\;"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.SignatureAttribute\\.parseTypeArgs\\:\\(Ljava\\/lang\\/String\\;Ljavassist\\/bytecode\\/SignatureAttribute\\$Cursor\\;\\)\\[Ljavassist\\/bytecode\\/SignatureAttribute\\$TypeArgument\\;"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.SignatureAttribute\\.parseArray\\:\\(Ljava\\/lang\\/String\\;Ljavassist\\/bytecode\\/SignatureAttribute\\$Cursor\\;\\)Ljavassist\\/bytecode\\/SignatureAttribute\\$ObjectType\\;"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.SignatureAttribute\\.parseType\\:\\(Ljava\\/lang\\/String\\;Ljavassist\\/bytecode\\/SignatureAttribute\\$Cursor\\;\\)Ljavassist\\/bytecode\\/SignatureAttribute\\$Type\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.SourceFileAttribute\\.\\<init\\>\\:\\(Ljavassist\\/bytecode\\/ConstPool\\;ILjava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.StackMap\\.\\<init\\>\\:\\(Ljavassist\\/bytecode\\/ConstPool\\;ILjava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.StackMap\\.insertLocal\\:\\(III\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.StackMap\\.shiftPc\\:\\(IIZ\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.StackMap\\.shiftForSwitch\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.StackMap\\.removeNew\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.StackMapTable\\$Shifter\\.doit\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.StackMapTable\\$SimpleCopy\\.doit\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.StackMapTable\\$Walker\\.parse\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.StackMapTable\\$Walker\\.stackMapFrames\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.StackMapTable\\$Walker\\.sameFrame\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.StackMapTable\\$Walker\\.sameLocals\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.StackMapTable\\$Walker\\.sameLocals\\:\\(IIII\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.StackMapTable\\$Walker\\.chopFrame\\:\\(III\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.StackMapTable\\$Walker\\.appendFrame\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.StackMapTable\\$Walker\\.appendFrame\\:\\(II\\[I\\[I\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.StackMapTable\\$Walker\\.fullFrame\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.StackMapTable\\$Walker\\.fullFrame\\:\\(II\\[I\\[I\\[I\\[I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.StackMapTable\\.\\<init\\>\\:\\(Ljavassist\\/bytecode\\/ConstPool\\;ILjava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.StackMapTable$RuntimeCopyException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.StackMapTable\\.copy\\:\\(Ljavassist\\/bytecode\\/ConstPool\\;Ljava\\/util\\/Map\\;\\)Ljavassist\\/bytecode\\/AttributeInfo\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.StackMapTable\\.write\\:\\(Ljava\\/io\\/DataOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.StackMapTable\\.insertLocal\\:\\(III\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.StackMapTable\\.shiftPc\\:\\(IIZ\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.StackMapTable\\.shiftForSwitch\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.StackMapTable\\.removeNew\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.StringInfo\\.\\<init\\>\\:\\(Ljava\\/io\\/DataInputStream\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.StringInfo\\.write\\:\\(Ljava\\/io\\/DataOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.SyntheticAttribute\\.\\<init\\>\\:\\(Ljavassist\\/bytecode\\/ConstPool\\;ILjava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.TypeAnnotationsAttribute\\$Copier\\.annotationArray\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.TypeAnnotationsAttribute\\$Renamer\\.annotationArray\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.TypeAnnotationsAttribute\\$SubCopier\\.typeParameterTarget\\:\\(III\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.TypeAnnotationsAttribute\\$SubCopier\\.supertypeTarget\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.TypeAnnotationsAttribute\\$SubCopier\\.typeParameterBoundTarget\\:\\(IIII\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.TypeAnnotationsAttribute\\$SubCopier\\.emptyTarget\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.TypeAnnotationsAttribute\\$SubCopier\\.formalParameterTarget\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.TypeAnnotationsAttribute\\$SubCopier\\.throwsTarget\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.TypeAnnotationsAttribute\\$SubCopier\\.localvarTarget\\:\\(III\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.TypeAnnotationsAttribute\\$SubCopier\\.localvarTarget\\:\\(IIIII\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.TypeAnnotationsAttribute\\$SubCopier\\.catchTarget\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.TypeAnnotationsAttribute\\$SubCopier\\.offsetTarget\\:\\(III\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.TypeAnnotationsAttribute\\$SubCopier\\.typeArgumentTarget\\:\\(IIII\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.TypeAnnotationsAttribute\\$SubCopier\\.typePath\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.TypeAnnotationsAttribute\\$SubCopier\\.typePath\\:\\(III\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.TypeAnnotationsAttribute\\$SubWalker\\.targetInfo\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.TypeAnnotationsAttribute\\$SubWalker\\.typeParameterTarget\\:\\(III\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.TypeAnnotationsAttribute\\$SubWalker\\.supertypeTarget\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.TypeAnnotationsAttribute\\$SubWalker\\.typeParameterBoundTarget\\:\\(IIII\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.TypeAnnotationsAttribute\\$SubWalker\\.emptyTarget\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.TypeAnnotationsAttribute\\$SubWalker\\.formalParameterTarget\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.TypeAnnotationsAttribute\\$SubWalker\\.throwsTarget\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.TypeAnnotationsAttribute\\$SubWalker\\.localvarTarget\\:\\(III\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.TypeAnnotationsAttribute\\$SubWalker\\.localvarTarget\\:\\(IIIII\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.TypeAnnotationsAttribute\\$SubWalker\\.catchTarget\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.TypeAnnotationsAttribute\\$SubWalker\\.offsetTarget\\:\\(III\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.TypeAnnotationsAttribute\\$SubWalker\\.typeArgumentTarget\\:\\(IIII\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.TypeAnnotationsAttribute\\$SubWalker\\.typePath\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.TypeAnnotationsAttribute\\$SubWalker\\.typePath\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.TypeAnnotationsAttribute\\$SubWalker\\.typePath\\:\\(III\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.TypeAnnotationsAttribute\\$TAWalker\\.annotationArray\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.TypeAnnotationsAttribute\\.\\<init\\>\\:\\(Ljavassist\\/bytecode\\/ConstPool\\;ILjava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.Utf8Info\\.\\<init\\>\\:\\(Ljava\\/io\\/DataInputStream\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.Utf8Info\\.write\\:\\(Ljava\\/io\\/DataOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.analysis\\.Analyzer\\.analyze\\:\\(Ljavassist\\/CtClass\\;Ljavassist\\/bytecode\\/MethodInfo\\;\\)\\[Ljavassist\\/bytecode\\/analysis\\/Frame\\;"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.analysis\\.Analyzer\\.analyze\\:\\(Ljavassist\\/CtMethod\\;\\)\\[Ljavassist\\/bytecode\\/analysis\\/Frame\\;"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.analysis\\.Analyzer\\.analyzeNextEntry\\:\\(Ljavassist\\/bytecode\\/MethodInfo\\;Ljavassist\\/bytecode\\/CodeIterator\\;Ljavassist\\/bytecode\\/analysis\\/IntQueue\\;Ljavassist\\/bytecode\\/analysis\\/Executor\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.analysis\\.Analyzer\\.getNext\\:\\(Ljavassist\\/bytecode\\/CodeIterator\\;II\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.analysis\\.Analyzer\\.lookAhead\\:\\(Ljavassist\\/bytecode\\/CodeIterator\\;I\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.analysis\\.Analyzer\\.mergeJsr\\:\\(Ljavassist\\/bytecode\\/analysis\\/IntQueue\\;Ljavassist\\/bytecode\\/analysis\\/Frame\\;Ljavassist\\/bytecode\\/analysis\\/Subroutine\\;II\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.analysis\\.Analyzer\\.mergeLookupSwitch\\:\\(Ljavassist\\/bytecode\\/analysis\\/IntQueue\\;ILjavassist\\/bytecode\\/CodeIterator\\;Ljavassist\\/bytecode\\/analysis\\/Frame\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.analysis\\.Analyzer\\.mergeRet\\:\\(Ljavassist\\/bytecode\\/analysis\\/IntQueue\\;Ljavassist\\/bytecode\\/CodeIterator\\;ILjavassist\\/bytecode\\/analysis\\/Frame\\;Ljavassist\\/bytecode\\/analysis\\/Subroutine\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.analysis\\.Analyzer\\.mergeTableSwitch\\:\\(Ljavassist\\/bytecode\\/analysis\\/IntQueue\\;ILjavassist\\/bytecode\\/CodeIterator\\;Ljavassist\\/bytecode\\/analysis\\/Frame\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.analysis\\.ControlFlow\\.\\<init\\>\\:\\(Ljavassist\\/CtMethod\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.analysis\\.ControlFlow\\.\\<init\\>\\:\\(Ljavassist\\/CtClass\\;Ljavassist\\/bytecode\\/MethodInfo\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.analysis\\.ControlFlow\\.frameAt\\:\\(I\\)Ljavassist\\/bytecode\\/analysis\\/Frame\\;"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.analysis\\.Executor\\.execute\\:\\(Ljavassist\\/bytecode\\/MethodInfo\\;ILjavassist\\/bytecode\\/CodeIterator\\;Ljavassist\\/bytecode\\/analysis\\/Frame\\;Ljavassist\\/bytecode\\/analysis\\/Subroutine\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.analysis\\.Executor\\.evalArrayLoad\\:\\(Ljavassist\\/bytecode\\/analysis\\/Type\\;Ljavassist\\/bytecode\\/analysis\\/Frame\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.analysis\\.Executor\\.evalArrayStore\\:\\(Ljavassist\\/bytecode\\/analysis\\/Type\\;Ljavassist\\/bytecode\\/analysis\\/Frame\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.analysis\\.Executor\\.evalBinaryMath\\:\\(Ljavassist\\/bytecode\\/analysis\\/Type\\;Ljavassist\\/bytecode\\/analysis\\/Frame\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.analysis\\.Executor\\.evalGetField\\:\\(IILjavassist\\/bytecode\\/analysis\\/Frame\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.analysis\\.Executor\\.evalInvokeIntfMethod\\:\\(IILjavassist\\/bytecode\\/analysis\\/Frame\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.analysis\\.Executor\\.evalInvokeMethod\\:\\(IILjavassist\\/bytecode\\/analysis\\/Frame\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.analysis\\.Executor\\.evalInvokeDynamic\\:\\(IILjavassist\\/bytecode\\/analysis\\/Frame\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.analysis\\.Executor\\.evalLDC\\:\\(ILjavassist\\/bytecode\\/analysis\\/Frame\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.analysis\\.Executor\\.evalLoad\\:\\(Ljavassist\\/bytecode\\/analysis\\/Type\\;ILjavassist\\/bytecode\\/analysis\\/Frame\\;Ljavassist\\/bytecode\\/analysis\\/Subroutine\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.analysis\\.Executor\\.evalNewArray\\:\\(ILjavassist\\/bytecode\\/CodeIterator\\;Ljavassist\\/bytecode\\/analysis\\/Frame\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.analysis\\.Executor\\.evalNewObjectArray\\:\\(ILjavassist\\/bytecode\\/CodeIterator\\;Ljavassist\\/bytecode\\/analysis\\/Frame\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.analysis\\.Executor\\.evalPutField\\:\\(IILjavassist\\/bytecode\\/analysis\\/Frame\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.analysis\\.Executor\\.evalShift\\:\\(Ljavassist\\/bytecode\\/analysis\\/Type\\;Ljavassist\\/bytecode\\/analysis\\/Frame\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.analysis\\.Executor\\.evalStore\\:\\(Ljavassist\\/bytecode\\/analysis\\/Type\\;ILjavassist\\/bytecode\\/analysis\\/Frame\\;Ljavassist\\/bytecode\\/analysis\\/Subroutine\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.analysis\\.Executor\\.evalWide\\:\\(ILjavassist\\/bytecode\\/CodeIterator\\;Ljavassist\\/bytecode\\/analysis\\/Frame\\;Ljavassist\\/bytecode\\/analysis\\/Subroutine\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.analysis\\.Executor\\.getType\\:\\(Ljava\\/lang\\/String\\;\\)Ljavassist\\/bytecode\\/analysis\\/Type\\;"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.analysis\\.Executor\\.paramTypesFromDesc\\:\\(Ljava\\/lang\\/String\\;\\)\\[Ljavassist\\/bytecode\\/analysis\\/Type\\;"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.analysis\\.Executor\\.returnTypeFromDesc\\:\\(Ljava\\/lang\\/String\\;\\)Ljavassist\\/bytecode\\/analysis\\/Type\\;"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.analysis\\.Executor\\.resolveClassInfo\\:\\(Ljava\\/lang\\/String\\;\\)Ljavassist\\/bytecode\\/analysis\\/Type\\;"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.analysis\\.Executor\\.typeFromDesc\\:\\(Ljava\\/lang\\/String\\;\\)Ljavassist\\/bytecode\\/analysis\\/Type\\;"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.analysis\\.Executor\\.verifyAssignable\\:\\(Ljavassist\\/bytecode\\/analysis\\/Type\\;Ljavassist\\/bytecode\\/analysis\\/Type\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.analysis\\.SubroutineScanner\\.scan\\:\\(Ljavassist\\/bytecode\\/MethodInfo\\;\\)\\[Ljavassist\\/bytecode\\/analysis\\/Subroutine\\;"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.analysis\\.SubroutineScanner\\.scan\\:\\(ILjavassist\\/bytecode\\/CodeIterator\\;Ljavassist\\/bytecode\\/analysis\\/Subroutine\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.analysis\\.SubroutineScanner\\.scanOp\\:\\(ILjavassist\\/bytecode\\/CodeIterator\\;Ljavassist\\/bytecode\\/analysis\\/Subroutine\\;\\)Z"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.analysis\\.SubroutineScanner\\.scanLookupSwitch\\:\\(ILjavassist\\/bytecode\\/CodeIterator\\;Ljavassist\\/bytecode\\/analysis\\/Subroutine\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.analysis\\.SubroutineScanner\\.scanTableSwitch\\:\\(ILjavassist\\/bytecode\\/CodeIterator\\;Ljavassist\\/bytecode\\/analysis\\/Subroutine\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.analysis\\.Type\\.findCommonSuperClass\\:\\(Ljavassist\\/CtClass\\;Ljavassist\\/CtClass\\;\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.analysis\\.Type\\.mergeClasses\\:\\(Ljavassist\\/bytecode\\/analysis\\/Type\\;\\)Ljavassist\\/bytecode\\/analysis\\/Type\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.Annotation\\.\\<init\\>\\:\\(Ljavassist\\/bytecode\\/ConstPool\\;Ljavassist\\/CtClass\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.Annotation\\.createMemberValue\\:\\(Ljavassist\\/bytecode\\/ConstPool\\;Ljavassist\\/CtClass\\;\\)Ljavassist\\/bytecode\\/annotation\\/MemberValue\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "javassist.bytecode.annotation.NoSuchClassError"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.Annotation\\.toAnnotationType\\:\\(Ljava\\/lang\\/ClassLoader\\;Ljavassist\\/ClassPool\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.Annotation\\.write\\:\\(Ljavassist\\/bytecode\\/annotation\\/AnnotationsWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.AnnotationImpl\\.make\\:\\(Ljava\\/lang\\/ClassLoader\\;Ljava\\/lang\\/Class\\;Ljavassist\\/ClassPool\\;Ljavassist\\/bytecode\\/annotation\\/Annotation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.AnnotationImpl\\.invoke\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.lang.RuntimeException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.AnnotationImpl\\.getDefault\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/reflect\\/Method\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.AnnotationImpl\\.checkEquals\\:\\(Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.AnnotationMemberValue\\.getValue\\:\\(Ljava\\/lang\\/ClassLoader\\;Ljavassist\\/ClassPool\\;Ljava\\/lang\\/reflect\\/Method\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.AnnotationMemberValue\\.getType\\:\\(Ljava\\/lang\\/ClassLoader\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.AnnotationMemberValue\\.write\\:\\(Ljavassist\\/bytecode\\/annotation\\/AnnotationsWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.AnnotationsWriter\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.AnnotationsWriter\\.numParameters\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.AnnotationsWriter\\.numAnnotations\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.AnnotationsWriter\\.annotation\\:\\(Ljava\\/lang\\/String\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.AnnotationsWriter\\.annotation\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.AnnotationsWriter\\.memberValuePair\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.AnnotationsWriter\\.memberValuePair\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.AnnotationsWriter\\.constValueIndex\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.AnnotationsWriter\\.constValueIndex\\:\\(B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.AnnotationsWriter\\.constValueIndex\\:\\(C\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.AnnotationsWriter\\.constValueIndex\\:\\(S\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.AnnotationsWriter\\.constValueIndex\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.AnnotationsWriter\\.constValueIndex\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.AnnotationsWriter\\.constValueIndex\\:\\(F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.AnnotationsWriter\\.constValueIndex\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.AnnotationsWriter\\.constValueIndex\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.AnnotationsWriter\\.constValueIndex\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.AnnotationsWriter\\.enumConstValue\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.AnnotationsWriter\\.enumConstValue\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.AnnotationsWriter\\.classInfoIndex\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.AnnotationsWriter\\.classInfoIndex\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.AnnotationsWriter\\.annotationValue\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.AnnotationsWriter\\.arrayValue\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.AnnotationsWriter\\.write16bit\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.ArrayMemberValue\\.getValue\\:\\(Ljava\\/lang\\/ClassLoader\\;Ljavassist\\/ClassPool\\;Ljava\\/lang\\/reflect\\/Method\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.ArrayMemberValue\\.getType\\:\\(Ljava\\/lang\\/ClassLoader\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.ArrayMemberValue\\.write\\:\\(Ljavassist\\/bytecode\\/annotation\\/AnnotationsWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.BooleanMemberValue\\.write\\:\\(Ljavassist\\/bytecode\\/annotation\\/AnnotationsWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.ByteMemberValue\\.write\\:\\(Ljavassist\\/bytecode\\/annotation\\/AnnotationsWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.CharMemberValue\\.write\\:\\(Ljavassist\\/bytecode\\/annotation\\/AnnotationsWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.ClassMemberValue\\.getValue\\:\\(Ljava\\/lang\\/ClassLoader\\;Ljavassist\\/ClassPool\\;Ljava\\/lang\\/reflect\\/Method\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.ClassMemberValue\\.getType\\:\\(Ljava\\/lang\\/ClassLoader\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.ClassMemberValue\\.write\\:\\(Ljavassist\\/bytecode\\/annotation\\/AnnotationsWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.DoubleMemberValue\\.write\\:\\(Ljavassist\\/bytecode\\/annotation\\/AnnotationsWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.EnumMemberValue\\.getValue\\:\\(Ljava\\/lang\\/ClassLoader\\;Ljavassist\\/ClassPool\\;Ljava\\/lang\\/reflect\\/Method\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.EnumMemberValue\\.getType\\:\\(Ljava\\/lang\\/ClassLoader\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.EnumMemberValue\\.write\\:\\(Ljavassist\\/bytecode\\/annotation\\/AnnotationsWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.FloatMemberValue\\.write\\:\\(Ljavassist\\/bytecode\\/annotation\\/AnnotationsWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.IntegerMemberValue\\.write\\:\\(Ljavassist\\/bytecode\\/annotation\\/AnnotationsWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.LongMemberValue\\.write\\:\\(Ljavassist\\/bytecode\\/annotation\\/AnnotationsWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.MemberValue\\.getValue\\:\\(Ljava\\/lang\\/ClassLoader\\;Ljavassist\\/ClassPool\\;Ljava\\/lang\\/reflect\\/Method\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.MemberValue\\.getType\\:\\(Ljava\\/lang\\/ClassLoader\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "javassist.bytecode.annotation.NoSuchClassError"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.MemberValue\\.loadClass\\:\\(Ljava\\/lang\\/ClassLoader\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.MemberValue\\.write\\:\\(Ljavassist\\/bytecode\\/annotation\\/AnnotationsWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.ShortMemberValue\\.write\\:\\(Ljavassist\\/bytecode\\/annotation\\/AnnotationsWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.StringMemberValue\\.write\\:\\(Ljavassist\\/bytecode\\/annotation\\/AnnotationsWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.TypeAnnotationsWriter\\.numAnnotations\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.TypeAnnotationsWriter\\.typeParameterTarget\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.TypeAnnotationsWriter\\.supertypeTarget\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.TypeAnnotationsWriter\\.typeParameterBoundTarget\\:\\(III\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.TypeAnnotationsWriter\\.emptyTarget\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.TypeAnnotationsWriter\\.formalParameterTarget\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.TypeAnnotationsWriter\\.throwsTarget\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.TypeAnnotationsWriter\\.localVarTarget\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.TypeAnnotationsWriter\\.localVarTargetTable\\:\\(III\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.TypeAnnotationsWriter\\.catchTarget\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.TypeAnnotationsWriter\\.offsetTarget\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.TypeAnnotationsWriter\\.typeArgumentTarget\\:\\(III\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.TypeAnnotationsWriter\\.typePath\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.annotation\\.TypeAnnotationsWriter\\.typePathPath\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.BasicBlock\\$Maker\\.make\\:\\(Ljavassist\\/bytecode\\/MethodInfo\\;\\)\\[Ljavassist\\/bytecode\\/stackmap\\/BasicBlock\\;"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.BasicBlock\\$Maker\\.make\\:\\(Ljavassist\\/bytecode\\/CodeIterator\\;IILjavassist\\/bytecode\\/ExceptionTable\\;\\)\\[Ljavassist\\/bytecode\\/stackmap\\/BasicBlock\\;"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.BasicBlock\\$Maker\\.makeMarks\\:\\(Ljavassist\\/bytecode\\/CodeIterator\\;IILjavassist\\/bytecode\\/ExceptionTable\\;\\)Ljava\\/util\\/HashMap\\;"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.BasicBlock\\$Maker\\.makeJsr\\:\\(Ljava\\/util\\/HashMap\\;III\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.BasicBlock\\$Maker\\.addCatchers\\:\\(\\[Ljavassist\\/bytecode\\/stackmap\\/BasicBlock\\;Ljavassist\\/bytecode\\/ExceptionTable\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.BasicBlock\\.find\\:\\(\\[Ljavassist\\/bytecode\\/stackmap\\/BasicBlock\\;I\\)Ljavassist\\/bytecode\\/stackmap\\/BasicBlock\\;"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.MapMaker\\.make\\:\\(Ljavassist\\/ClassPool\\;Ljavassist\\/bytecode\\/MethodInfo\\;\\)Ljavassist\\/bytecode\\/StackMapTable\\;"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.MapMaker\\.make2\\:\\(Ljavassist\\/ClassPool\\;Ljavassist\\/bytecode\\/MethodInfo\\;\\)Ljavassist\\/bytecode\\/StackMap\\;"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.MapMaker\\.make\\:\\(\\[Ljavassist\\/bytecode\\/stackmap\\/TypedBlock\\;\\[B\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.MapMaker\\.make\\:\\(\\[BLjavassist\\/bytecode\\/stackmap\\/TypedBlock\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.MapMaker\\.traceException\\:\\(\\[BLjavassist\\/bytecode\\/stackmap\\/BasicBlock\\$Catch\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.MapMaker\\.mergeMap\\:\\(Ljavassist\\/bytecode\\/stackmap\\/TypedBlock\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.MapMaker\\.merge\\:\\(Ljavassist\\/bytecode\\/stackmap\\/TypeData\\;Ljavassist\\/bytecode\\/stackmap\\/TypeData\\;\\)Ljavassist\\/bytecode\\/stackmap\\/TypeData\\;"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.MapMaker\\.recordStackMap\\:\\(Ljavassist\\/bytecode\\/stackmap\\/TypedBlock\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.MapMaker\\.recordStackMap\\:\\(Ljavassist\\/bytecode\\/stackmap\\/TypedBlock\\;I\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.MapMaker\\.recordStackMap0\\:\\(Ljavassist\\/bytecode\\/stackmap\\/TypedBlock\\;I\\[Ljavassist\\/bytecode\\/stackmap\\/TypeData\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.MapMaker\\.findDeadCatchers\\:\\(\\[B\\[Ljavassist\\/bytecode\\/stackmap\\/TypedBlock\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.MapMaker\\.fixDeadcode\\:\\(\\[BLjavassist\\/bytecode\\/stackmap\\/TypedBlock\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException", 
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.MapMaker\\.fixTypes\\:\\(\\[B\\[Ljavassist\\/bytecode\\/stackmap\\/TypedBlock\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.Tracer\\.doOpcode\\:\\(I\\[B\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.Tracer\\.visitBranch\\:\\(I\\[BI\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.Tracer\\.visitGoto\\:\\(I\\[BI\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.Tracer\\.visitReturn\\:\\(I\\[B\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.Tracer\\.visitThrow\\:\\(I\\[B\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.Tracer\\.visitTableSwitch\\:\\(I\\[BIII\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.Tracer\\.visitLookupSwitch\\:\\(I\\[BIII\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.Tracer\\.visitJSR\\:\\(I\\[B\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.Tracer\\.visitRET\\:\\(I\\[B\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.Tracer\\.doOpcode0\\_53\\:\\(I\\[BI\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.Tracer\\.doOpcode54\\_95\\:\\(I\\[BI\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.Tracer\\.doOpcode148\\_201\\:\\(I\\[BI\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.Tracer\\.doWIDE\\:\\(I\\[B\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.Tracer\\.doPutField\\:\\(I\\[BZ\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.Tracer\\.doGetField\\:\\(I\\[BZ\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.Tracer\\.setFieldTarget\\:\\(ZI\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.Tracer\\.doInvokeMethod\\:\\(I\\[BZ\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.Tracer\\.doInvokeIntfMethod\\:\\(I\\[B\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.Tracer\\.doInvokeDynamic\\:\\(I\\[B\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.Tracer\\.checkParamTypes\\:\\(Ljava\\/lang\\/String\\;I\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.TypeData\\$ArrayElement\\.make\\:\\(Ljavassist\\/bytecode\\/stackmap\\/TypeData\\;\\)Ljavassist\\/bytecode\\/stackmap\\/TypeData\\;"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.TypeData\\$ArrayElement\\.setType\\:\\(Ljava\\/lang\\/String\\;Ljavassist\\/ClassPool\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.TypeData\\$ArrayElement\\.getArrayType\\:\\(I\\)Ljavassist\\/bytecode\\/stackmap\\/TypeData\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.TypeData\\$ArrayElement\\.dfs\\:\\(Ljava\\/util\\/ArrayList\\;ILjavassist\\/ClassPool\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.TypeData\\$ArrayType\\.make\\:\\(Ljavassist\\/bytecode\\/stackmap\\/TypeData\\;\\)Ljavassist\\/bytecode\\/stackmap\\/TypeData\\;"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.TypeData\\$ArrayType\\.setType\\:\\(Ljava\\/lang\\/String\\;Ljavassist\\/ClassPool\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.TypeData\\$ArrayType\\.getArrayType\\:\\(I\\)Ljavassist\\/bytecode\\/stackmap\\/TypeData\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.TypeData\\$ArrayType\\.dfs\\:\\(Ljava\\/util\\/ArrayList\\;ILjavassist\\/ClassPool\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.TypeData\\$BasicType\\.setType\\:\\(Ljava\\/lang\\/String\\;Ljavassist\\/ClassPool\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.TypeData\\$BasicType\\.getArrayType\\:\\(I\\)Ljavassist\\/bytecode\\/stackmap\\/TypeData\\;"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.TypeData\\$ClassName\\.setType\\:\\(Ljava\\/lang\\/String\\;Ljavassist\\/ClassPool\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.TypeData\\$ClassName\\.getArrayType\\:\\(I\\)Ljavassist\\/bytecode\\/stackmap\\/TypeData\\;"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.TypeData\\$TypeVar\\.setType\\:\\(Ljava\\/lang\\/String\\;Ljavassist\\/ClassPool\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.TypeData\\$TypeVar\\.getArrayType\\:\\(I\\)Ljavassist\\/bytecode\\/stackmap\\/TypeData\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.TypeData\\$TypeVar\\.dfs\\:\\(Ljava\\/util\\/ArrayList\\;ILjavassist\\/ClassPool\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.TypeData\\$TypeVar\\.fixTypes\\:\\(Ljava\\/util\\/ArrayList\\;Ljavassist\\/ClassPool\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.TypeData\\$TypeVar\\.fixTypes1\\:\\(Ljava\\/util\\/ArrayList\\;Ljavassist\\/bytecode\\/stackmap\\/TypeData\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.TypeData\\$TypeVar\\.fixTypes2\\:\\(Ljava\\/util\\/ArrayList\\;Ljava\\/util\\/HashSet\\;Ljavassist\\/ClassPool\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.TypeData\\$TypeVar\\.isObjectArray\\:\\(Ljavassist\\/CtClass\\;\\)Z"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.TypeData\\$TypeVar\\.fixByUppers\\:\\(Ljava\\/util\\/ArrayList\\;Ljavassist\\/ClassPool\\;Ljava\\/util\\/HashSet\\;Ljavassist\\/CtClass\\;\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.TypeData\\$UninitTypeVar\\.setType\\:\\(Ljava\\/lang\\/String\\;Ljavassist\\/ClassPool\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.TypeData\\$UninitTypeVar\\.getArrayType\\:\\(I\\)Ljavassist\\/bytecode\\/stackmap\\/TypeData\\;"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.TypeData\\.setType\\:\\(Ljavassist\\/bytecode\\/stackmap\\/TypeData\\;Ljava\\/lang\\/String\\;Ljavassist\\/ClassPool\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.TypeData\\.setType\\:\\(Ljava\\/lang\\/String\\;Ljavassist\\/ClassPool\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.TypeData\\.getArrayType\\:\\(I\\)Ljavassist\\/bytecode\\/stackmap\\/TypeData\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.TypeData\\.dfs\\:\\(Ljava\\/util\\/ArrayList\\;ILjavassist\\/ClassPool\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.TypeData\\.commonSuperClassEx\\:\\(Ljavassist\\/CtClass\\;Ljavassist\\/CtClass\\;\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.TypeData\\.commonSuperClass\\:\\(Ljavassist\\/CtClass\\;Ljavassist\\/CtClass\\;\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.TypeData\\.aastore\\:\\(Ljavassist\\/bytecode\\/stackmap\\/TypeData\\;Ljavassist\\/bytecode\\/stackmap\\/TypeData\\;Ljavassist\\/ClassPool\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.TypedBlock\\.makeBlocks\\:\\(Ljavassist\\/bytecode\\/MethodInfo\\;Ljavassist\\/bytecode\\/CodeAttribute\\;Z\\)\\[Ljavassist\\/bytecode\\/stackmap\\/TypedBlock\\;"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.TypedBlock\\.setStackMap\\:\\(I\\[Ljavassist\\/bytecode\\/stackmap\\/TypeData\\;I\\[Ljavassist\\/bytecode\\/stackmap\\/TypeData\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.TypedBlock\\.initFirstBlock\\:\\(IILjava\\/lang\\/String\\;Ljava\\/lang\\/String\\;ZZ\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.bytecode\\.stackmap\\.TypedBlock\\.descToTag\\:\\(Ljava\\/lang\\/String\\;II\\[Ljavassist\\/bytecode\\/stackmap\\/TypeData\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.AccessorMaker\\.getConstructor\\:\\(Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;Ljavassist\\/bytecode\\/MethodInfo\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.AccessorMaker\\.getMethodAccessor\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljavassist\\/bytecode\\/MethodInfo\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.AccessorMaker\\.getFieldGetter\\:\\(Ljavassist\\/bytecode\\/FieldInfo\\;Z\\)Ljavassist\\/bytecode\\/MethodInfo\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.AccessorMaker\\.getFieldSetter\\:\\(Ljavassist\\/bytecode\\/FieldInfo\\;Z\\)Ljavassist\\/bytecode\\/MethodInfo\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.fatal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.getSuperName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.resolveClassName\\:\\(Ljavassist\\/compiler\\/ast\\/ASTList\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.resolveClassName\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.compileExpr\\:\\(Ljavassist\\/compiler\\/ast\\/ASTree\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.compileBooleanExpr\\:\\(ZLjavassist\\/compiler\\/ast\\/ASTree\\;\\)Z"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.doTypeCheck\\:\\(Ljavassist\\/compiler\\/ast\\/ASTree\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atASTList\\:\\(Ljavassist\\/compiler\\/ast\\/ASTList\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atPair\\:\\(Ljavassist\\/compiler\\/ast\\/Pair\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atSymbol\\:\\(Ljavassist\\/compiler\\/ast\\/Symbol\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atFieldDecl\\:\\(Ljavassist\\/compiler\\/ast\\/FieldDecl\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atMethodDecl\\:\\(Ljavassist\\/compiler\\/ast\\/MethodDecl\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atMethodBody\\:\\(Ljavassist\\/compiler\\/ast\\/Stmnt\\;ZZ\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.needsSuperCall\\:\\(Ljavassist\\/compiler\\/ast\\/Stmnt\\;\\)Z"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.insertDefaultSuperCall\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atStmnt\\:\\(Ljavassist\\/compiler\\/ast\\/Stmnt\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atIfStmnt\\:\\(Ljavassist\\/compiler\\/ast\\/Stmnt\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atWhileStmnt\\:\\(Ljavassist\\/compiler\\/ast\\/Stmnt\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atForStmnt\\:\\(Ljavassist\\/compiler\\/ast\\/Stmnt\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atSwitchStmnt\\:\\(Ljavassist\\/compiler\\/ast\\/Stmnt\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.computeLabel\\:\\(Ljavassist\\/compiler\\/ast\\/ASTree\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atBreakStmnt\\:\\(Ljavassist\\/compiler\\/ast\\/Stmnt\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atReturnStmnt\\:\\(Ljavassist\\/compiler\\/ast\\/Stmnt\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atReturnStmnt2\\:\\(Ljavassist\\/compiler\\/ast\\/ASTree\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atThrowStmnt\\:\\(Ljavassist\\/compiler\\/ast\\/Stmnt\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atTryStmnt\\:\\(Ljavassist\\/compiler\\/ast\\/Stmnt\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atSyncStmnt\\:\\(Ljavassist\\/compiler\\/ast\\/Stmnt\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atDeclarator\\:\\(Ljavassist\\/compiler\\/ast\\/Declarator\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atNewExpr\\:\\(Ljavassist\\/compiler\\/ast\\/NewExpr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atArrayInit\\:\\(Ljavassist\\/compiler\\/ast\\/ArrayInit\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atAssignExpr\\:\\(Ljavassist\\/compiler\\/ast\\/AssignExpr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atAssignExpr\\:\\(Ljavassist\\/compiler\\/ast\\/AssignExpr\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.badAssign\\:\\(Ljavassist\\/compiler\\/ast\\/Expr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atVariableAssign\\:\\(Ljavassist\\/compiler\\/ast\\/Expr\\;ILjavassist\\/compiler\\/ast\\/Variable\\;Ljavassist\\/compiler\\/ast\\/Declarator\\;Ljavassist\\/compiler\\/ast\\/ASTree\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atArrayVariableAssign\\:\\(Ljavassist\\/compiler\\/ast\\/ArrayInit\\;IILjava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atArrayAssign\\:\\(Ljavassist\\/compiler\\/ast\\/Expr\\;ILjavassist\\/compiler\\/ast\\/Expr\\;Ljavassist\\/compiler\\/ast\\/ASTree\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atFieldAssign\\:\\(Ljavassist\\/compiler\\/ast\\/Expr\\;ILjavassist\\/compiler\\/ast\\/ASTree\\;Ljavassist\\/compiler\\/ast\\/ASTree\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atAssignCore\\:\\(Ljavassist\\/compiler\\/ast\\/Expr\\;ILjavassist\\/compiler\\/ast\\/ASTree\\;IILjava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atStringPlusEq\\:\\(Ljavassist\\/compiler\\/ast\\/Expr\\;IILjava\\/lang\\/String\\;Ljavassist\\/compiler\\/ast\\/ASTree\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atCondExpr\\:\\(Ljavassist\\/compiler\\/ast\\/CondExpr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atBinExpr\\:\\(Ljavassist\\/compiler\\/ast\\/BinExpr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atArithBinExpr\\:\\(Ljavassist\\/compiler\\/ast\\/Expr\\;III\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atStringConcatExpr\\:\\(Ljavassist\\/compiler\\/ast\\/Expr\\;IILjava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.convToString\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.booleanExpr\\:\\(ZLjavassist\\/compiler\\/ast\\/ASTree\\;\\)Z"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.getCompOperator\\:\\(Ljavassist\\/compiler\\/ast\\/ASTree\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.compileOprands\\:\\(Ljavassist\\/compiler\\/ast\\/BinExpr\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.compareExpr\\:\\(ZIILjavassist\\/compiler\\/ast\\/BinExpr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.badTypes\\:\\(Ljavassist\\/compiler\\/ast\\/Expr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.convertOprandTypes\\:\\(IILjavassist\\/compiler\\/ast\\/Expr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atCastExpr\\:\\(Ljavassist\\/compiler\\/ast\\/CastExpr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atInstanceOfExpr\\:\\(Ljavassist\\/compiler\\/ast\\/InstanceOfExpr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.checkCastExpr\\:\\(Ljavassist\\/compiler\\/ast\\/CastExpr\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atNumCastExpr\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atExpr\\:\\(Ljavassist\\/compiler\\/ast\\/Expr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.badType\\:\\(Ljavassist\\/compiler\\/ast\\/Expr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atCallExpr\\:\\(Ljavassist\\/compiler\\/ast\\/CallExpr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atFieldRead\\:\\(Ljavassist\\/compiler\\/ast\\/ASTree\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atClassObject\\:\\(Ljavassist\\/compiler\\/ast\\/Expr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atClassObject2\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atArrayRead\\:\\(Ljavassist\\/compiler\\/ast\\/ASTree\\;Ljavassist\\/compiler\\/ast\\/ASTree\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.arrayAccess\\:\\(Ljavassist\\/compiler\\/ast\\/ASTree\\;Ljavassist\\/compiler\\/ast\\/ASTree\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atPlusPlus\\:\\(ILjavassist\\/compiler\\/ast\\/ASTree\\;Ljavassist\\/compiler\\/ast\\/Expr\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atArrayPlusPlus\\:\\(IZLjavassist\\/compiler\\/ast\\/Expr\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atPlusPlusCore\\:\\(IZIZLjavassist\\/compiler\\/ast\\/Expr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atFieldPlusPlus\\:\\(IZLjavassist\\/compiler\\/ast\\/ASTree\\;Ljavassist\\/compiler\\/ast\\/Expr\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atMember\\:\\(Ljavassist\\/compiler\\/ast\\/Member\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atVariable\\:\\(Ljavassist\\/compiler\\/ast\\/Variable\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atKeyword\\:\\(Ljavassist\\/compiler\\/ast\\/Keyword\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atStringL\\:\\(Ljavassist\\/compiler\\/ast\\/StringL\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atIntConst\\:\\(Ljavassist\\/compiler\\/ast\\/IntConst\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.CodeGen\\.atDoubleConst\\:\\(Ljavassist\\/compiler\\/ast\\/DoubleConst\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Javac\\$1\\.doit\\:\\(Ljavassist\\/compiler\\/JvstCodeGen\\;Ljavassist\\/bytecode\\/Bytecode\\;Ljavassist\\/compiler\\/ast\\/ASTList\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Javac\\$1\\.setReturnType\\:\\(Ljavassist\\/compiler\\/JvstTypeChecker\\;Ljavassist\\/compiler\\/ast\\/ASTList\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Javac\\$2\\.doit\\:\\(Ljavassist\\/compiler\\/JvstCodeGen\\;Ljavassist\\/bytecode\\/Bytecode\\;Ljavassist\\/compiler\\/ast\\/ASTList\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Javac\\$2\\.setReturnType\\:\\(Ljavassist\\/compiler\\/JvstTypeChecker\\;Ljavassist\\/compiler\\/ast\\/ASTList\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Javac\\$3\\.doit\\:\\(Ljavassist\\/compiler\\/JvstCodeGen\\;Ljavassist\\/bytecode\\/Bytecode\\;Ljavassist\\/compiler\\/ast\\/ASTList\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Javac\\$3\\.setReturnType\\:\\(Ljavassist\\/compiler\\/JvstTypeChecker\\;Ljavassist\\/compiler\\/ast\\/ASTList\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.compiler\\.Javac\\$CtFieldWithInit\\.\\<init\\>\\:\\(Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;Ljavassist\\/CtClass\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Javac\\.compile\\:\\(Ljava\\/lang\\/String\\;\\)Ljavassist\\/CtMember\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError", 
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.compiler\\.Javac\\.compileField\\:\\(Ljavassist\\/compiler\\/ast\\/FieldDecl\\;\\)Ljavassist\\/CtField\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Javac\\.compileMethod\\:\\(Ljavassist\\/compiler\\/Parser\\;Ljavassist\\/compiler\\/ast\\/MethodDecl\\;\\)Ljavassist\\/CtBehavior\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Javac\\.compileBody\\:\\(Ljavassist\\/CtBehavior\\;Ljava\\/lang\\/String\\;\\)Ljavassist\\/bytecode\\/Bytecode\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Javac\\.recordLocalVariables\\:\\(Ljavassist\\/bytecode\\/CodeAttribute\\;I\\)Z"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Javac\\.recordParamNames\\:\\(Ljavassist\\/bytecode\\/CodeAttribute\\;I\\)Z"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Javac\\.recordParams\\:\\(\\[Ljavassist\\/CtClass\\;Z\\)I"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Javac\\.recordParams\\:\\(Ljava\\/lang\\/String\\;\\[Ljavassist\\/CtClass\\;ZIZ\\)I"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Javac\\.recordReturnType\\:\\(Ljavassist\\/CtClass\\;Z\\)I"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Javac\\.recordVariable\\:\\(Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Javac\\.recordProceed\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Javac\\.recordStaticProceed\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Javac\\.recordSpecialProceed\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;I\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Javac\\.compileStmnt\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Javac\\.compileExpr\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Javac\\.parseExpr\\:\\(Ljava\\/lang\\/String\\;Ljavassist\\/compiler\\/SymbolTable\\;\\)Ljavassist\\/compiler\\/ast\\/ASTree\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Javac\\.compileExpr\\:\\(Ljavassist\\/compiler\\/ast\\/ASTree\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.JvstCodeGen\\.atMember\\:\\(Ljavassist\\/compiler\\/ast\\/Member\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.JvstCodeGen\\.atFieldAssign\\:\\(Ljavassist\\/compiler\\/ast\\/Expr\\;ILjavassist\\/compiler\\/ast\\/ASTree\\;Ljavassist\\/compiler\\/ast\\/ASTree\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.JvstCodeGen\\.atAssignParamList\\:\\(\\[Ljavassist\\/CtClass\\;Ljavassist\\/bytecode\\/Bytecode\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.JvstCodeGen\\.atCastExpr\\:\\(Ljavassist\\/compiler\\/ast\\/CastExpr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.JvstCodeGen\\.atCastToRtype\\:\\(Ljavassist\\/compiler\\/ast\\/CastExpr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.JvstCodeGen\\.atCastToWrapper\\:\\(Ljavassist\\/compiler\\/ast\\/CastExpr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.JvstCodeGen\\.atCallExpr\\:\\(Ljavassist\\/compiler\\/ast\\/CallExpr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.JvstCodeGen\\.atCflow\\:\\(Ljavassist\\/compiler\\/ast\\/ASTList\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.JvstCodeGen\\.makeCflowName\\:\\(Ljava\\/lang\\/StringBuffer\\;Ljavassist\\/compiler\\/ast\\/ASTree\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.JvstCodeGen\\.atMethodArgs\\:\\(Ljavassist\\/compiler\\/ast\\/ASTList\\;\\[I\\[I\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.JvstCodeGen\\.compileInvokeSpecial\\:\\(Ljavassist\\/compiler\\/ast\\/ASTree\\;ILjava\\/lang\\/String\\;Ljavassist\\/compiler\\/ast\\/ASTList\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.JvstCodeGen\\.atReturnStmnt\\:\\(Ljavassist\\/compiler\\/ast\\/Stmnt\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.JvstCodeGen\\.recordReturnType\\:\\(Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljavassist\\/compiler\\/SymbolTable\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.JvstCodeGen\\.recordParams\\:\\(\\[Ljavassist\\/CtClass\\;ZLjava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljavassist\\/compiler\\/SymbolTable\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.JvstCodeGen\\.recordParams\\:\\(\\[Ljavassist\\/CtClass\\;ZLjava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;ZILjava\\/lang\\/String\\;Ljavassist\\/compiler\\/SymbolTable\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.JvstCodeGen\\.recordVariable\\:\\(Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;Ljavassist\\/compiler\\/SymbolTable\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.JvstCodeGen\\.recordVar\\:\\(Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;ILjavassist\\/compiler\\/SymbolTable\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.JvstCodeGen\\.recordVariable\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;ILjavassist\\/compiler\\/SymbolTable\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.JvstCodeGen\\.compileUnwrapValue\\:\\(Ljavassist\\/CtClass\\;Ljavassist\\/bytecode\\/Bytecode\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.JvstCodeGen\\.setType\\:\\(Ljavassist\\/CtClass\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.JvstCodeGen\\.setType\\:\\(Ljavassist\\/CtClass\\;I\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.JvstCodeGen\\.doNumCast\\:\\(Ljavassist\\/CtClass\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.JvstTypeChecker\\.atMember\\:\\(Ljavassist\\/compiler\\/ast\\/Member\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.JvstTypeChecker\\.atFieldAssign\\:\\(Ljavassist\\/compiler\\/ast\\/Expr\\;ILjavassist\\/compiler\\/ast\\/ASTree\\;Ljavassist\\/compiler\\/ast\\/ASTree\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.JvstTypeChecker\\.atCastExpr\\:\\(Ljavassist\\/compiler\\/ast\\/CastExpr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.JvstTypeChecker\\.atCastToRtype\\:\\(Ljavassist\\/compiler\\/ast\\/CastExpr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.JvstTypeChecker\\.atCastToWrapper\\:\\(Ljavassist\\/compiler\\/ast\\/CastExpr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.JvstTypeChecker\\.atCallExpr\\:\\(Ljavassist\\/compiler\\/ast\\/CallExpr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.JvstTypeChecker\\.atCflow\\:\\(Ljavassist\\/compiler\\/ast\\/ASTList\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.JvstTypeChecker\\.atMethodArgs\\:\\(Ljavassist\\/compiler\\/ast\\/ASTList\\;\\[I\\[I\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.JvstTypeChecker\\.compileInvokeSpecial\\:\\(Ljavassist\\/compiler\\/ast\\/ASTree\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljavassist\\/compiler\\/ast\\/ASTList\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.JvstTypeChecker\\.compileUnwrapValue\\:\\(Ljavassist\\/CtClass\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.JvstTypeChecker\\.setType\\:\\(Ljavassist\\/CtClass\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.JvstTypeChecker\\.setType\\:\\(Ljavassist\\/CtClass\\;I\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberCodeGen\\.getSuperName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberCodeGen\\.insertDefaultSuperCall\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberCodeGen\\.atTryStmnt\\:\\(Ljavassist\\/compiler\\/ast\\/Stmnt\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberCodeGen\\.addFinally\\:\\(Ljava\\/util\\/ArrayList\\;Ljavassist\\/compiler\\/ast\\/Stmnt\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberCodeGen\\.atNewExpr\\:\\(Ljavassist\\/compiler\\/ast\\/NewExpr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberCodeGen\\.atNewArrayExpr\\:\\(Ljavassist\\/compiler\\/ast\\/NewExpr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberCodeGen\\.atNewArrayExpr2\\:\\(ILjavassist\\/compiler\\/ast\\/ASTree\\;Ljava\\/lang\\/String\\;Ljavassist\\/compiler\\/ast\\/ArrayInit\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberCodeGen\\.badNewExpr\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberCodeGen\\.atArrayVariableAssign\\:\\(Ljavassist\\/compiler\\/ast\\/ArrayInit\\;IILjava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberCodeGen\\.atArrayInit\\:\\(Ljavassist\\/compiler\\/ast\\/ArrayInit\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberCodeGen\\.atMultiNewArray\\:\\(ILjavassist\\/compiler\\/ast\\/ASTList\\;Ljavassist\\/compiler\\/ast\\/ASTList\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberCodeGen\\.atCallExpr\\:\\(Ljavassist\\/compiler\\/ast\\/CallExpr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberCodeGen\\.badMethod\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberCodeGen\\.atMethodCallCore\\:\\(Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;Ljavassist\\/compiler\\/ast\\/ASTList\\;ZZILjavassist\\/compiler\\/MemberResolver\\$Method\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberCodeGen\\.atMethodCallCore2\\:\\(Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;ZZILjavassist\\/compiler\\/MemberResolver\\$Method\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberCodeGen\\.getAccessiblePrivate\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljavassist\\/bytecode\\/MethodInfo\\;Ljavassist\\/CtClass\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberCodeGen\\.getAccessibleConstructor\\:\\(Ljava\\/lang\\/String\\;Ljavassist\\/CtClass\\;Ljavassist\\/bytecode\\/MethodInfo\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberCodeGen\\.atMethodArgs\\:\\(Ljavassist\\/compiler\\/ast\\/ASTList\\;\\[I\\[I\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberCodeGen\\.setReturnType\\:\\(Ljava\\/lang\\/String\\;ZZ\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberCodeGen\\.atFieldAssign\\:\\(Ljavassist\\/compiler\\/ast\\/Expr\\;ILjavassist\\/compiler\\/ast\\/ASTree\\;Ljavassist\\/compiler\\/ast\\/ASTree\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberCodeGen\\.atFieldAssignCore\\:\\(Ljavassist\\/CtField\\;ZIZ\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberCodeGen\\.atMember\\:\\(Ljavassist\\/compiler\\/ast\\/Member\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberCodeGen\\.atFieldRead\\:\\(Ljavassist\\/compiler\\/ast\\/ASTree\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberCodeGen\\.atArrayLength\\:\\(Ljavassist\\/compiler\\/ast\\/ASTree\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberCodeGen\\.atFieldRead\\:\\(Ljavassist\\/CtField\\;Z\\)I"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberCodeGen\\.isAccessibleField\\:\\(Ljavassist\\/CtField\\;Ljavassist\\/bytecode\\/FieldInfo\\;\\)Ljavassist\\/compiler\\/AccessorMaker\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberCodeGen\\.setFieldType\\:\\(Ljavassist\\/bytecode\\/FieldInfo\\;\\)Z"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberCodeGen\\.atClassObject2\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberCodeGen\\.atFieldPlusPlus\\:\\(IZLjavassist\\/compiler\\/ast\\/ASTree\\;Ljavassist\\/compiler\\/ast\\/Expr\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberCodeGen\\.fieldAccess\\:\\(Ljavassist\\/compiler\\/ast\\/ASTree\\;Z\\)Ljavassist\\/CtField\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberCodeGen\\.badLvalue\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberCodeGen\\.makeParamList\\:\\(Ljavassist\\/compiler\\/ast\\/MethodDecl\\;\\)\\[Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberCodeGen\\.makeThrowsList\\:\\(Ljavassist\\/compiler\\/ast\\/MethodDecl\\;\\)\\[Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberCodeGen\\.resolveClassName\\:\\(Ljavassist\\/compiler\\/ast\\/ASTList\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberCodeGen\\.resolveClassName\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberResolver\\.fatal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberResolver\\.lookupMethod\\:\\(Ljavassist\\/CtClass\\;Ljavassist\\/CtClass\\;Ljavassist\\/bytecode\\/MethodInfo\\;Ljava\\/lang\\/String\\;\\[I\\[I\\[Ljava\\/lang\\/String\\;\\)Ljavassist\\/compiler\\/MemberResolver\\$Method\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberResolver\\.lookupMethod\\:\\(Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;\\[I\\[I\\[Ljava\\/lang\\/String\\;Z\\)Ljavassist\\/compiler\\/MemberResolver\\$Method\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberResolver\\.compareSignature\\:\\(Ljava\\/lang\\/String\\;\\[I\\[I\\[Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.compiler.NoFieldException"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberResolver\\.lookupFieldByJvmName2\\:\\(Ljava\\/lang\\/String\\;Ljavassist\\/compiler\\/ast\\/Symbol\\;Ljavassist\\/compiler\\/ast\\/ASTree\\;\\)Ljavassist\\/CtField\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberResolver\\.lookupFieldByJvmName\\:\\(Ljava\\/lang\\/String\\;Ljavassist\\/compiler\\/ast\\/Symbol\\;\\)Ljavassist\\/CtField\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberResolver\\.lookupField\\:\\(Ljava\\/lang\\/String\\;Ljavassist\\/compiler\\/ast\\/Symbol\\;\\)Ljavassist\\/CtField\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberResolver\\.lookupClassByName\\:\\(Ljavassist\\/compiler\\/ast\\/ASTList\\;\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberResolver\\.lookupClassByJvmName\\:\\(Ljava\\/lang\\/String\\;\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberResolver\\.lookupClass\\:\\(Ljavassist\\/compiler\\/ast\\/Declarator\\;\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberResolver\\.lookupClass\\:\\(IILjava\\/lang\\/String\\;\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberResolver\\.getTypeName\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberResolver\\.lookupClass\\:\\(Ljava\\/lang\\/String\\;Z\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberResolver\\.searchImports\\:\\(Ljava\\/lang\\/String\\;\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberResolver\\.lookupClass0\\:\\(Ljava\\/lang\\/String\\;Z\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberResolver\\.resolveClassName\\:\\(Ljavassist\\/compiler\\/ast\\/ASTList\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberResolver\\.resolveJvmClassName\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberResolver\\.getSuperclass\\:\\(Ljavassist\\/CtClass\\;\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberResolver\\.getSuperInterface\\:\\(Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.MemberResolver\\.descToType\\:\\(C\\)I"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parseMember\\:\\(Ljavassist\\/compiler\\/SymbolTable\\;\\)Ljavassist\\/compiler\\/ast\\/ASTList\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parseMember1\\:\\(Ljavassist\\/compiler\\/SymbolTable\\;\\)Ljavassist\\/compiler\\/ast\\/ASTList\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parseField\\:\\(Ljavassist\\/compiler\\/SymbolTable\\;Ljavassist\\/compiler\\/ast\\/ASTList\\;Ljavassist\\/compiler\\/ast\\/Declarator\\;\\)Ljavassist\\/compiler\\/ast\\/FieldDecl\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parseMethod1\\:\\(Ljavassist\\/compiler\\/SymbolTable\\;ZLjavassist\\/compiler\\/ast\\/ASTList\\;Ljavassist\\/compiler\\/ast\\/Declarator\\;\\)Ljavassist\\/compiler\\/ast\\/MethodDecl\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parseMethod2\\:\\(Ljavassist\\/compiler\\/SymbolTable\\;Ljavassist\\/compiler\\/ast\\/MethodDecl\\;\\)Ljavassist\\/compiler\\/ast\\/MethodDecl\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parseFormalType\\:\\(Ljavassist\\/compiler\\/SymbolTable\\;\\)Ljavassist\\/compiler\\/ast\\/Declarator\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parseFormalParam\\:\\(Ljavassist\\/compiler\\/SymbolTable\\;\\)Ljavassist\\/compiler\\/ast\\/Declarator\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parseStatement\\:\\(Ljavassist\\/compiler\\/SymbolTable\\;\\)Ljavassist\\/compiler\\/ast\\/Stmnt\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parseBlock\\:\\(Ljavassist\\/compiler\\/SymbolTable\\;\\)Ljavassist\\/compiler\\/ast\\/Stmnt\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parseIf\\:\\(Ljavassist\\/compiler\\/SymbolTable\\;\\)Ljavassist\\/compiler\\/ast\\/Stmnt\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parseWhile\\:\\(Ljavassist\\/compiler\\/SymbolTable\\;\\)Ljavassist\\/compiler\\/ast\\/Stmnt\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parseDo\\:\\(Ljavassist\\/compiler\\/SymbolTable\\;\\)Ljavassist\\/compiler\\/ast\\/Stmnt\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parseFor\\:\\(Ljavassist\\/compiler\\/SymbolTable\\;\\)Ljavassist\\/compiler\\/ast\\/Stmnt\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parseSwitch\\:\\(Ljavassist\\/compiler\\/SymbolTable\\;\\)Ljavassist\\/compiler\\/ast\\/Stmnt\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parseSwitchBlock\\:\\(Ljavassist\\/compiler\\/SymbolTable\\;\\)Ljavassist\\/compiler\\/ast\\/Stmnt\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parseStmntOrCase\\:\\(Ljavassist\\/compiler\\/SymbolTable\\;\\)Ljavassist\\/compiler\\/ast\\/Stmnt\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parseSynchronized\\:\\(Ljavassist\\/compiler\\/SymbolTable\\;\\)Ljavassist\\/compiler\\/ast\\/Stmnt\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parseTry\\:\\(Ljavassist\\/compiler\\/SymbolTable\\;\\)Ljavassist\\/compiler\\/ast\\/Stmnt\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parseReturn\\:\\(Ljavassist\\/compiler\\/SymbolTable\\;\\)Ljavassist\\/compiler\\/ast\\/Stmnt\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parseThrow\\:\\(Ljavassist\\/compiler\\/SymbolTable\\;\\)Ljavassist\\/compiler\\/ast\\/Stmnt\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parseBreak\\:\\(Ljavassist\\/compiler\\/SymbolTable\\;\\)Ljavassist\\/compiler\\/ast\\/Stmnt\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parseContinue\\:\\(Ljavassist\\/compiler\\/SymbolTable\\;\\)Ljavassist\\/compiler\\/ast\\/Stmnt\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parseDeclarationOrExpression\\:\\(Ljavassist\\/compiler\\/SymbolTable\\;Z\\)Ljavassist\\/compiler\\/ast\\/Stmnt\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parseExprList\\:\\(Ljavassist\\/compiler\\/SymbolTable\\;\\)Ljavassist\\/compiler\\/ast\\/Stmnt\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parseDeclarators\\:\\(Ljavassist\\/compiler\\/SymbolTable\\;Ljavassist\\/compiler\\/ast\\/Declarator\\;\\)Ljavassist\\/compiler\\/ast\\/Stmnt\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parseDeclarator\\:\\(Ljavassist\\/compiler\\/SymbolTable\\;Ljavassist\\/compiler\\/ast\\/Declarator\\;\\)Ljavassist\\/compiler\\/ast\\/Declarator\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parseInitializer\\:\\(Ljavassist\\/compiler\\/SymbolTable\\;\\)Ljavassist\\/compiler\\/ast\\/ASTree\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parseArrayInitializer\\:\\(Ljavassist\\/compiler\\/SymbolTable\\;\\)Ljavassist\\/compiler\\/ast\\/ArrayInit\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parseParExpression\\:\\(Ljavassist\\/compiler\\/SymbolTable\\;\\)Ljavassist\\/compiler\\/ast\\/ASTree\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parseExpression\\:\\(Ljavassist\\/compiler\\/SymbolTable\\;\\)Ljavassist\\/compiler\\/ast\\/ASTree\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parseConditionalExpr\\:\\(Ljavassist\\/compiler\\/SymbolTable\\;\\)Ljavassist\\/compiler\\/ast\\/ASTree\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parseBinaryExpr\\:\\(Ljavassist\\/compiler\\/SymbolTable\\;\\)Ljavassist\\/compiler\\/ast\\/ASTree\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parseInstanceOf\\:\\(Ljavassist\\/compiler\\/SymbolTable\\;Ljavassist\\/compiler\\/ast\\/ASTree\\;\\)Ljavassist\\/compiler\\/ast\\/ASTree\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.binaryExpr2\\:\\(Ljavassist\\/compiler\\/SymbolTable\\;Ljavassist\\/compiler\\/ast\\/ASTree\\;I\\)Ljavassist\\/compiler\\/ast\\/ASTree\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parseUnaryExpr\\:\\(Ljavassist\\/compiler\\/SymbolTable\\;\\)Ljavassist\\/compiler\\/ast\\/ASTree\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parseCast\\:\\(Ljavassist\\/compiler\\/SymbolTable\\;\\)Ljavassist\\/compiler\\/ast\\/ASTree\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parseArrayDimension\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parseClassType\\:\\(Ljavassist\\/compiler\\/SymbolTable\\;\\)Ljavassist\\/compiler\\/ast\\/ASTList\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parsePostfix\\:\\(Ljavassist\\/compiler\\/SymbolTable\\;\\)Ljavassist\\/compiler\\/ast\\/ASTree\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parseDotClass\\:\\(Ljavassist\\/compiler\\/ast\\/ASTree\\;I\\)Ljavassist\\/compiler\\/ast\\/ASTree\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parseDotClass\\:\\(II\\)Ljavassist\\/compiler\\/ast\\/ASTree\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parseMethodCall\\:\\(Ljavassist\\/compiler\\/SymbolTable\\;Ljavassist\\/compiler\\/ast\\/ASTree\\;\\)Ljavassist\\/compiler\\/ast\\/ASTree\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.toClassName\\:\\(Ljavassist\\/compiler\\/ast\\/ASTree\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.toClassName\\:\\(Ljavassist\\/compiler\\/ast\\/ASTree\\;Ljava\\/lang\\/StringBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parsePrimaryExpr\\:\\(Ljavassist\\/compiler\\/SymbolTable\\;\\)Ljavassist\\/compiler\\/ast\\/ASTree\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parseNew\\:\\(Ljavassist\\/compiler\\/SymbolTable\\;\\)Ljavassist\\/compiler\\/ast\\/NewExpr\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parseArraySize\\:\\(Ljavassist\\/compiler\\/SymbolTable\\;\\)Ljavassist\\/compiler\\/ast\\/ASTList\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parseArrayIndex\\:\\(Ljavassist\\/compiler\\/SymbolTable\\;\\)Ljavassist\\/compiler\\/ast\\/ASTree\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.Parser\\.parseArgumentList\\:\\(Ljavassist\\/compiler\\/SymbolTable\\;\\)Ljavassist\\/compiler\\/ast\\/ASTList\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ProceedHandler\\.doit\\:\\(Ljavassist\\/compiler\\/JvstCodeGen\\;Ljavassist\\/bytecode\\/Bytecode\\;Ljavassist\\/compiler\\/ast\\/ASTList\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ProceedHandler\\.setReturnType\\:\\(Ljavassist\\/compiler\\/JvstTypeChecker\\;Ljavassist\\/compiler\\/ast\\/ASTList\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.TypeChecker\\.fatal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.TypeChecker\\.getSuperName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.TypeChecker\\.resolveClassName\\:\\(Ljavassist\\/compiler\\/ast\\/ASTList\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.TypeChecker\\.resolveClassName\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.TypeChecker\\.atNewExpr\\:\\(Ljavassist\\/compiler\\/ast\\/NewExpr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.TypeChecker\\.atNewArrayExpr\\:\\(Ljavassist\\/compiler\\/ast\\/NewExpr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.TypeChecker\\.atArrayInit\\:\\(Ljavassist\\/compiler\\/ast\\/ArrayInit\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.TypeChecker\\.atMultiNewArray\\:\\(ILjavassist\\/compiler\\/ast\\/ASTList\\;Ljavassist\\/compiler\\/ast\\/ASTList\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.TypeChecker\\.atAssignExpr\\:\\(Ljavassist\\/compiler\\/ast\\/AssignExpr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.TypeChecker\\.atVariableAssign\\:\\(Ljavassist\\/compiler\\/ast\\/Expr\\;ILjavassist\\/compiler\\/ast\\/Variable\\;Ljavassist\\/compiler\\/ast\\/Declarator\\;Ljavassist\\/compiler\\/ast\\/ASTree\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.TypeChecker\\.atArrayAssign\\:\\(Ljavassist\\/compiler\\/ast\\/Expr\\;ILjavassist\\/compiler\\/ast\\/Expr\\;Ljavassist\\/compiler\\/ast\\/ASTree\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.TypeChecker\\.atFieldAssign\\:\\(Ljavassist\\/compiler\\/ast\\/Expr\\;ILjavassist\\/compiler\\/ast\\/ASTree\\;Ljavassist\\/compiler\\/ast\\/ASTree\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.TypeChecker\\.atCondExpr\\:\\(Ljavassist\\/compiler\\/ast\\/CondExpr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.TypeChecker\\.atBinExpr\\:\\(Ljavassist\\/compiler\\/ast\\/BinExpr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.TypeChecker\\.atPlusExpr\\:\\(Ljavassist\\/compiler\\/ast\\/BinExpr\\;\\)Ljavassist\\/compiler\\/ast\\/Expr\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.TypeChecker\\.isConstant\\:\\(Ljavassist\\/compiler\\/ast\\/BinExpr\\;ILjavassist\\/compiler\\/ast\\/ASTree\\;Ljavassist\\/compiler\\/ast\\/ASTree\\;\\)Z"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.TypeChecker\\.computeBinExprType\\:\\(Ljavassist\\/compiler\\/ast\\/BinExpr\\;II\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.TypeChecker\\.booleanExpr\\:\\(Ljavassist\\/compiler\\/ast\\/ASTree\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.TypeChecker\\.insertCast\\:\\(Ljavassist\\/compiler\\/ast\\/BinExpr\\;II\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.TypeChecker\\.atCastExpr\\:\\(Ljavassist\\/compiler\\/ast\\/CastExpr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.TypeChecker\\.atInstanceOfExpr\\:\\(Ljavassist\\/compiler\\/ast\\/InstanceOfExpr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.TypeChecker\\.atExpr\\:\\(Ljavassist\\/compiler\\/ast\\/Expr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.TypeChecker\\.atCallExpr\\:\\(Ljavassist\\/compiler\\/ast\\/CallExpr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.TypeChecker\\.badMethod\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.TypeChecker\\.atMethodCallCore\\:\\(Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;Ljavassist\\/compiler\\/ast\\/ASTList\\;\\)Ljavassist\\/compiler\\/MemberResolver\\$Method\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.TypeChecker\\.atMethodArgs\\:\\(Ljavassist\\/compiler\\/ast\\/ASTList\\;\\[I\\[I\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.TypeChecker\\.setReturnType\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.TypeChecker\\.atFieldRead\\:\\(Ljavassist\\/compiler\\/ast\\/ASTree\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.TypeChecker\\.atFieldRead\\:\\(Ljavassist\\/CtField\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.TypeChecker\\.fieldAccess\\:\\(Ljavassist\\/compiler\\/ast\\/ASTree\\;\\)Ljavassist\\/CtField\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.TypeChecker\\.fieldAccess2\\:\\(Ljavassist\\/compiler\\/ast\\/Expr\\;Ljava\\/lang\\/String\\;\\)Ljavassist\\/CtField\\;"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.TypeChecker\\.atClassObject\\:\\(Ljavassist\\/compiler\\/ast\\/Expr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.TypeChecker\\.atArrayLength\\:\\(Ljavassist\\/compiler\\/ast\\/Expr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.TypeChecker\\.atArrayRead\\:\\(Ljavassist\\/compiler\\/ast\\/ASTree\\;Ljavassist\\/compiler\\/ast\\/ASTree\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.TypeChecker\\.atPlusPlus\\:\\(ILjavassist\\/compiler\\/ast\\/ASTree\\;Ljavassist\\/compiler\\/ast\\/Expr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.TypeChecker\\.atFieldPlusPlus\\:\\(Ljavassist\\/compiler\\/ast\\/ASTree\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.TypeChecker\\.atMember\\:\\(Ljavassist\\/compiler\\/ast\\/Member\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.TypeChecker\\.atVariable\\:\\(Ljavassist\\/compiler\\/ast\\/Variable\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.TypeChecker\\.atKeyword\\:\\(Ljavassist\\/compiler\\/ast\\/Keyword\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.TypeChecker\\.atStringL\\:\\(Ljavassist\\/compiler\\/ast\\/StringL\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.TypeChecker\\.atIntConst\\:\\(Ljavassist\\/compiler\\/ast\\/IntConst\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.TypeChecker\\.atDoubleConst\\:\\(Ljavassist\\/compiler\\/ast\\/DoubleConst\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ast\\.ASTList\\.accept\\:\\(Ljavassist\\/compiler\\/ast\\/Visitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ast\\.ASTree\\.accept\\:\\(Ljavassist\\/compiler\\/ast\\/Visitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ast\\.ArrayInit\\.accept\\:\\(Ljavassist\\/compiler\\/ast\\/Visitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ast\\.AssignExpr\\.accept\\:\\(Ljavassist\\/compiler\\/ast\\/Visitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ast\\.BinExpr\\.accept\\:\\(Ljavassist\\/compiler\\/ast\\/Visitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ast\\.CallExpr\\.accept\\:\\(Ljavassist\\/compiler\\/ast\\/Visitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ast\\.CastExpr\\.accept\\:\\(Ljavassist\\/compiler\\/ast\\/Visitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ast\\.CondExpr\\.accept\\:\\(Ljavassist\\/compiler\\/ast\\/Visitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ast\\.Declarator\\.accept\\:\\(Ljavassist\\/compiler\\/ast\\/Visitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ast\\.DoubleConst\\.accept\\:\\(Ljavassist\\/compiler\\/ast\\/Visitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ast\\.Expr\\.accept\\:\\(Ljavassist\\/compiler\\/ast\\/Visitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ast\\.FieldDecl\\.accept\\:\\(Ljavassist\\/compiler\\/ast\\/Visitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ast\\.InstanceOfExpr\\.accept\\:\\(Ljavassist\\/compiler\\/ast\\/Visitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ast\\.IntConst\\.accept\\:\\(Ljavassist\\/compiler\\/ast\\/Visitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ast\\.Keyword\\.accept\\:\\(Ljavassist\\/compiler\\/ast\\/Visitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ast\\.Member\\.accept\\:\\(Ljavassist\\/compiler\\/ast\\/Visitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ast\\.MethodDecl\\.accept\\:\\(Ljavassist\\/compiler\\/ast\\/Visitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ast\\.NewExpr\\.accept\\:\\(Ljavassist\\/compiler\\/ast\\/Visitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ast\\.Pair\\.accept\\:\\(Ljavassist\\/compiler\\/ast\\/Visitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ast\\.Stmnt\\.accept\\:\\(Ljavassist\\/compiler\\/ast\\/Visitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ast\\.StringL\\.accept\\:\\(Ljavassist\\/compiler\\/ast\\/Visitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ast\\.Symbol\\.accept\\:\\(Ljavassist\\/compiler\\/ast\\/Visitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ast\\.Variable\\.accept\\:\\(Ljavassist\\/compiler\\/ast\\/Visitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ast\\.Visitor\\.atASTList\\:\\(Ljavassist\\/compiler\\/ast\\/ASTList\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ast\\.Visitor\\.atPair\\:\\(Ljavassist\\/compiler\\/ast\\/Pair\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ast\\.Visitor\\.atFieldDecl\\:\\(Ljavassist\\/compiler\\/ast\\/FieldDecl\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ast\\.Visitor\\.atMethodDecl\\:\\(Ljavassist\\/compiler\\/ast\\/MethodDecl\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ast\\.Visitor\\.atStmnt\\:\\(Ljavassist\\/compiler\\/ast\\/Stmnt\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ast\\.Visitor\\.atDeclarator\\:\\(Ljavassist\\/compiler\\/ast\\/Declarator\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ast\\.Visitor\\.atAssignExpr\\:\\(Ljavassist\\/compiler\\/ast\\/AssignExpr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ast\\.Visitor\\.atCondExpr\\:\\(Ljavassist\\/compiler\\/ast\\/CondExpr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ast\\.Visitor\\.atBinExpr\\:\\(Ljavassist\\/compiler\\/ast\\/BinExpr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ast\\.Visitor\\.atExpr\\:\\(Ljavassist\\/compiler\\/ast\\/Expr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ast\\.Visitor\\.atCallExpr\\:\\(Ljavassist\\/compiler\\/ast\\/CallExpr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ast\\.Visitor\\.atCastExpr\\:\\(Ljavassist\\/compiler\\/ast\\/CastExpr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ast\\.Visitor\\.atInstanceOfExpr\\:\\(Ljavassist\\/compiler\\/ast\\/InstanceOfExpr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ast\\.Visitor\\.atNewExpr\\:\\(Ljavassist\\/compiler\\/ast\\/NewExpr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ast\\.Visitor\\.atSymbol\\:\\(Ljavassist\\/compiler\\/ast\\/Symbol\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ast\\.Visitor\\.atMember\\:\\(Ljavassist\\/compiler\\/ast\\/Member\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ast\\.Visitor\\.atVariable\\:\\(Ljavassist\\/compiler\\/ast\\/Variable\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ast\\.Visitor\\.atKeyword\\:\\(Ljavassist\\/compiler\\/ast\\/Keyword\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ast\\.Visitor\\.atStringL\\:\\(Ljavassist\\/compiler\\/ast\\/StringL\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ast\\.Visitor\\.atIntConst\\:\\(Ljavassist\\/compiler\\/ast\\/IntConst\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ast\\.Visitor\\.atDoubleConst\\:\\(Ljavassist\\/compiler\\/ast\\/DoubleConst\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.compiler\\.ast\\.Visitor\\.atArrayInit\\:\\(Ljavassist\\/compiler\\/ast\\/ArrayInit\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.convert\\.TransformAccessArrayField\\.\\<init\\>\\:\\(Ljavassist\\/convert\\/Transformer\\;Ljava\\/lang\\/String\\;Ljavassist\\/CodeConverter\\$ArrayAccessReplacementMethodNames\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.convert\\.TransformAccessArrayField\\.initialize\\:\\(Ljavassist\\/bytecode\\/ConstPool\\;Ljavassist\\/CtClass\\;Ljavassist\\/bytecode\\/MethodInfo\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.convert\\.TransformAccessArrayField\\.transform\\:\\(Ljavassist\\/CtClass\\;ILjavassist\\/bytecode\\/CodeIterator\\;Ljavassist\\/bytecode\\/ConstPool\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.convert\\.TransformAccessArrayField\\.getFrame\\:\\(I\\)Ljavassist\\/bytecode\\/analysis\\/Frame\\;"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.convert\\.TransformAccessArrayField\\.initFrames\\:\\(Ljavassist\\/CtClass\\;Ljavassist\\/bytecode\\/MethodInfo\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.convert\\.TransformAccessArrayField\\.getTopType\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.convert\\.TransformAccessArrayField\\.replace\\:\\(Ljavassist\\/bytecode\\/ConstPool\\;Ljavassist\\/bytecode\\/CodeIterator\\;IILjava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.convert\\.TransformAccessArrayField\\.getLoadReplacementSignature\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.convert\\.TransformAccessArrayField\\.getStoreReplacementSignature\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.convert\\.TransformAfter\\.\\<init\\>\\:\\(Ljavassist\\/convert\\/Transformer\\;Ljavassist\\/CtMethod\\;Ljavassist\\/CtMethod\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.convert\\.TransformAfter\\.match2\\:\\(ILjavassist\\/bytecode\\/CodeIterator\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.convert\\.TransformBefore\\.\\<init\\>\\:\\(Ljavassist\\/convert\\/Transformer\\;Ljavassist\\/CtMethod\\;Ljavassist\\/CtMethod\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.convert\\.TransformBefore\\.match\\:\\(IILjavassist\\/bytecode\\/CodeIterator\\;ILjavassist\\/bytecode\\/ConstPool\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.convert\\.TransformBefore\\.match2\\:\\(ILjavassist\\/bytecode\\/CodeIterator\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.convert\\.TransformCall\\.transform\\:\\(Ljavassist\\/CtClass\\;ILjavassist\\/bytecode\\/CodeIterator\\;Ljavassist\\/bytecode\\/ConstPool\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.convert\\.TransformCall\\.match\\:\\(IILjavassist\\/bytecode\\/CodeIterator\\;ILjavassist\\/bytecode\\/ConstPool\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.convert\\.TransformNew\\.transform\\:\\(Ljavassist\\/CtClass\\;ILjavassist\\/bytecode\\/CodeIterator\\;Ljavassist\\/bytecode\\/ConstPool\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.convert\\.TransformNewClass\\.transform\\:\\(Ljavassist\\/CtClass\\;ILjavassist\\/bytecode\\/CodeIterator\\;Ljavassist\\/bytecode\\/ConstPool\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.convert\\.TransformReadField\\.transform\\:\\(Ljavassist\\/CtClass\\;ILjavassist\\/bytecode\\/CodeIterator\\;Ljavassist\\/bytecode\\/ConstPool\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.convert\\.TransformWriteField\\.transform\\:\\(Ljavassist\\/CtClass\\;ILjavassist\\/bytecode\\/CodeIterator\\;Ljavassist\\/bytecode\\/ConstPool\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.convert\\.Transformer\\.initialize\\:\\(Ljavassist\\/bytecode\\/ConstPool\\;Ljavassist\\/CtClass\\;Ljavassist\\/bytecode\\/MethodInfo\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException", 
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.convert\\.Transformer\\.transform\\:\\(Ljavassist\\/CtClass\\;ILjavassist\\/bytecode\\/CodeIterator\\;Ljavassist\\/bytecode\\/ConstPool\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.expr\\.Cast\\$ProceedForCast\\.doit\\:\\(Ljavassist\\/compiler\\/JvstCodeGen\\;Ljavassist\\/bytecode\\/Bytecode\\;Ljavassist\\/compiler\\/ast\\/ASTList\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.expr\\.Cast\\$ProceedForCast\\.setReturnType\\:\\(Ljavassist\\/compiler\\/JvstTypeChecker\\;Ljavassist\\/compiler\\/ast\\/ASTList\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.expr\\.Cast\\.getType\\:\\(\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.expr\\.Cast\\.replace\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.expr\\.ConstructorCall\\.getMethod\\:\\(\\)Ljavassist\\/CtMethod\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.expr\\.ConstructorCall\\.getConstructor\\:\\(\\)Ljavassist\\/CtConstructor\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.expr\\.Expr\\.checkResultValue\\:\\(Ljavassist\\/CtClass\\;Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.expr\\.Expr\\.replace\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.expr\\.Expr\\.replace\\:\\(Ljava\\/lang\\/String\\;Ljavassist\\/expr\\/ExprEditor\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.expr\\.Expr\\.replace0\\:\\(ILjavassist\\/bytecode\\/Bytecode\\;I\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.expr\\.Expr\\.runEditor\\:\\(Ljavassist\\/expr\\/ExprEditor\\;Ljavassist\\/bytecode\\/CodeIterator\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.expr\\.ExprEditor\\.doit\\:\\(Ljavassist\\/CtClass\\;Ljavassist\\/bytecode\\/MethodInfo\\;\\)Z"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.expr\\.ExprEditor\\.doit\\:\\(Ljavassist\\/CtClass\\;Ljavassist\\/bytecode\\/MethodInfo\\;Ljavassist\\/expr\\/ExprEditor\\$LoopContext\\;Ljavassist\\/bytecode\\/CodeIterator\\;I\\)Z"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.expr\\.ExprEditor\\.loopBody\\:\\(Ljavassist\\/bytecode\\/CodeIterator\\;Ljavassist\\/CtClass\\;Ljavassist\\/bytecode\\/MethodInfo\\;Ljavassist\\/expr\\/ExprEditor\\$LoopContext\\;\\)Z"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.expr\\.ExprEditor\\.edit\\:\\(Ljavassist\\/expr\\/NewExpr\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.expr\\.ExprEditor\\.edit\\:\\(Ljavassist\\/expr\\/NewArray\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.expr\\.ExprEditor\\.edit\\:\\(Ljavassist\\/expr\\/MethodCall\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.expr\\.ExprEditor\\.edit\\:\\(Ljavassist\\/expr\\/ConstructorCall\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.expr\\.ExprEditor\\.edit\\:\\(Ljavassist\\/expr\\/FieldAccess\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.expr\\.ExprEditor\\.edit\\:\\(Ljavassist\\/expr\\/Instanceof\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.expr\\.ExprEditor\\.edit\\:\\(Ljavassist\\/expr\\/Cast\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.expr\\.ExprEditor\\.edit\\:\\(Ljavassist\\/expr\\/Handler\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.expr\\.FieldAccess\\$ProceedForRead\\.doit\\:\\(Ljavassist\\/compiler\\/JvstCodeGen\\;Ljavassist\\/bytecode\\/Bytecode\\;Ljavassist\\/compiler\\/ast\\/ASTList\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.expr\\.FieldAccess\\$ProceedForRead\\.setReturnType\\:\\(Ljavassist\\/compiler\\/JvstTypeChecker\\;Ljavassist\\/compiler\\/ast\\/ASTList\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.expr\\.FieldAccess\\$ProceedForWrite\\.doit\\:\\(Ljavassist\\/compiler\\/JvstCodeGen\\;Ljavassist\\/bytecode\\/Bytecode\\;Ljavassist\\/compiler\\/ast\\/ASTList\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.expr\\.FieldAccess\\$ProceedForWrite\\.setReturnType\\:\\(Ljavassist\\/compiler\\/JvstTypeChecker\\;Ljavassist\\/compiler\\/ast\\/ASTList\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.expr\\.FieldAccess\\.getCtClass\\:\\(\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.expr\\.FieldAccess\\.getField\\:\\(\\)Ljavassist\\/CtField\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.expr\\.FieldAccess\\.replace\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.expr\\.Handler\\.getType\\:\\(\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.expr\\.Handler\\.replace\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.expr\\.Handler\\.insertBefore\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.expr\\.Instanceof\\$ProceedForInstanceof\\.doit\\:\\(Ljavassist\\/compiler\\/JvstCodeGen\\;Ljavassist\\/bytecode\\/Bytecode\\;Ljavassist\\/compiler\\/ast\\/ASTList\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.expr\\.Instanceof\\$ProceedForInstanceof\\.setReturnType\\:\\(Ljavassist\\/compiler\\/JvstTypeChecker\\;Ljavassist\\/compiler\\/ast\\/ASTList\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.expr\\.Instanceof\\.getType\\:\\(\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.expr\\.Instanceof\\.replace\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.expr\\.MethodCall\\.getCtClass\\:\\(\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.expr\\.MethodCall\\.getMethod\\:\\(\\)Ljavassist\\/CtMethod\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.expr\\.MethodCall\\.replace\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.expr\\.NewArray\\$ProceedForArray\\.doit\\:\\(Ljavassist\\/compiler\\/JvstCodeGen\\;Ljavassist\\/bytecode\\/Bytecode\\;Ljavassist\\/compiler\\/ast\\/ASTList\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.expr\\.NewArray\\$ProceedForArray\\.setReturnType\\:\\(Ljavassist\\/compiler\\/JvstTypeChecker\\;Ljavassist\\/compiler\\/ast\\/ASTList\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.expr\\.NewArray\\.getComponentType\\:\\(\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.expr\\.NewArray\\.replace\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError", 
   "javassist.NotFoundException", 
   "javassist.bytecode.BadBytecode", 
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.expr\\.NewArray\\.replace2\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.expr\\.NewExpr\\$ProceedForNew\\.doit\\:\\(Ljavassist\\/compiler\\/JvstCodeGen\\;Ljavassist\\/bytecode\\/Bytecode\\;Ljavassist\\/compiler\\/ast\\/ASTList\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.compiler.CompileError"
  ], 
  "methodRegex": "javassist\\.expr\\.NewExpr\\$ProceedForNew\\.setReturnType\\:\\(Ljavassist\\/compiler\\/JvstTypeChecker\\;Ljavassist\\/compiler\\/ast\\/ASTList\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.expr\\.NewExpr\\.getCtClass\\:\\(\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.expr\\.NewExpr\\.getConstructor\\:\\(\\)Ljavassist\\/CtConstructor\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.expr\\.NewExpr\\.canReplace\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.expr\\.NewExpr\\.replace\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "javassist\\.runtime\\.Desc\\.getClassObject\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.scopedpool\\.ScopedClassPool\\.getLocally\\:\\(Ljava\\/lang\\/String\\;\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.scopedpool\\.ScopedClassPool\\.toClass\\:\\(Ljavassist\\/CtClass\\;Ljava\\/lang\\/ClassLoader\\;Ljava\\/security\\/ProtectionDomain\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.tools\\.Callback\\.insertBefore\\:\\(Ljavassist\\/CtBehavior\\;Ljavassist\\/tools\\/Callback\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.tools\\.Callback\\.insertAfter\\:\\(Ljavassist\\/CtBehavior\\;Ljavassist\\/tools\\/Callback\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.tools\\.Callback\\.insertAfter\\:\\(Ljavassist\\/CtBehavior\\;Ljavassist\\/tools\\/Callback\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.tools\\.Callback\\.insertAt\\:\\(Ljavassist\\/CtBehavior\\;Ljavassist\\/tools\\/Callback\\;I\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.tools\\.Dump\\.main\\:\\(\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.tools\\.framedump\\.main\\:\\(\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.tools\\.reflect\\.ClassMetaobject\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "javassist\\.tools\\.reflect\\.ClassMetaobject\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "javassist\\.tools\\.reflect\\.ClassMetaobject\\.getClassObject\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javassist.tools.reflect.CannotCreateException"
  ], 
  "methodRegex": "javassist\\.tools\\.reflect\\.ClassMetaobject\\.newInstance\\:\\(\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "javassist\\.tools\\.reflect\\.ClassMetaobject\\.invoke\\:\\(Ljava\\/lang\\/Object\\;I\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "javassist\\.tools\\.reflect\\.ClassMetaobject\\.trapMethodcall\\:\\(I\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException"
  ], 
  "methodRegex": "javassist\\.tools\\.reflect\\.ClassMetaobject\\.getMethodIndex\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Class\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.tools\\.reflect\\.Compiler\\.main\\:\\(\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.tools\\.reflect\\.Compiler\\.processClasses\\:\\(\\[Ljavassist\\/tools\\/reflect\\/CompiledClass\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "javassist\\.tools\\.reflect\\.Loader\\.main\\:\\(\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException", 
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.tools\\.reflect\\.Loader\\.\\<init\\>\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException", 
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.tools\\.reflect\\.Loader\\.makeReflective\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.tools\\.reflect\\.Metaobject\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "javassist\\.tools\\.reflect\\.Metaobject\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "javassist\\.tools\\.reflect\\.Metaobject\\.trapMethodcall\\:\\(I\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.tools\\.reflect\\.Reflection\\.start\\:\\(Ljavassist\\/ClassPool\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException", 
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.tools\\.reflect\\.Reflection\\.onLoad\\:\\(Ljavassist\\/ClassPool\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException", 
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.tools\\.reflect\\.Reflection\\.makeReflective\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException", 
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.tools\\.reflect\\.Reflection\\.makeReflective\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/Class\\;Ljava\\/lang\\/Class\\;\\)Z"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException", 
   "javassist.tools.reflect.CannotReflectException", 
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.tools\\.reflect\\.Reflection\\.makeReflective\\:\\(Ljavassist\\/CtClass\\;Ljavassist\\/CtClass\\;Ljavassist\\/CtClass\\;\\)Z"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException", 
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.tools\\.reflect\\.Reflection\\.modifyClassfile\\:\\(Ljavassist\\/CtClass\\;Ljavassist\\/CtClass\\;Ljavassist\\/CtClass\\;\\)Z"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException", 
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.tools\\.reflect\\.Reflection\\.processMethods\\:\\(Ljavassist\\/CtClass\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException", 
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.tools\\.reflect\\.Reflection\\.processMethods0\\:\\(ILjavassist\\/CtClass\\;Ljavassist\\/CtMethod\\;IZ\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.tools\\.reflect\\.Reflection\\.findOriginal\\:\\(Ljavassist\\/CtMethod\\;Z\\)Ljavassist\\/CtMethod\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException", 
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.tools\\.reflect\\.Reflection\\.processFields\\:\\(Ljavassist\\/CtClass\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.bytecode.BadBytecode"
  ], 
  "methodRegex": "javassist\\.tools\\.reflect\\.Reflection\\.rebuildClassFile\\:\\(Ljavassist\\/bytecode\\/ClassFile\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "javassist\\.tools\\.reflect\\.Sample\\.trap\\:\\(\\[Ljava\\/lang\\/Object\\;I\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "javassist\\.tools\\.reflect\\.Sample\\.trapStatic\\:\\(\\[Ljava\\/lang\\/Object\\;I\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javassist.NotFoundException", 
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.tools\\.rmi\\.AppletServer\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javassist.NotFoundException", 
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.tools\\.rmi\\.AppletServer\\.\\<init\\>\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javassist.NotFoundException", 
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.tools\\.rmi\\.AppletServer\\.\\<init\\>\\:\\(ILjavassist\\/ClassPool\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javassist.NotFoundException", 
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.tools\\.rmi\\.AppletServer\\.\\<init\\>\\:\\(Ljavassist\\/ClassPool\\;Ljavassist\\/tools\\/rmi\\/StubGenerator\\;I\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.tools\\.rmi\\.AppletServer\\.exportObject\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javassist.tools.web.BadHttpRequest"
  ], 
  "methodRegex": "javassist\\.tools\\.rmi\\.AppletServer\\.doReply\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/io\\/OutputStream\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.tools\\.rmi\\.AppletServer\\.processRMI\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "javassist\\.tools\\.rmi\\.AppletServer\\.readParameters\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.tools\\.rmi\\.AppletServer\\.convertRvalue\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.tools\\.rmi\\.AppletServer\\.lookupName\\:\\(Ljava\\/lang\\/String\\;Ljava\\/io\\/InputStream\\;Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.tools.rmi.ObjectNotFoundException"
  ], 
  "methodRegex": "javassist\\.tools\\.rmi\\.ObjectImporter\\.lookupObject\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.tools\\.rmi\\.ObjectImporter\\.createProxy\\:\\(ILjava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javassist.tools.rmi.RemoteException"
  ], 
  "methodRegex": "javassist\\.tools\\.rmi\\.ObjectImporter\\.call\\:\\(II\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.tools\\.rmi\\.ObjectImporter\\.skipHeader\\:\\(Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.tools\\.rmi\\.ObjectImporter\\.writeParameters\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\[Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.tools.rmi.RemoteException"
  ], 
  "methodRegex": "javassist\\.tools\\.rmi\\.Sample\\.forwardStatic\\:\\(\\[Ljava\\/lang\\/Object\\;I\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.tools\\.rmi\\.StubGenerator\\.start\\:\\(Ljavassist\\/ClassPool\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException", 
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.tools\\.rmi\\.StubGenerator\\.makeProxyClass\\:\\(Ljava\\/lang\\/Class\\;\\)Z"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException", 
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.tools\\.rmi\\.StubGenerator\\.produceProxyClass\\:\\(Ljavassist\\/CtClass\\;Ljava\\/lang\\/Class\\;\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.tools\\.rmi\\.StubGenerator\\.toCtClass\\:\\(Ljava\\/lang\\/Class\\;\\)Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.tools\\.rmi\\.StubGenerator\\.toCtClass\\:\\(\\[Ljava\\/lang\\/Class\\;\\)\\[Ljavassist\\/CtClass\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException", 
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.tools\\.rmi\\.StubGenerator\\.addMethods\\:\\(Ljavassist\\/CtClass\\;\\[Ljava\\/lang\\/reflect\\/Method\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException", 
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.tools\\.rmi\\.StubGenerator\\.modifySuperclass\\:\\(Ljavassist\\/CtClass\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "javassist\\.tools\\.web\\.Viewer\\.main\\:\\(\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "javassist\\.tools\\.web\\.Viewer\\.run\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "javassist\\.tools\\.web\\.Viewer\\.loadClass\\:\\(Ljava\\/lang\\/String\\;Z\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "javassist\\.tools\\.web\\.Viewer\\.findClass\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.tools\\.web\\.Viewer\\.fetchClass\\:\\(Ljava\\/lang\\/String\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.tools\\.web\\.Viewer\\.readStream\\:\\(Ljava\\/io\\/InputStream\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.tools\\.web\\.Webserver\\.main\\:\\(\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.tools\\.web\\.Webserver\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.tools\\.web\\.Webserver\\.\\<init\\>\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException", 
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.tools\\.web\\.Webserver\\.addTranslator\\:\\(Ljavassist\\/ClassPool\\;Ljavassist\\/Translator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.tools\\.web\\.Webserver\\.end\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.tools\\.web\\.Webserver\\.process\\:\\(Ljava\\/net\\/Socket\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.tools\\.web\\.Webserver\\.readLine\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.tools\\.web\\.Webserver\\.skipLine\\:\\(Ljava\\/io\\/InputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javassist.tools.web.BadHttpRequest"
  ], 
  "methodRegex": "javassist\\.tools\\.web\\.Webserver\\.doReply\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/io\\/OutputStream\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.tools.web.BadHttpRequest"
  ], 
  "methodRegex": "javassist\\.tools\\.web\\.Webserver\\.checkFilename\\:\\(Ljava\\/lang\\/String\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javassist.tools.web.BadHttpRequest"
  ], 
  "methodRegex": "javassist\\.tools\\.web\\.Webserver\\.letUsersSendClassfile\\:\\(Ljava\\/io\\/OutputStream\\;Ljava\\/lang\\/String\\;I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.tools\\.web\\.Webserver\\.sendHeader\\:\\(Ljava\\/io\\/OutputStream\\;JI\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.tools\\.web\\.Webserver\\.replyError\\:\\(Ljava\\/io\\/OutputStream\\;Ljavassist\\/tools\\/web\\/BadHttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "javassist\\.util\\.HotSwapAgent\\.premain\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/instrument\\/Instrumentation\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "javassist\\.util\\.HotSwapAgent\\.agentmain\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/instrument\\/Instrumentation\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException", 
   "java.io.IOException", 
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.util\\.HotSwapAgent\\.redefine\\:\\(Ljava\\/lang\\/Class\\;Ljavassist\\/CtClass\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException", 
   "java.io.IOException", 
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.util\\.HotSwapAgent\\.redefine\\:\\(\\[Ljava\\/lang\\/Class\\;\\[Ljavassist\\/CtClass\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.util\\.HotSwapAgent\\.startAgent\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javassist.CannotCompileException", 
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.util\\.HotSwapAgent\\.createAgentJarFile\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javassist.CannotCompileException", 
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.util\\.HotSwapAgent\\.createJarFile\\:\\(\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javassist.CannotCompileException", 
   "javassist.NotFoundException"
  ], 
  "methodRegex": "javassist\\.util\\.HotSwapAgent\\.createJarFile\\:\\(Ljava\\/io\\/File\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.sun.jdi.connect.IllegalConnectorArgumentsException"
  ], 
  "methodRegex": "javassist\\.util\\.HotSwapper\\.\\<init\\>\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.sun.jdi.connect.IllegalConnectorArgumentsException"
  ], 
  "methodRegex": "javassist\\.util\\.HotSwapper\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.util\\.HotSwapper\\.findConnector\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/sun\\/jdi\\/connect\\/Connector\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "javassist\\.util\\.HotSwapper\\.waitEvent\\:\\(\\)Lcom\\/sun\\/jdi\\/event\\/EventSet\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.util\\.proxy\\.DefineClassHelper\\.toClass\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/ClassLoader\\;Ljava\\/security\\/ProtectionDomain\\;\\[B\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.util\\.proxy\\.DefineClassHelper\\.toPublicClass\\:\\(Ljava\\/lang\\/String\\;\\[B\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.util\\.proxy\\.DefineClassHelper\\.toClass2\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/ClassLoader\\;Ljava\\/security\\/ProtectionDomain\\;\\[B\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.util\\.proxy\\.DefineClassHelper\\.toClass3\\:\\(Ljava\\/lang\\/reflect\\/Method\\;Ljava\\/lang\\/ClassLoader\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.util\\.proxy\\.FactoryHelper\\.toClass\\:\\(Ljavassist\\/bytecode\\/ClassFile\\;Ljava\\/lang\\/ClassLoader\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.util\\.proxy\\.FactoryHelper\\.toClass\\:\\(Ljavassist\\/bytecode\\/ClassFile\\;Ljava\\/lang\\/ClassLoader\\;Ljava\\/security\\/ProtectionDomain\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.util\\.proxy\\.FactoryHelper\\.toBytecode\\:\\(Ljavassist\\/bytecode\\/ClassFile\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.util\\.proxy\\.FactoryHelper\\.writeFile\\:\\(Ljavassist\\/bytecode\\/ClassFile\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException", 
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.util\\.proxy\\.FactoryHelper\\.writeFile0\\:\\(Ljavassist\\/bytecode\\/ClassFile\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "javassist\\.util\\.proxy\\.MethodHandler\\.invoke\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException", 
   "java.lang.IllegalArgumentException", 
   "java.lang.InstantiationException", 
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "javassist\\.util\\.proxy\\.ProxyFactory\\.create\\:\\(\\[Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Object\\;Ljavassist\\/util\\/proxy\\/MethodHandler\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException", 
   "java.lang.IllegalArgumentException", 
   "java.lang.InstantiationException", 
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "javassist\\.util\\.proxy\\.ProxyFactory\\.create\\:\\(\\[Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.util\\.proxy\\.ProxyFactory\\.make\\:\\(\\)Ljavassist\\/bytecode\\/ClassFile\\;"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.util\\.proxy\\.ProxyFactory\\.addClassInitializer\\:\\(Ljavassist\\/bytecode\\/ClassFile\\;Ljavassist\\/bytecode\\/ConstPool\\;Ljava\\/lang\\/String\\;ILjava\\/util\\/ArrayList\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.util\\.proxy\\.ProxyFactory\\.addSetter\\:\\(Ljava\\/lang\\/String\\;Ljavassist\\/bytecode\\/ClassFile\\;Ljavassist\\/bytecode\\/ConstPool\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.util\\.proxy\\.ProxyFactory\\.addGetter\\:\\(Ljava\\/lang\\/String\\;Ljavassist\\/bytecode\\/ClassFile\\;Ljavassist\\/bytecode\\/ConstPool\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.util\\.proxy\\.ProxyFactory\\.overrideMethods\\:\\(Ljavassist\\/bytecode\\/ClassFile\\;Ljavassist\\/bytecode\\/ConstPool\\;Ljava\\/lang\\/String\\;Ljava\\/util\\/ArrayList\\;\\)I"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.util\\.proxy\\.ProxyFactory\\.override\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/reflect\\/Method\\;Ljava\\/lang\\/String\\;ILjava\\/lang\\/String\\;Ljavassist\\/bytecode\\/ClassFile\\;Ljavassist\\/bytecode\\/ConstPool\\;Ljava\\/util\\/ArrayList\\;\\)V"
 }, 
 {
  "exceptions": [
   "javassist.CannotCompileException"
  ], 
  "methodRegex": "javassist\\.util\\.proxy\\.ProxyFactory\\.makeConstructors\\:\\(Ljava\\/lang\\/String\\;Ljavassist\\/bytecode\\/ClassFile\\;Ljavassist\\/bytecode\\/ConstPool\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.util\\.proxy\\.ProxyObjectInputStream\\.\\<init\\>\\:\\(Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "javassist\\.util\\.proxy\\.ProxyObjectInputStream\\.readClassDescriptor\\:\\(\\)Ljava\\/io\\/ObjectStreamClass\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.util\\.proxy\\.ProxyObjectOutputStream\\.\\<init\\>\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javassist\\.util\\.proxy\\.ProxyObjectOutputStream\\.writeClassDescriptor\\:\\(Ljava\\/io\\/ObjectStreamClass\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.util\\.proxy\\.RuntimeSupport\\$DefaultMethodHandler\\.invoke\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.InvalidClassException"
  ], 
  "methodRegex": "javassist\\.util\\.proxy\\.RuntimeSupport\\.makeSerializedProxy\\:\\(Ljava\\/lang\\/Object\\;\\)Ljavassist\\/util\\/proxy\\/SerializedProxy\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.util\\.proxy\\.SecurityActions\\$3\\.run\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.util\\.proxy\\.SecurityActions\\$4\\.run\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.util\\.proxy\\.SecurityActions\\$6\\.run\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException"
  ], 
  "methodRegex": "javassist\\.util\\.proxy\\.SecurityActions\\.getDeclaredMethod\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/reflect\\/Method\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException"
  ], 
  "methodRegex": "javassist\\.util\\.proxy\\.SecurityActions\\.getDeclaredConstructor\\:\\(Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/reflect\\/Constructor\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "javassist\\.util\\.proxy\\.SecurityActions\\.set\\:\\(Ljava\\/lang\\/reflect\\/Field\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javassist\\.util\\.proxy\\.SerializedProxy\\$1\\.run\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "javassist\\.util\\.proxy\\.SerializedProxy\\.loadClass\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.ObjectStreamException"
  ], 
  "methodRegex": "javassist\\.util\\.proxy\\.SerializedProxy\\.readResolve\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.AnnotationIntrospector\\.refineSerializationType\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/cfg\\/MapperConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.AnnotationIntrospector\\.refineDeserializationType\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/cfg\\/MapperConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.BeanProperty\\$Bogus\\.depositSchemaProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonObjectFormatVisitor\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.BeanProperty\\.depositSchemaProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonObjectFormatVisitor\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DatabindContext\\.resolveSubType\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DatabindContext\\.objectIdGeneratorInstance\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/ObjectIdInfo\\;\\)Lcom\\/fasterxml\\/jackson\\/annotation\\/ObjectIdGenerator\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DatabindContext\\.converterInstance\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;Ljava\\/lang\\/Object\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/util\\/Converter\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DatabindContext\\.reportBadDefinition\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DatabindContext\\.reportBadDefinition\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationConfig\\.findTypeDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.findInjectableValue\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.findContextualValueDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.findNonContextualValueDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.findRootValueDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.findKeyDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/KeyDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.deser.UnresolvedForwardReference"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.checkUnresolvedObjectId\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.findClass\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.deserializerInstance\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;Ljava\\/lang\\/Object\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.keyDeserializerInstance\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;Ljava\\/lang\\/Object\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/KeyDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.handlePrimaryContextualization\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.handleSecondaryContextualization\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.parseDate\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.readValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.readValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.readPropertyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.readPropertyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.handleUnknownProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.handleWeirdKey\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.handleWeirdStringValue\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.handleWeirdNumberValue\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/Number\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.handleWeirdNativeValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.handleMissingInstantiator\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/ValueInstantiator\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.handleInstantiationProblem\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Throwable\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.handleUnexpectedToken\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.handleUnexpectedToken\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.handleUnknownTypeId\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeIdResolver\\;Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.handleMissingTypeId\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeIdResolver\\;Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.reportWrongTokenException\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.reportWrongTokenException\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.reportWrongTokenException\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.reportUnresolvedObjectId\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/impl\\/ObjectIdReader\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.reportInputMismatch\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.reportInputMismatch\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.reportInputMismatch\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.reportInputMismatch\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.reportTrailingTokens\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.reportWrongTokenException\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.reportUnknownProperty\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.reportMissingContent\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.reportBadTypeDefinition\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.reportBadPropertyDefinition\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/BeanPropertyDefinition\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.reportBadDefinition\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.reportBadMerge\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.reportMappingException\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.InjectableValues\\$Std\\.findInjectableValue\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.InjectableValues\\.findInjectableValue\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.JsonDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.JsonDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.JsonDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.JsonDeserializer\\.getNullValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.JsonDeserializer\\.getEmptyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.JsonNode\\.binaryValue\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.JsonNode\\.at\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/TreeNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.JsonSerializable\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.JsonSerializable\\.serializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.JsonSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.JsonSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.JsonSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.KeyDeserializer\\.deserializeKey\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.MappingIterator\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.MappingIterator\\.hasNextValue\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.MappingIterator\\.nextValue\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.MappingIterator\\.readAll\\:\\(\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.MappingIterator\\.readAll\\:\\(Ljava\\/util\\/List\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.MappingIterator\\.readAll\\:\\(Ljava\\/util\\/Collection\\;\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.MappingIterator\\.\\_resync\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.MappingJsonFactory\\.hasFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/format\\/InputAccessor\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/format\\/MatchStrength\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/TypeReference\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/ResolvedType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readTree\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/TreeNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/ResolvedType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/MappingIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/MappingIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Ljava\\/lang\\/Class\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/MappingIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/TypeReference\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/MappingIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readTree\\:\\(Ljava\\/io\\/InputStream\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readTree\\:\\(Ljava\\/io\\/Reader\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readTree\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readTree\\:\\(\\[B\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readTree\\:\\(Ljava\\/io\\/File\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readTree\\:\\(Ljava\\/net\\/URL\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.writeValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.writeTree\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/core\\/TreeNode\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.writeTree\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.treeToValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/TreeNode\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.valueToTree\\:\\(Ljava\\/lang\\/Object\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(Ljava\\/io\\/File\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(Ljava\\/io\\/File\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/TypeReference\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(Ljava\\/io\\/File\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(Ljava\\/net\\/URL\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(Ljava\\/net\\/URL\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/TypeReference\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(Ljava\\/net\\/URL\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/TypeReference\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(Ljava\\/io\\/Reader\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(Ljava\\/io\\/Reader\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/TypeReference\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(Ljava\\/io\\/Reader\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(Ljava\\/io\\/InputStream\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/TypeReference\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(Ljava\\/io\\/InputStream\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(\\[BLjava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(\\[BIILjava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(\\[BLcom\\/fasterxml\\/jackson\\/core\\/type\\/TypeReference\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(\\[BIILcom\\/fasterxml\\/jackson\\/core\\/type\\/TypeReference\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(\\[BLcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(\\[BIILcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(Ljava\\/io\\/DataInput\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(Ljava\\/io\\/DataInput\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.writeValue\\:\\(Ljava\\/io\\/File\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.writeValue\\:\\(Ljava\\/io\\/OutputStream\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.writeValue\\:\\(Ljava\\/io\\/DataOutput\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.writeValue\\:\\(Ljava\\/io\\/Writer\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.writeValueAsString\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.writeValueAsBytes\\:\\(Ljava\\/lang\\/Object\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.convertValue\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.convertValue\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/TypeReference\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.convertValue\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.\\_convert\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.updateValue\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.generateJsonSchema\\:\\(Ljava\\/lang\\/Class\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsonschema\\/JsonSchema\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.acceptJsonFormatVisitor\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.\\_configAndWriteValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.\\_configAndWriteCloseable\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializationConfig\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.\\_writeCloseableValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializationConfig\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.\\_readValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.\\_readMapAndClose\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.\\_readTreeAndClose\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.\\_unwrapAndDeserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.\\_initForReading\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.\\_initForReading\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.\\_verifyNoTrailingTokens\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.\\_findRootDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/ResolvedType\\;\\)Ljava\\/util\\/Iterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/TypeReference\\;\\)Ljava\\/util\\/Iterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/util\\/Iterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.\\_initForReading\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.\\_initForMultiRead\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/TypeReference\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/ResolvedType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/util\\/Iterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/TypeReference\\;\\)Ljava\\/util\\/Iterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/ResolvedType\\;\\)Ljava\\/util\\/Iterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Ljava\\/util\\/Iterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readTree\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/TreeNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValue\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValue\\:\\(Ljava\\/io\\/Reader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValue\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValue\\:\\(\\[B\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValue\\:\\(\\[BII\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValue\\:\\(Ljava\\/io\\/File\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValue\\:\\(Ljava\\/net\\/URL\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValue\\:\\(Ljava\\/io\\/DataInput\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readTree\\:\\(Ljava\\/io\\/InputStream\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readTree\\:\\(Ljava\\/io\\/Reader\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readTree\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readTree\\:\\(Ljava\\/io\\/DataInput\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/MappingIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValues\\:\\(Ljava\\/io\\/InputStream\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/MappingIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValues\\:\\(Ljava\\/io\\/Reader\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/MappingIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValues\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/MappingIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValues\\:\\(\\[BII\\)Lcom\\/fasterxml\\/jackson\\/databind\\/MappingIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValues\\:\\(\\[B\\)Lcom\\/fasterxml\\/jackson\\/databind\\/MappingIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValues\\:\\(Ljava\\/io\\/File\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/MappingIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValues\\:\\(Ljava\\/net\\/URL\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/MappingIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValues\\:\\(Ljava\\/io\\/DataInput\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/MappingIterator\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.treeToValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/TreeNode\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.writeValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.\\_bind\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.\\_bindAndClose\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.\\_bindAndCloseAsTree\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.\\_bindAsTree\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.\\_bindAndReadValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/MappingIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.\\_unwrapAndDeserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.\\_verifyNoTrailingTokens\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.\\_detectBindAndClose\\:\\(\\[BII\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.\\_detectBindAndClose\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/DataFormatReaders\\$Match\\;Z\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.\\_detectBindAndReadValues\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/DataFormatReaders\\$Match\\;Z\\)Lcom\\/fasterxml\\/jackson\\/databind\\/MappingIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.\\_detectBindAndCloseAsTree\\:\\(Ljava\\/io\\/InputStream\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.\\_reportUnkownFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/DataFormatReaders\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/DataFormatReaders\\$Match\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.\\_inputStream\\:\\(Ljava\\/net\\/URL\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.\\_inputStream\\:\\(Ljava\\/io\\/File\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.\\_reportUndetectableSource\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.\\_findRootDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.\\_findTreeDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\$Prefetch\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/DefaultSerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\.\\_newSequenceWriter\\:\\(ZLcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Z\\)Lcom\\/fasterxml\\/jackson\\/databind\\/SequenceWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\.writeValues\\:\\(Ljava\\/io\\/File\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/SequenceWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\.writeValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/SequenceWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\.writeValues\\:\\(Ljava\\/io\\/Writer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/SequenceWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\.writeValues\\:\\(Ljava\\/io\\/OutputStream\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/SequenceWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\.writeValues\\:\\(Ljava\\/io\\/DataOutput\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/SequenceWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\.writeValuesAsArray\\:\\(Ljava\\/io\\/File\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/SequenceWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\.writeValuesAsArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/SequenceWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\.writeValuesAsArray\\:\\(Ljava\\/io\\/Writer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/SequenceWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\.writeValuesAsArray\\:\\(Ljava\\/io\\/OutputStream\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/SequenceWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\.writeValuesAsArray\\:\\(Ljava\\/io\\/DataOutput\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/SequenceWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\.writeValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\.writeValue\\:\\(Ljava\\/io\\/File\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\.writeValue\\:\\(Ljava\\/io\\/OutputStream\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\.writeValue\\:\\(Ljava\\/io\\/Writer\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\.writeValue\\:\\(Ljava\\/io\\/DataOutput\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\.writeValueAsString\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\.writeValueAsBytes\\:\\(Ljava\\/lang\\/Object\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\.acceptJsonFormatVisitor\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\.\\_configAndWriteValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\.\\_writeCloseable\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SequenceWriter\\.\\<init\\>\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/DefaultSerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;ZLcom\\/fasterxml\\/jackson\\/databind\\/ObjectWriter\\$Prefetch\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SequenceWriter\\.init\\:\\(Z\\)Lcom\\/fasterxml\\/jackson\\/databind\\/SequenceWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SequenceWriter\\.write\\:\\(Ljava\\/lang\\/Object\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/SequenceWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SequenceWriter\\.write\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/SequenceWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SequenceWriter\\.writeAll\\:\\(\\[Ljava\\/lang\\/Object\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/SequenceWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SequenceWriter\\.writeAll\\:\\(Ljava\\/util\\/Collection\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/SequenceWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SequenceWriter\\.writeAll\\:\\(Ljava\\/lang\\/Iterable\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/SequenceWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SequenceWriter\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SequenceWriter\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SequenceWriter\\.\\_writeCloseableValue\\:\\(Ljava\\/lang\\/Object\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/SequenceWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SequenceWriter\\.\\_writeCloseableValue\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/SequenceWriter\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SequenceWriter\\.\\_findAndAddDynamic\\:\\(Ljava\\/lang\\/Class\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SequenceWriter\\.\\_findAndAddDynamic\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.findValueSerializer\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.findValueSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.findValueSerializer\\:\\(Ljava\\/lang\\/Class\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.findValueSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.findPrimaryPropertySerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.findPrimaryPropertySerializer\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.findTypedValueSerializer\\:\\(Ljava\\/lang\\/Class\\;ZLcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.findTypedValueSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;ZLcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.findTypeSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.findKeySerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.findKeySerializer\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.findNullKeySerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.findNullValueSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.serializerInstance\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;Ljava\\/lang\\/Object\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.includeFilterInstance\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/BeanPropertyDefinition\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.includeFilterSuppressNulls\\:\\(Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.handlePrimaryContextualization\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.handleSecondaryContextualization\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.defaultSerializeValue\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.defaultSerializeField\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.defaultSerializeDateValue\\:\\(JLcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.defaultSerializeDateValue\\:\\(Ljava\\/util\\/Date\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.defaultSerializeDateKey\\:\\(JLcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.defaultSerializeDateKey\\:\\(Ljava\\/util\\/Date\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.defaultSerializeNull\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.reportMappingProblem\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.reportBadTypeDefinition\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.reportBadPropertyDefinition\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/BeanPropertyDefinition\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.reportBadDefinition\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.reportBadDefinition\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Throwable\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.reportBadDefinition\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Throwable\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.reportMappingProblem\\:\\(Ljava\\/lang\\/Throwable\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.\\_reportIncompatibleRootType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.\\_findExplicitUntypedSerializer\\:\\(Ljava\\/lang\\/Class\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.\\_createAndCacheUntypedSerializer\\:\\(Ljava\\/lang\\/Class\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.\\_createAndCacheUntypedSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.\\_createUntypedSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.\\_handleContextualResolvable\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.\\_handleResolvable\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.AbstractDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.AbstractDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.AbstractDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.AbstractDeserializer\\.\\_deserializeIfNatural\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.AbstractDeserializer\\.\\_deserializeFromObjectId\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.mapAbstractType\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_mapAbstractType2\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.findValueInstantiator\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/ValueInstantiator\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_findStdValueInstantiator\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/ValueInstantiator\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_constructDefaultValueInstantiator\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/ValueInstantiator\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_findCreatorsFromProperties\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_valueInstantiatorInstance\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;Ljava\\/lang\\/Object\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/ValueInstantiator\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_addDeserializerConstructors\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/VisibilityChecker\\;Lcom\\/fasterxml\\/jackson\\/databind\\/AnnotationIntrospector\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/impl\\/CreatorCollector\\;Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_addExplicitDelegatingCreator\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/impl\\/CreatorCollector\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/impl\\/CreatorCandidate\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_addExplicitPropertyCreator\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/impl\\/CreatorCollector\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/impl\\/CreatorCandidate\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_addExplicitAnyCreator\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/impl\\/CreatorCollector\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/impl\\/CreatorCandidate\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_checkImplicitlyNamedConstructors\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/VisibilityChecker\\;Lcom\\/fasterxml\\/jackson\\/databind\\/AnnotationIntrospector\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/impl\\/CreatorCollector\\;Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_addDeserializerFactoryMethods\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/VisibilityChecker\\;Lcom\\/fasterxml\\/jackson\\/databind\\/AnnotationIntrospector\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/impl\\/CreatorCollector\\;Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_reportUnwrappedCreatorProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/AnnotatedParameter\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.constructCreatorProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/PropertyName\\;ILcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/AnnotatedParameter\\;Lcom\\/fasterxml\\/jackson\\/annotation\\/JacksonInject\\$Value\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.createArrayDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/ArrayType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.createCollectionDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/CollectionType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.createCollectionLikeDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/CollectionLikeType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.createMapDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/MapType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.createMapLikeDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/MapLikeType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.createEnumDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.createTreeDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.createReferenceDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/ReferenceType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.findTypeDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.findOptionalStdDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.createKeyDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/KeyDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_createEnumKeyDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/KeyDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.findPropertyTypeDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/AnnotatedMember\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.findPropertyContentTypeDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/AnnotatedMember\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.findDefaultDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_findRemappedType\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Ljava\\/lang\\/Class\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_findCustomTreeNodeDeserializer\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_findCustomReferenceDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/ReferenceType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_findCustomBeanDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_findCustomArrayDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/ArrayType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_findCustomCollectionDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/CollectionType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_findCustomCollectionLikeDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/CollectionLikeType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_findCustomEnumDeserializer\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_findCustomMapDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/MapType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/KeyDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_findCustomMapLikeDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/MapLikeType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/KeyDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.findDeserializerFromAnnotation\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.findKeyDeserializerFromAnnotation\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/KeyDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.findContentDeserializerFromAnnotation\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.resolveMemberAndTypeAnnotations\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/AnnotatedMember\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.modifyTypeByAnnotation\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.resolveType\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/AnnotatedMember\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializer\\$BeanReferring\\.handleResolvedForwardReference\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializer\\.\\_deserializeOther\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializer\\.\\_missingToken\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializer\\.vanillaDeserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializer\\.deserializeFromObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializer\\.\\_deserializeUsingPropertyBased\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializer\\.handleUnresolvedReference\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/impl\\/PropertyValueBuffer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/UnresolvedForwardReference\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/BeanDeserializer\\$BeanReferring\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializer\\.\\_deserializeWithErrorWrapping\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializer\\.deserializeFromNull\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializer\\.deserializeWithView\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializer\\.deserializeWithUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializer\\.deserializeWithUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializer\\.deserializeUsingPropertyBasedWithUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializer\\.deserializeWithExternalTypeId\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializer\\.deserializeWithExternalTypeId\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializer\\.deserializeUsingPropertyBasedWithExternalTypeId\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.resolve\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.\\_findDelegateDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/AnnotatedWithParams\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.findConvertingDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.\\_resolveManagedReferenceProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.\\_resolvedObjectIdProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.\\_findPropertyUnwrapper\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/util\\/NameTransformer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.\\_resolveMergeAndNullSettings\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;Lcom\\/fasterxml\\/jackson\\/databind\\/PropertyMetadata\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.getEmptyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.deserializeFromObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.\\_handleTypedObjectId\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.\\_convertObjectId\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.deserializeWithObjectId\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.deserializeFromObjectId\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.deserializeFromObjectUsingNonDefault\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.\\_deserializeUsingPropertyBased\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.deserializeFromNumber\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.deserializeFromString\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.deserializeFromDouble\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.deserializeFromBoolean\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.deserializeFromArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.deserializeFromEmbedded\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.injectValues\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.handleUnknownProperties\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/util\\/TokenBuffer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.handleUnknownVanilla\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.handleUnknownProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.handleIgnoredProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.handlePolymorphic\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/util\\/TokenBuffer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.\\_findSubclassDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/util\\/TokenBuffer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.wrapAndThrow\\:\\(Ljava\\/lang\\/Throwable\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.throwOrReturnThrowable\\:\\(Ljava\\/lang\\/Throwable\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Throwable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.wrapInstantiationProblem\\:\\(Ljava\\/lang\\/Throwable\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBuilder\\.buildBuilderBased\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerFactory\\.createBeanDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerFactory\\.createBuilderBasedDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Ljava\\/lang\\/Class\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerFactory\\.findStdDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerFactory\\.materializeAbstractType\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerFactory\\.buildBeanDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerFactory\\.buildBuilderBasedDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerFactory\\.addObjectIdReader\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/BeanDeserializerBuilder\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerFactory\\.buildThrowableDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerFactory\\.addBeanProps\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/BeanDeserializerBuilder\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerFactory\\.filterBeanProps\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/BeanDeserializerBuilder\\;Ljava\\/util\\/List\\;Ljava\\/util\\/Set\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerFactory\\.addBackReferenceProperties\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/BeanDeserializerBuilder\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerFactory\\.addReferenceProperties\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/BeanDeserializerBuilder\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerFactory\\.addInjectables\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/BeanDeserializerBuilder\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerFactory\\.constructAnySetter\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/AnnotatedMember\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableAnyProperty\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerFactory\\.constructSettableProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/BeanPropertyDefinition\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerFactory\\.constructSetterlessProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/BeanPropertyDefinition\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerFactory\\.\\_validateSubType\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BuilderBasedDeserializer\\.finishBuild\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BuilderBasedDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BuilderBasedDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BuilderBasedDeserializer\\.vanillaDeserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BuilderBasedDeserializer\\.deserializeFromObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BuilderBasedDeserializer\\.\\_deserializeUsingPropertyBased\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BuilderBasedDeserializer\\.\\_deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BuilderBasedDeserializer\\.deserializeWithView\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BuilderBasedDeserializer\\.deserializeWithUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BuilderBasedDeserializer\\.deserializeUsingPropertyBasedWithUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BuilderBasedDeserializer\\.deserializeWithUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/util\\/TokenBuffer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BuilderBasedDeserializer\\.deserializeWithExternalTypeId\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BuilderBasedDeserializer\\.deserializeWithExternalTypeId\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BuilderBasedDeserializer\\.deserializeUsingPropertyBasedWithExternalTypeId\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.ContextualDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.ContextualKeyDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/KeyDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.CreatorProperty\\.findInjectableValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.CreatorProperty\\.inject\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.CreatorProperty\\.deserializeAndSet\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.CreatorProperty\\.deserializeSetAndReturn\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.CreatorProperty\\.set\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.CreatorProperty\\.setAndReturn\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.CreatorProperty\\.\\_verifySetter\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.CreatorProperty\\.\\_reportMissingSetter\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DataFormatReaders\\$Match\\.createParserWithMatch\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DataFormatReaders\\.findFormat\\:\\(Ljava\\/io\\/InputStream\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/DataFormatReaders\\$Match\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DataFormatReaders\\.findFormat\\:\\(\\[B\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/DataFormatReaders\\$Match\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DataFormatReaders\\.findFormat\\:\\(\\[BII\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/DataFormatReaders\\$Match\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DataFormatReaders\\.\\_findFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/DataFormatReaders\\$AccessorForReader\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/DataFormatReaders\\$Match\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.deser.UnresolvedForwardReference"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DefaultDeserializationContext\\.checkUnresolvedObjectId\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DefaultDeserializationContext\\.deserializerInstance\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;Ljava\\/lang\\/Object\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DefaultDeserializationContext\\.keyDeserializerInstance\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;Ljava\\/lang\\/Object\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/KeyDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializationProblemHandler\\.handleUnknownProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializationProblemHandler\\.handleWeirdKey\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializationProblemHandler\\.handleWeirdStringValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializationProblemHandler\\.handleWeirdNumberValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Class\\;Ljava\\/lang\\/Number\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializationProblemHandler\\.handleWeirdNativeValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializationProblemHandler\\.handleUnexpectedToken\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializationProblemHandler\\.handleInstantiationProblem\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Class\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Throwable\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializationProblemHandler\\.handleMissingInstantiator\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/ValueInstantiator\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializationProblemHandler\\.handleUnknownTypeId\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeIdResolver\\;Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializationProblemHandler\\.handleMissingTypeId\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeIdResolver\\;Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializationProblemHandler\\.handleMissingInstantiator\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerCache\\.findValueDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/DeserializerFactory\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerCache\\.findKeyDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/DeserializerFactory\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/KeyDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerCache\\.hasValueDeserializerFor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/DeserializerFactory\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Z"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerCache\\.\\_createAndCacheValueDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/DeserializerFactory\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerCache\\.\\_createAndCache2\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/DeserializerFactory\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerCache\\.\\_createDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/DeserializerFactory\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerCache\\.\\_createDeserializer2\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/DeserializerFactory\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerCache\\.findDeserializerFromAnnotation\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerCache\\.findConvertingDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerCache\\.findConverter\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/util\\/Converter\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerCache\\.modifyTypeByAnnotation\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerCache\\.\\_handleUnknownValueDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerCache\\.\\_handleUnknownKeyDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/KeyDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerFactory\\.mapAbstractType\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerFactory\\.findValueInstantiator\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/ValueInstantiator\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerFactory\\.createBeanDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerFactory\\.createBuilderBasedDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Ljava\\/lang\\/Class\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerFactory\\.createEnumDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerFactory\\.createReferenceDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/ReferenceType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerFactory\\.createTreeDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerFactory\\.createArrayDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/ArrayType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerFactory\\.createCollectionDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/CollectionType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerFactory\\.createCollectionLikeDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/CollectionLikeType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerFactory\\.createMapDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/MapType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerFactory\\.createMapLikeDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/MapLikeType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerFactory\\.createKeyDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/KeyDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerFactory\\.findTypeDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.Deserializers\\$Base\\.findEnumDeserializer\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.Deserializers\\$Base\\.findTreeNodeDeserializer\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.Deserializers\\$Base\\.findReferenceDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/ReferenceType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.Deserializers\\$Base\\.findBeanDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.Deserializers\\$Base\\.findArrayDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/ArrayType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.Deserializers\\$Base\\.findCollectionDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/CollectionType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.Deserializers\\$Base\\.findCollectionLikeDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/CollectionLikeType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.Deserializers\\$Base\\.findMapDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/MapType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/KeyDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.Deserializers\\$Base\\.findMapLikeDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/MapLikeType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/KeyDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.Deserializers\\.findEnumDeserializer\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.Deserializers\\.findTreeNodeDeserializer\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.Deserializers\\.findBeanDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.Deserializers\\.findReferenceDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/ReferenceType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.Deserializers\\.findArrayDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/ArrayType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.Deserializers\\.findCollectionDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/CollectionType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.Deserializers\\.findCollectionLikeDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/CollectionLikeType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.Deserializers\\.findMapDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/MapType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/KeyDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.Deserializers\\.findMapLikeDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/MapLikeType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/KeyDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.KeyDeserializers\\.findKeyDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/KeyDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.NullValueProvider\\.getNullValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.ResolvableDeserializer\\.resolve\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.SettableAnyProperty\\$AnySetterReferring\\.handleResolvedForwardReference\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.SettableAnyProperty\\.deserializeAndSet\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.SettableAnyProperty\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.SettableAnyProperty\\.set\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.SettableAnyProperty\\.\\_throwAsIOE\\:\\(Ljava\\/lang\\/Exception\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.SettableBeanProperty\\$Delegating\\.deserializeAndSet\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.SettableBeanProperty\\$Delegating\\.deserializeSetAndReturn\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.SettableBeanProperty\\$Delegating\\.set\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.SettableBeanProperty\\$Delegating\\.setAndReturn\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.SettableBeanProperty\\.depositSchemaProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonObjectFormatVisitor\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.SettableBeanProperty\\.deserializeAndSet\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.SettableBeanProperty\\.deserializeSetAndReturn\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.SettableBeanProperty\\.set\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.SettableBeanProperty\\.setAndReturn\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.SettableBeanProperty\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.SettableBeanProperty\\.deserializeWith\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.SettableBeanProperty\\.\\_throwAsIOE\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Ljava\\/lang\\/Exception\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.SettableBeanProperty\\.\\_throwAsIOE\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Ljava\\/lang\\/Exception\\;\\)Ljava\\/io\\/IOException\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.SettableBeanProperty\\.\\_throwAsIOE\\:\\(Ljava\\/lang\\/Exception\\;\\)Ljava\\/io\\/IOException\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.SettableBeanProperty\\.\\_throwAsIOE\\:\\(Ljava\\/lang\\/Exception\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.ValueInstantiator\\.createUsingDefault\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.ValueInstantiator\\.createFromObjectWith\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.ValueInstantiator\\.createFromObjectWith\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\[Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/impl\\/PropertyValueBuffer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.ValueInstantiator\\.createUsingDelegate\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.ValueInstantiator\\.createUsingArrayDelegate\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.ValueInstantiator\\.createFromString\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.ValueInstantiator\\.createFromInt\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;I\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.ValueInstantiator\\.createFromLong\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;J\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.ValueInstantiator\\.createFromDouble\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;D\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.ValueInstantiator\\.createFromBoolean\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Z\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.ValueInstantiator\\.\\_createFromStringFallbacks\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.BeanAsArrayBuilderDeserializer\\.finishBuild\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.BeanAsArrayBuilderDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.BeanAsArrayBuilderDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.BeanAsArrayBuilderDeserializer\\.deserializeFromObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.BeanAsArrayBuilderDeserializer\\.\\_deserializeNonVanilla\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.BeanAsArrayBuilderDeserializer\\.\\_deserializeUsingPropertyBased\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.BeanAsArrayBuilderDeserializer\\.\\_deserializeFromNonArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.BeanAsArrayDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.BeanAsArrayDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.BeanAsArrayDeserializer\\.deserializeFromObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.BeanAsArrayDeserializer\\.\\_deserializeNonVanilla\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.BeanAsArrayDeserializer\\.\\_deserializeUsingPropertyBased\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.BeanAsArrayDeserializer\\.\\_deserializeFromNonArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.BeanPropertyMap\\.findDeserializeAndSet\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.BeanPropertyMap\\.wrapAndThrow\\:\\(Ljava\\/lang\\/Throwable\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.CreatorCollector\\$StdTypeConstructor\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.CreatorCollector\\$StdTypeConstructor\\.call\\:\\(\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.CreatorCollector\\$StdTypeConstructor\\.call1\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.UnsupportedOperationException", 
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.CreatorCollector\\$StdTypeConstructor\\.setValue\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.UnsupportedOperationException", 
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.CreatorCollector\\$StdTypeConstructor\\.getValue\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ErrorThrowingDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ExternalTypeHandler\\.handleTypePropertyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ExternalTypeHandler\\.\\_handleTypePropertyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ExternalTypeHandler\\.handlePropertyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ExternalTypeHandler\\.complete\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ExternalTypeHandler\\.complete\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/impl\\/PropertyValueBuffer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/impl\\/PropertyBasedCreator\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ExternalTypeHandler\\.\\_deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;ILjava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ExternalTypeHandler\\.\\_deserializeAndSet\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;ILjava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.FailingDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.FieldProperty\\.deserializeAndSet\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.FieldProperty\\.deserializeSetAndReturn\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.FieldProperty\\.set\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.FieldProperty\\.setAndReturn\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.InnerClassProperty\\.deserializeAndSet\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.InnerClassProperty\\.deserializeSetAndReturn\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.JavaUtilCollectionsDeserializers\\.findForCollection\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.JavaUtilCollectionsDeserializers\\.findForMap\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ManagedReferenceProperty\\.deserializeAndSet\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ManagedReferenceProperty\\.deserializeSetAndReturn\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ManagedReferenceProperty\\.set\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ManagedReferenceProperty\\.setAndReturn\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.MergingSettableBeanProperty\\.deserializeAndSet\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.MergingSettableBeanProperty\\.deserializeSetAndReturn\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.MergingSettableBeanProperty\\.set\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.MergingSettableBeanProperty\\.setAndReturn\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.MethodProperty\\.deserializeAndSet\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.MethodProperty\\.deserializeSetAndReturn\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.MethodProperty\\.set\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.MethodProperty\\.setAndReturn\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.NullsAsEmptyProvider\\.getNullValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.NullsFailProvider\\.getNullValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ObjectIdReader\\.readObjectReference\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ObjectIdReferenceProperty\\$PropertyReferring\\.handleResolvedForwardReference\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ObjectIdReferenceProperty\\.deserializeAndSet\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ObjectIdReferenceProperty\\.deserializeSetAndReturn\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ObjectIdReferenceProperty\\.set\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ObjectIdReferenceProperty\\.setAndReturn\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ObjectIdValueProperty\\.deserializeAndSet\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ObjectIdValueProperty\\.deserializeSetAndReturn\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ObjectIdValueProperty\\.set\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ObjectIdValueProperty\\.setAndReturn\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.PropertyBasedCreator\\.construct\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/ValueInstantiator\\;\\[Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/impl\\/BeanPropertyMap\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/impl\\/PropertyBasedCreator\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.PropertyBasedCreator\\.construct\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/ValueInstantiator\\;\\[Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;Z\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/impl\\/PropertyBasedCreator\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.PropertyBasedCreator\\.construct\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/ValueInstantiator\\;\\[Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/impl\\/PropertyBasedCreator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.PropertyBasedCreator\\.build\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/impl\\/PropertyValueBuffer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.PropertyValue\\$Any\\.assign\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.PropertyValue\\$Map\\.assign\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.PropertyValue\\$Regular\\.assign\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.PropertyValue\\.assign\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.PropertyValueBuffer\\.getParameter\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.PropertyValueBuffer\\.getParameters\\:\\(\\[Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.PropertyValueBuffer\\.\\_findMissing\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.PropertyValueBuffer\\.readIdProperty\\:\\(Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.PropertyValueBuffer\\.handleIdValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ReadableObjectId\\$Referring\\.handleResolvedForwardReference\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ReadableObjectId\\.bindItem\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.SetterlessProperty\\.deserializeAndSet\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.SetterlessProperty\\.deserializeSetAndReturn\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.SetterlessProperty\\.set\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.SetterlessProperty\\.setAndReturn\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.TypeWrappedDeserializer\\.getNullValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.TypeWrappedDeserializer\\.getEmptyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.TypeWrappedDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.TypeWrappedDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.TypeWrappedDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.UnwrappedPropertyHandler\\.processUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/util\\/TokenBuffer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ValueInjector\\.findValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ValueInjector\\.inject\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ArrayBlockingQueueDeserializer\\.createDefaultInstance\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ArrayBlockingQueueDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/util\\/Collection\\;\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ArrayBlockingQueueDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ArrayBlockingQueueDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.AtomicBooleanDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/concurrent\\/atomic\\/AtomicBoolean\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.AtomicBooleanDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.BaseNodeDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.BaseNodeDeserializer\\.\\_handleDuplicateField\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/JsonNodeFactory\\;Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/ObjectNode\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.BaseNodeDeserializer\\.deserializeObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/JsonNodeFactory\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/ObjectNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.BaseNodeDeserializer\\.deserializeObjectAtName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/JsonNodeFactory\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/ObjectNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.BaseNodeDeserializer\\.updateObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/ObjectNode\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.BaseNodeDeserializer\\.deserializeArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/JsonNodeFactory\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/ArrayNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.BaseNodeDeserializer\\.updateArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/ArrayNode\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.BaseNodeDeserializer\\.deserializeAny\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/JsonNodeFactory\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.BaseNodeDeserializer\\.\\_fromInt\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/JsonNodeFactory\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.BaseNodeDeserializer\\.\\_fromFloat\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/JsonNodeFactory\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.BaseNodeDeserializer\\.\\_fromEmbedded\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/JsonNodeFactory\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ByteBufferDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/nio\\/ByteBuffer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ByteBufferDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/nio\\/ByteBuffer\\;\\)Ljava\\/nio\\/ByteBuffer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ByteBufferDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ByteBufferDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.CollectionDeserializer\\$CollectionReferring\\.handleResolvedForwardReference\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.CollectionDeserializer\\$CollectionReferringAccumulator\\.resolveForwardReference\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.CollectionDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/std\\/CollectionDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.CollectionDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.CollectionDeserializer\\.createDefaultInstance\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.CollectionDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/util\\/Collection\\;\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.CollectionDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.CollectionDeserializer\\.handleNonArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/util\\/Collection\\;\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.CollectionDeserializer\\.\\_deserializeWithObjectId\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/util\\/Collection\\;\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.CollectionDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.CollectionDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.CollectionDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ContainerDeserializerBase\\.getEmptyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ContainerDeserializerBase\\.wrapAndThrow\\:\\(Ljava\\/lang\\/Throwable\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.DateDeserializers\\$CalendarDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/Calendar\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.DateDeserializers\\$CalendarDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.DateDeserializers\\$CalendarDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.DateDeserializers\\$DateBasedDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.DateDeserializers\\$DateBasedDeserializer\\.\\_parseDate\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.DateDeserializers\\$DateDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.DateDeserializers\\$DateDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.DateDeserializers\\$DateDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.DateDeserializers\\$SqlDateDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/sql\\/Date\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.DateDeserializers\\$SqlDateDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.DateDeserializers\\$SqlDateDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.DateDeserializers\\$TimestampDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/sql\\/Timestamp\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.DateDeserializers\\$TimestampDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.DateDeserializers\\$TimestampDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.DelegatingDeserializer\\.resolve\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.DelegatingDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.DelegatingDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.DelegatingDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.DelegatingDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.DelegatingDeserializer\\.getNullValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.DelegatingDeserializer\\.getEmptyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.EnumDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.EnumDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.EnumDeserializer\\.\\_deserializeAltString\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/util\\/CompactStringObjectMap\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.EnumDeserializer\\.\\_deserializeOther\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.EnumMapDeserializer\\.resolve\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.EnumMapDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.EnumMapDeserializer\\.getEmptyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.EnumMapDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/EnumMap\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.EnumMapDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/util\\/EnumMap\\;\\)Ljava\\/util\\/EnumMap\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.EnumMapDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.EnumMapDeserializer\\.constructMap\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/EnumMap\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.EnumMapDeserializer\\.\\_deserializeUsingProperties\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/EnumMap\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.EnumMapDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.EnumMapDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.EnumSetDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.EnumSetDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/EnumSet\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.EnumSetDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/util\\/EnumSet\\;\\)Ljava\\/util\\/EnumSet\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.EnumSetDeserializer\\.\\_deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/util\\/EnumSet\\;\\)Ljava\\/util\\/EnumSet\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.EnumSetDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.EnumSetDeserializer\\.handleNonArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/util\\/EnumSet\\;\\)Ljava\\/util\\/EnumSet\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.EnumSetDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.EnumSetDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.FactoryBasedEnumDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.FactoryBasedEnumDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.FactoryBasedEnumDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.FactoryBasedEnumDeserializer\\.deserializeEnumUsingPropertyBased\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/impl\\/PropertyBasedCreator\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.FactoryBasedEnumDeserializer\\.\\_deserializeWithErrorWrapping\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.FactoryBasedEnumDeserializer\\.wrapAndThrow\\:\\(Ljava\\/lang\\/Throwable\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.FactoryBasedEnumDeserializer\\.throwOrReturnThrowable\\:\\(Ljava\\/lang\\/Throwable\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Throwable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.FromStringDeserializer\\$Std\\.\\_deserialize\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.FromStringDeserializer\\$Std\\.\\_deserializeFromEmptyString\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.FromStringDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.FromStringDeserializer\\.\\_deserialize\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.FromStringDeserializer\\.\\_deserializeEmbedded\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.FromStringDeserializer\\.\\_deserializeFromEmptyString\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.JsonNodeDeserializer\\$ArrayDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/ArrayNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.JsonNodeDeserializer\\$ArrayDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/ArrayNode\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/ArrayNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.JsonNodeDeserializer\\$ArrayDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.JsonNodeDeserializer\\$ArrayDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.JsonNodeDeserializer\\$ObjectDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/ObjectNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.JsonNodeDeserializer\\$ObjectDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/ObjectNode\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/ObjectNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.JsonNodeDeserializer\\$ObjectDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.JsonNodeDeserializer\\$ObjectDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.JsonNodeDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.JsonNodeDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.JsonNodeDeserializer\\.getNullValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.JsonNodeDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.MapDeserializer\\$MapReferring\\.handleResolvedForwardReference\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.MapDeserializer\\$MapReferringAccumulator\\.resolveForwardReference\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.MapDeserializer\\.resolve\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.MapDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.MapDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.MapDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/util\\/Map\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.MapDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.MapDeserializer\\.\\_readAndBind\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.MapDeserializer\\.\\_readAndBindStringKeyMap\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.MapDeserializer\\.\\_deserializeUsingCreator\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.MapDeserializer\\.\\_readAndUpdate\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.MapDeserializer\\.\\_readAndUpdateStringKeyMap\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.MapDeserializer\\.handleUnresolvedReference\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/std\\/MapDeserializer\\$MapReferringAccumulator\\;Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/UnresolvedForwardReference\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.MapDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.MapDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.MapEntryDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.MapEntryDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/Map\\$Entry\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.MapEntryDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/util\\/Map\\$Entry\\;\\)Ljava\\/util\\/Map\\$Entry\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.MapEntryDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.MapEntryDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.MapEntryDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NullifyingDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NullifyingDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$BigDecimalDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/math\\/BigDecimal\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$BigDecimalDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$BigIntegerDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/math\\/BigInteger\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$BigIntegerDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$BooleanDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Boolean\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$BooleanDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Boolean\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$BooleanDeserializer\\.\\_parseBoolean\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Boolean\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$BooleanDeserializer\\.getEmptyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$BooleanDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$BooleanDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$ByteDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Byte\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$ByteDeserializer\\.\\_parseByte\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Byte\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$ByteDeserializer\\.getEmptyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$ByteDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$CharacterDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Character\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$CharacterDeserializer\\.getEmptyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$CharacterDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$DoubleDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Double\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$DoubleDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Double\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$DoubleDeserializer\\.\\_parseDouble\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Double\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$DoubleDeserializer\\.getEmptyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$DoubleDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$DoubleDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$FloatDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Float\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$FloatDeserializer\\.\\_parseFloat\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Float\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$FloatDeserializer\\.getEmptyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$FloatDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$IntegerDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Integer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$IntegerDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Integer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$IntegerDeserializer\\.\\_parseInteger\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Integer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$IntegerDeserializer\\.getEmptyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$IntegerDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$IntegerDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$LongDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Long\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$LongDeserializer\\.\\_parseLong\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Long\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$LongDeserializer\\.getEmptyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$LongDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$NumberDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$NumberDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$PrimitiveOrWrapperDeserializer\\.getNullValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$PrimitiveOrWrapperDeserializer\\.getEmptyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$ShortDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Short\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$ShortDeserializer\\.\\_parseShort\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Short\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$ShortDeserializer\\.getEmptyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$ShortDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ObjectArrayDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ObjectArrayDeserializer\\.getEmptyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ObjectArrayDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ObjectArrayDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ObjectArrayDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\[Ljava\\/lang\\/Object\\;\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ObjectArrayDeserializer\\.deserializeFromBase64\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[Ljava\\/lang\\/Byte\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ObjectArrayDeserializer\\.handleNonArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ObjectArrayDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ObjectArrayDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ObjectArrayDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$BooleanDeser\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$BooleanDeser\\.handleSingleElementUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$BooleanDeser\\.handleSingleElementUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$BooleanDeser\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$ByteDeser\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$ByteDeser\\.handleSingleElementUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$ByteDeser\\.handleSingleElementUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$ByteDeser\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$CharDeser\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$CharDeser\\.handleSingleElementUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$CharDeser\\.handleSingleElementUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$CharDeser\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$DoubleDeser\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$DoubleDeser\\.handleSingleElementUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$DoubleDeser\\.handleSingleElementUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$DoubleDeser\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$FloatDeser\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$FloatDeser\\.handleSingleElementUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$FloatDeser\\.handleSingleElementUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$FloatDeser\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$IntDeser\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$IntDeser\\.handleSingleElementUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$IntDeser\\.handleSingleElementUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$IntDeser\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$LongDeser\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$LongDeser\\.handleSingleElementUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$LongDeser\\.handleSingleElementUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$LongDeser\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$ShortDeser\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[S"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$ShortDeser\\.handleSingleElementUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[S"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$ShortDeser\\.handleSingleElementUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$ShortDeser\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\.handleSingleElementUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\.getEmptyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\.handleNonArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\.\\_failOnNull\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ReferenceTypeDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ReferenceTypeDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ReferenceTypeDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ReferenceTypeDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StackTraceElementDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/StackTraceElement\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StackTraceElementDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDelegatingDeserializer\\.resolve\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDelegatingDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDelegatingDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDelegatingDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDelegatingDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDelegatingDeserializer\\.\\_handleIncompatibleUpdateValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_parseBooleanPrimitive\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_parseBooleanFromInt\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_parseBytePrimitive\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_parseShortPrimitive\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)S"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_parseIntPrimitive\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_parseIntPrimitive\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_parseLongPrimitive\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_parseLongPrimitive\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/String\\;\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_parseFloatPrimitive\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_parseFloatPrimitive\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/String\\;\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_parseDoublePrimitive\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_parseDoublePrimitive\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/String\\;\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_parseDate\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_parseDateFromArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_parseDate\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.parseDouble\\:\\(Ljava\\/lang\\/String\\;\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_parseString\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_deserializeFromEmpty\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_deserializeFromArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_deserializeWrappedValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_failDoubleToIntCoercion\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_coerceIntegral\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_coerceNullToken\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Z\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_coerceTextualNull\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Z\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_coerceEmptyString\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Z\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_verifyNullForPrimitive\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_verifyNullForPrimitiveCoercion\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_verifyNullForScalarCoercion\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_verifyStringForScalarCoercion\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_verifyNumberForScalarCoercion\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_reportFailedNullCoerce\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;ZLjava\\/lang\\/Enum\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.findDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.findConvertingContentDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.findValueNullProvider\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;Lcom\\/fasterxml\\/jackson\\/databind\\/PropertyMetadata\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/NullValueProvider\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.findContentNullProvider\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/NullValueProvider\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.findContentNullStyle\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/annotation\\/Nulls\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_findNullProvider\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;Lcom\\/fasterxml\\/jackson\\/annotation\\/Nulls\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/NullValueProvider\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.handleUnknownProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.handleMissingEndArrayForSingle\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_verifyEndArrayForSingle\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdKeyDeserializer\\$DelegatingKD\\.deserializeKey\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdKeyDeserializer\\$EnumKD\\.\\_parse\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdKeyDeserializer\\$StringCtorKeyDeserializer\\.\\_parse\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdKeyDeserializer\\$StringFactoryKeyDeserializer\\.\\_parse\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdKeyDeserializer\\$StringKD\\.deserializeKey\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdKeyDeserializer\\.deserializeKey\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdKeyDeserializer\\.\\_parse\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdKeyDeserializer\\.\\_parseInt\\:\\(Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdKeyDeserializer\\.\\_parseLong\\:\\(Ljava\\/lang\\/String\\;\\)J"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdKeyDeserializer\\.\\_parseDouble\\:\\(Ljava\\/lang\\/String\\;\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdKeyDeserializer\\.\\_weirdKey\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Exception\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdKeyDeserializers\\.findKeyDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/KeyDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdNodeBasedDeserializer\\.resolve\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdNodeBasedDeserializer\\.convert\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdNodeBasedDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdNodeBasedDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdScalarDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdScalarDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdValueInstantiator\\.createUsingDefault\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdValueInstantiator\\.createFromObjectWith\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdValueInstantiator\\.createUsingDelegate\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdValueInstantiator\\.createUsingArrayDelegate\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdValueInstantiator\\.createFromString\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdValueInstantiator\\.createFromInt\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;I\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdValueInstantiator\\.createFromLong\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;J\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdValueInstantiator\\.createFromDouble\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;D\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdValueInstantiator\\.createFromBoolean\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Z\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdValueInstantiator\\.\\_createUsingDelegate\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/AnnotatedWithParams\\;\\[Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StringArrayDeserializer\\.getEmptyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StringArrayDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StringArrayDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StringArrayDeserializer\\.\\_deserializeCustom\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\[Ljava\\/lang\\/String\\;\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StringArrayDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StringArrayDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\[Ljava\\/lang\\/String\\;\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StringArrayDeserializer\\.handleNonArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StringArrayDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StringArrayDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StringCollectionDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StringCollectionDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StringCollectionDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/util\\/Collection\\;\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StringCollectionDeserializer\\.deserializeUsingCustom\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/util\\/Collection\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StringCollectionDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StringCollectionDeserializer\\.handleNonArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/util\\/Collection\\;\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StringCollectionDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StringCollectionDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StringDeserializer\\.getEmptyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StringDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StringDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StringDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StringDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ThrowableDeserializer\\.deserializeFromObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.TokenBufferDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/util\\/TokenBuffer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.TokenBufferDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UUIDDeserializer\\.\\_deserialize\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/UUID\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UUIDDeserializer\\.\\_deserializeEmbedded\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/UUID\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UUIDDeserializer\\.\\_badFormat\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/UUID\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UUIDDeserializer\\.intFromChars\\:\\(Ljava\\/lang\\/String\\;ILcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)I"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UUIDDeserializer\\.shortFromChars\\:\\(Ljava\\/lang\\/String\\;ILcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)I"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UUIDDeserializer\\.byteFromChars\\:\\(Ljava\\/lang\\/String\\;ILcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)I"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UUIDDeserializer\\.\\_badChar\\:\\(Ljava\\/lang\\/String\\;ILcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;C\\)I"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UUIDDeserializer\\.\\_fromBytes\\:\\(\\[BLcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/UUID\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UUIDDeserializer\\.\\_deserializeEmbedded\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UUIDDeserializer\\.\\_deserialize\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UntypedObjectDeserializer\\$Vanilla\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UntypedObjectDeserializer\\$Vanilla\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UntypedObjectDeserializer\\$Vanilla\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UntypedObjectDeserializer\\$Vanilla\\.mapArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UntypedObjectDeserializer\\$Vanilla\\.mapArrayToArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UntypedObjectDeserializer\\$Vanilla\\.mapObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UntypedObjectDeserializer\\.resolve\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UntypedObjectDeserializer\\.\\_findCustomDeser\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UntypedObjectDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UntypedObjectDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UntypedObjectDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UntypedObjectDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UntypedObjectDeserializer\\.mapArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UntypedObjectDeserializer\\.mapArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/util\\/Collection\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UntypedObjectDeserializer\\.mapObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UntypedObjectDeserializer\\.mapArrayToArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UntypedObjectDeserializer\\.mapObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/util\\/Map\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ext\\.CoreXMLDeserializers\\$Std\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ext\\.CoreXMLDeserializers\\$Std\\.\\_deserialize\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ext\\.CoreXMLSerializers\\$XMLGregorianCalendarSerializer\\.serialize\\:\\(Ljavax\\/xml\\/datatype\\/XMLGregorianCalendar\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ext\\.CoreXMLSerializers\\$XMLGregorianCalendarSerializer\\.serializeWithType\\:\\(Ljavax\\/xml\\/datatype\\/XMLGregorianCalendar\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ext\\.CoreXMLSerializers\\$XMLGregorianCalendarSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ext\\.CoreXMLSerializers\\$XMLGregorianCalendarSerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ext\\.CoreXMLSerializers\\$XMLGregorianCalendarSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ext\\.CoreXMLSerializers\\$XMLGregorianCalendarSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ext\\.DOMDeserializer\\$DocumentDeserializer\\.\\_deserialize\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Lorg\\/w3c\\/dom\\/Document\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ext\\.DOMDeserializer\\$NodeDeserializer\\.\\_deserialize\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Lorg\\/w3c\\/dom\\/Node\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ext\\.DOMDeserializer\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/w3c\\/dom\\/Document\\;"
 }, 
 {
  "exceptions": [
   "javax.xml.parsers.ParserConfigurationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ext\\.DOMDeserializer\\.documentBuilder\\:\\(\\)Ljavax\\/xml\\/parsers\\/DocumentBuilder\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ext\\.DOMSerializer\\.serialize\\:\\(Lorg\\/w3c\\/dom\\/Node\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ext\\.DOMSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ext\\.DOMSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ext\\.NioPathDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/nio\\/file\\/Path\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ext\\.NioPathDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ext\\.NioPathSerializer\\.serialize\\:\\(Ljava\\/nio\\/file\\/Path\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ext\\.NioPathSerializer\\.serializeWithType\\:\\(Ljava\\/nio\\/file\\/Path\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ext\\.NioPathSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ext\\.NioPathSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ext\\.OptionalHandlerFactory\\.findDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotatedConstructor\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotatedConstructor\\.call\\:\\(\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotatedConstructor\\.call1\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.UnsupportedOperationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotatedConstructor\\.setValue\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.UnsupportedOperationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotatedConstructor\\.getValue\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotatedField\\.setValue\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotatedField\\.getValue\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.UnsupportedOperationException", 
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotatedMember\\.setValue\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.UnsupportedOperationException", 
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotatedMember\\.getValue\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotatedMethod\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotatedMethod\\.call\\:\\(\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotatedMethod\\.call1\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotatedMethod\\.callOn\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotatedMethod\\.callOnWith\\:\\(Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotatedMethod\\.setValue\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotatedMethod\\.getValue\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.UnsupportedOperationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotatedParameter\\.setValue\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.UnsupportedOperationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotatedParameter\\.getValue\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotatedWithParams\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotatedWithParams\\.call\\:\\(\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotatedWithParams\\.call1\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotationIntrospectorPair\\.refineSerializationType\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/cfg\\/MapperConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotationIntrospectorPair\\.refineDeserializationType\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/cfg\\/MapperConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.BasicBeanDescription\\.findAnySetterAccessor\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/AnnotatedMember\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.BasicBeanDescription\\.findAnyGetter\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/AnnotatedMember\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.JacksonAnnotationIntrospector\\.refineSerializationType\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/cfg\\/MapperConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.JacksonAnnotationIntrospector\\.refineDeserializationType\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/cfg\\/MapperConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.VirtualAnnotatedMember\\.setValue\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.VirtualAnnotatedMember\\.getValue\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonArrayFormatVisitor\\$Base\\.itemsFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitable\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonArrayFormatVisitor\\$Base\\.itemsFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatTypes\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonArrayFormatVisitor\\.itemsFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitable\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonArrayFormatVisitor\\.itemsFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatTypes\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonFormatVisitable\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonFormatVisitorWrapper\\$Base\\.expectObjectFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonObjectFormatVisitor\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonFormatVisitorWrapper\\$Base\\.expectArrayFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonArrayFormatVisitor\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonFormatVisitorWrapper\\$Base\\.expectStringFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonStringFormatVisitor\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonFormatVisitorWrapper\\$Base\\.expectNumberFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonNumberFormatVisitor\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonFormatVisitorWrapper\\$Base\\.expectIntegerFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonIntegerFormatVisitor\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonFormatVisitorWrapper\\$Base\\.expectBooleanFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonBooleanFormatVisitor\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonFormatVisitorWrapper\\$Base\\.expectNullFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonNullFormatVisitor\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonFormatVisitorWrapper\\$Base\\.expectAnyFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonAnyFormatVisitor\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonFormatVisitorWrapper\\$Base\\.expectMapFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonMapFormatVisitor\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonFormatVisitorWrapper\\.expectObjectFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonObjectFormatVisitor\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonFormatVisitorWrapper\\.expectArrayFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonArrayFormatVisitor\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonFormatVisitorWrapper\\.expectStringFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonStringFormatVisitor\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonFormatVisitorWrapper\\.expectNumberFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonNumberFormatVisitor\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonFormatVisitorWrapper\\.expectIntegerFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonIntegerFormatVisitor\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonFormatVisitorWrapper\\.expectBooleanFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonBooleanFormatVisitor\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonFormatVisitorWrapper\\.expectNullFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonNullFormatVisitor\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonFormatVisitorWrapper\\.expectAnyFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonAnyFormatVisitor\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonFormatVisitorWrapper\\.expectMapFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonMapFormatVisitor\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonMapFormatVisitor\\$Base\\.keyFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitable\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonMapFormatVisitor\\$Base\\.valueFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitable\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonMapFormatVisitor\\.keyFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitable\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonMapFormatVisitor\\.valueFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitable\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonObjectFormatVisitor\\$Base\\.property\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonObjectFormatVisitor\\$Base\\.property\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitable\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonObjectFormatVisitor\\$Base\\.optionalProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonObjectFormatVisitor\\$Base\\.optionalProperty\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitable\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonObjectFormatVisitor\\.property\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonObjectFormatVisitor\\.property\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitable\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonObjectFormatVisitor\\.optionalProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonObjectFormatVisitor\\.optionalProperty\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitable\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonschema\\.SchemaAware\\.getSchema\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/reflect\\/Type\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonschema\\.SchemaAware\\.getSchema\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/reflect\\/Type\\;Z\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeDeserializer\\.deserializeTypedFromObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeDeserializer\\.deserializeTypedFromArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeDeserializer\\.deserializeTypedFromScalar\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeDeserializer\\.deserializeTypedFromAny\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeDeserializer\\.deserializeIfNatural\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeDeserializer\\.deserializeIfNatural\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeIdResolver\\.typeFromId\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DatabindContext\\;Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeSerializer\\.writeTypePrefix\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/WritableTypeId\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/type\\/WritableTypeId\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeSerializer\\.writeTypeSuffix\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/WritableTypeId\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/type\\/WritableTypeId\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeSerializer\\.writeTypePrefixForScalar\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeSerializer\\.writeTypePrefixForObject\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeSerializer\\.writeTypePrefixForArray\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeSerializer\\.writeTypeSuffixForScalar\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeSerializer\\.writeTypeSuffixForObject\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeSerializer\\.writeTypeSuffixForArray\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeSerializer\\.writeTypePrefixForScalar\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeSerializer\\.writeTypePrefixForObject\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeSerializer\\.writeTypePrefixForArray\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeSerializer\\.writeCustomTypePrefixForScalar\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeSerializer\\.writeCustomTypePrefixForObject\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeSerializer\\.writeCustomTypePrefixForArray\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeSerializer\\.writeCustomTypeSuffixForScalar\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeSerializer\\.writeCustomTypeSuffixForObject\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeSerializer\\.writeCustomTypeSuffixForArray\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeSerializer\\.\\_writeLegacySuffix\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/WritableTypeId\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.AsArrayTypeDeserializer\\.deserializeTypedFromArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.AsArrayTypeDeserializer\\.deserializeTypedFromObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.AsArrayTypeDeserializer\\.deserializeTypedFromScalar\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.AsArrayTypeDeserializer\\.deserializeTypedFromAny\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.AsArrayTypeDeserializer\\.\\_deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.AsArrayTypeDeserializer\\.\\_locateTypeId\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.AsExternalTypeSerializer\\.\\_writeScalarPrefix\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.AsExternalTypeSerializer\\.\\_writeObjectPrefix\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.AsExternalTypeSerializer\\.\\_writeArrayPrefix\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.AsExternalTypeSerializer\\.\\_writeScalarSuffix\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.AsExternalTypeSerializer\\.\\_writeObjectSuffix\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.AsExternalTypeSerializer\\.\\_writeArraySuffix\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.AsPropertyTypeDeserializer\\.deserializeTypedFromObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.AsPropertyTypeDeserializer\\.\\_deserializeTypedForId\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/util\\/TokenBuffer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.AsPropertyTypeDeserializer\\.\\_deserializeTypedUsingDefaultImpl\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/util\\/TokenBuffer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.AsPropertyTypeDeserializer\\.deserializeTypedFromAny\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.AsWrapperTypeDeserializer\\.deserializeTypedFromObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.AsWrapperTypeDeserializer\\.deserializeTypedFromArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.AsWrapperTypeDeserializer\\.deserializeTypedFromScalar\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.AsWrapperTypeDeserializer\\.deserializeTypedFromAny\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.AsWrapperTypeDeserializer\\.\\_deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.AsWrapperTypeSerializer\\.\\_writeTypeId\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.ClassNameIdResolver\\.typeFromId\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DatabindContext\\;Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.ClassNameIdResolver\\.\\_typeFromId\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DatabindContext\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.MinimalClassNameIdResolver\\.\\_typeFromId\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DatabindContext\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.SubTypeValidator\\.validateSubType\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.TypeDeserializerBase\\.\\_findDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.TypeDeserializerBase\\.\\_findDefaultImplDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.TypeDeserializerBase\\.\\_deserializeWithNativeTypeId\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.TypeDeserializerBase\\.\\_deserializeWithNativeTypeId\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.TypeDeserializerBase\\.\\_handleUnknownTypeId\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.TypeDeserializerBase\\.\\_handleMissingTypeId\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.TypeIdResolverBase\\.typeFromId\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DatabindContext\\;Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.TypeSerializerBase\\.writeTypePrefix\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/WritableTypeId\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/type\\/WritableTypeId\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.TypeSerializerBase\\.writeTypeSuffix\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/WritableTypeId\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/type\\/WritableTypeId\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.module\\.SimpleDeserializers\\.findArrayDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/ArrayType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.module\\.SimpleDeserializers\\.findBeanDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.module\\.SimpleDeserializers\\.findCollectionDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/CollectionType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.module\\.SimpleDeserializers\\.findCollectionLikeDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/CollectionLikeType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.module\\.SimpleDeserializers\\.findEnumDeserializer\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.module\\.SimpleDeserializers\\.findTreeNodeDeserializer\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.module\\.SimpleDeserializers\\.findReferenceDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/ReferenceType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.module\\.SimpleDeserializers\\.findMapDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/MapType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/KeyDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.module\\.SimpleDeserializers\\.findMapLikeDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/MapLikeType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/KeyDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.ArrayNode\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.ArrayNode\\.serializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.BaseJsonNode\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.BaseJsonNode\\.serializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.BigIntegerNode\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.BinaryNode\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.BooleanNode\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.DecimalNode\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.DoubleNode\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.FloatNode\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.IntNode\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.LongNode\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.MissingNode\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.MissingNode\\.serializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.NullNode\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.ObjectNode\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.ObjectNode\\.serializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.POJONode\\.binaryValue\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.POJONode\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.ShortNode\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.TextNode\\.getBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.TextNode\\.binaryValue\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.TextNode\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.TreeTraversingParser\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.TreeTraversingParser\\.nextToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.TreeTraversingParser\\.skipChildren\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.TreeTraversingParser\\.getTextCharacters\\:\\(\\)\\[C"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.TreeTraversingParser\\.getTextLength\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.TreeTraversingParser\\.getTextOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.TreeTraversingParser\\.getNumberType\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\$NumberType\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.TreeTraversingParser\\.getBigIntegerValue\\:\\(\\)Ljava\\/math\\/BigInteger\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.TreeTraversingParser\\.getDecimalValue\\:\\(\\)Ljava\\/math\\/BigDecimal\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.TreeTraversingParser\\.getDoubleValue\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.TreeTraversingParser\\.getFloatValue\\:\\(\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.TreeTraversingParser\\.getLongValue\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.TreeTraversingParser\\.getIntValue\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.TreeTraversingParser\\.getNumberValue\\:\\(\\)Ljava\\/lang\\/Number\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.TreeTraversingParser\\.getBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.TreeTraversingParser\\.readBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.TreeTraversingParser\\.currentNumericNode\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.TreeTraversingParser\\.\\_handleEOF\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.ValueNode\\.serializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.AnyGetterWriter\\.getAndSerialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.AnyGetterWriter\\.getAndFilter\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/PropertyFilter\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.AnyGetterWriter\\.resolve\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BasicSerializerFactory\\.createSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BasicSerializerFactory\\.findSerializerByAnnotations\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BasicSerializerFactory\\.findSerializerByPrimaryType\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Z\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BasicSerializerFactory\\.findOptionalStdSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Z\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BasicSerializerFactory\\.findSerializerByAddonType\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Z\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BasicSerializerFactory\\.findSerializerFromAnnotation\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BasicSerializerFactory\\.findConvertingSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BasicSerializerFactory\\.findConverter\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/util\\/Converter\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BasicSerializerFactory\\.buildContainerSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Z\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BasicSerializerFactory\\.buildCollectionSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/CollectionType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;ZLcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BasicSerializerFactory\\.buildMapSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/MapType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;ZLcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BasicSerializerFactory\\.\\_checkMapContentInclusion\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/std\\/MapSerializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/std\\/MapSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BasicSerializerFactory\\.buildMapEntrySerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;ZLcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BasicSerializerFactory\\.\\_findInclusionWithContent\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Ljava\\/lang\\/Class\\;\\)Lcom\\/fasterxml\\/jackson\\/annotation\\/JsonInclude\\$Value\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BasicSerializerFactory\\.buildArraySerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/ArrayType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;ZLcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BasicSerializerFactory\\.findReferenceSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/ReferenceType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Z\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BasicSerializerFactory\\.buildAtomicReferenceSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/ReferenceType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;ZLcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BasicSerializerFactory\\.buildIteratorSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;ZLcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BasicSerializerFactory\\.buildIterableSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;ZLcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BasicSerializerFactory\\.buildEnumSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BasicSerializerFactory\\.\\_findKeySerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BasicSerializerFactory\\.\\_findContentSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BeanPropertyFilter\\.serializeAsField\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/BeanPropertyWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BeanPropertyFilter\\.depositSchemaProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/BeanPropertyWriter\\;Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/ObjectNode\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BeanPropertyFilter\\.depositSchemaProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/BeanPropertyWriter\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonObjectFormatVisitor\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BeanPropertyWriter\\.serializeAsField\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BeanPropertyWriter\\.serializeAsOmittedField\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BeanPropertyWriter\\.serializeAsElement\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BeanPropertyWriter\\.serializeAsPlaceholder\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BeanPropertyWriter\\.depositSchemaProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonObjectFormatVisitor\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BeanPropertyWriter\\.depositSchemaProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/ObjectNode\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BeanPropertyWriter\\.\\_findAndAddDynamic\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/impl\\/PropertySerializerMap\\;Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BeanPropertyWriter\\.get\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BeanPropertyWriter\\.\\_handleSelfReference\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BeanSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BeanSerializerFactory\\.createSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BeanSerializerFactory\\.\\_createSerializer2\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Z\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BeanSerializerFactory\\.findBeanSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BeanSerializerFactory\\.findPropertyTypeSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/AnnotatedMember\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BeanSerializerFactory\\.findPropertyContentTypeSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/AnnotatedMember\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BeanSerializerFactory\\.constructBeanSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BeanSerializerFactory\\.constructObjectIdHandler\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Ljava\\/util\\/List\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/impl\\/ObjectIdWriter\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BeanSerializerFactory\\.findBeanProperties\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/BeanSerializerBuilder\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BeanSerializerFactory\\.\\_constructWriter\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/BeanPropertyDefinition\\;Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/PropertyBuilder\\;ZLcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/AnnotatedMember\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/BeanPropertyWriter\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.ContextualSerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.DefaultSerializerProvider\\.serializerInstance\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;Ljava\\/lang\\/Object\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.DefaultSerializerProvider\\.includeFilterSuppressNulls\\:\\(Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.DefaultSerializerProvider\\.serializeValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.DefaultSerializerProvider\\.serializeValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.DefaultSerializerProvider\\.serializeValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.DefaultSerializerProvider\\.serializePolymorphic\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.DefaultSerializerProvider\\.\\_serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/PropertyName\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.DefaultSerializerProvider\\.\\_serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.DefaultSerializerProvider\\.\\_serializeNull\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.DefaultSerializerProvider\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.DefaultSerializerProvider\\.generateJsonSchema\\:\\(Ljava\\/lang\\/Class\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsonschema\\/JsonSchema\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.PropertyBuilder\\.buildWriter\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/BeanPropertyDefinition\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/AnnotatedMember\\;Z\\)Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/BeanPropertyWriter\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.PropertyBuilder\\.findSerializationType\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;ZLcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.PropertyFilter\\.serializeAsField\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/PropertyWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.PropertyFilter\\.serializeAsElement\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/PropertyWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.PropertyFilter\\.depositSchemaProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/PropertyWriter\\;Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/ObjectNode\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.PropertyFilter\\.depositSchemaProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/PropertyWriter\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonObjectFormatVisitor\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.PropertyWriter\\.serializeAsField\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.PropertyWriter\\.serializeAsOmittedField\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.PropertyWriter\\.serializeAsElement\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.PropertyWriter\\.serializeAsPlaceholder\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.PropertyWriter\\.depositSchemaProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonObjectFormatVisitor\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.PropertyWriter\\.depositSchemaProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/ObjectNode\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.ResolvableSerializer\\.resolve\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.SerializerCache\\.addAndResolveNonTypedSerializer\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.SerializerCache\\.addAndResolveNonTypedSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.SerializerCache\\.addAndResolveNonTypedSerializer\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.SerializerFactory\\.createSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.SerializerFactory\\.createTypeSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.SerializerFactory\\.createKeySerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.VirtualBeanPropertyWriter\\.value\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.VirtualBeanPropertyWriter\\.serializeAsField\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.VirtualBeanPropertyWriter\\.serializeAsElement\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.AttributePropertyWriter\\.value\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.BeanAsArraySerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.BeanAsArraySerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.BeanAsArraySerializer\\.serializeAsArray\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.FailingSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.FailingSerializer\\.getSchema\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/reflect\\/Type\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.FilteredBeanPropertyWriter\\$MultiView\\.serializeAsField\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.FilteredBeanPropertyWriter\\$MultiView\\.serializeAsElement\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.FilteredBeanPropertyWriter\\$MultiView\\.depositSchemaProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonObjectFormatVisitor\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.FilteredBeanPropertyWriter\\$SingleView\\.serializeAsField\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.FilteredBeanPropertyWriter\\$SingleView\\.serializeAsElement\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.FilteredBeanPropertyWriter\\$SingleView\\.depositSchemaProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonObjectFormatVisitor\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.IndexedListSerializer\\.serialize\\:\\(Ljava\\/util\\/List\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.IndexedListSerializer\\.serializeContents\\:\\(Ljava\\/util\\/List\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.IndexedListSerializer\\.serializeContentsUsing\\:\\(Ljava\\/util\\/List\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.IndexedListSerializer\\.serializeTypedContents\\:\\(Ljava\\/util\\/List\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.IndexedListSerializer\\.serializeContents\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.IndexedListSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.IndexedStringListSerializer\\.acceptContentVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonArrayFormatVisitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.IndexedStringListSerializer\\.serialize\\:\\(Ljava\\/util\\/List\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.IndexedStringListSerializer\\.serializeWithType\\:\\(Ljava\\/util\\/List\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.IndexedStringListSerializer\\.serializeContents\\:\\(Ljava\\/util\\/List\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.IndexedStringListSerializer\\.serializeWithType\\:\\(Ljava\\/util\\/Collection\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.IndexedStringListSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.IndexedStringListSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.IteratorSerializer\\.serialize\\:\\(Ljava\\/util\\/Iterator\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.IteratorSerializer\\.serializeContents\\:\\(Ljava\\/util\\/Iterator\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.IteratorSerializer\\.\\_serializeDynamicContents\\:\\(Ljava\\/util\\/Iterator\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.IteratorSerializer\\.serializeContents\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.IteratorSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.MapEntrySerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.MapEntrySerializer\\.serialize\\:\\(Ljava\\/util\\/Map\\$Entry\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.MapEntrySerializer\\.serializeWithType\\:\\(Ljava\\/util\\/Map\\$Entry\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.MapEntrySerializer\\.serializeDynamic\\:\\(Ljava\\/util\\/Map\\$Entry\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.MapEntrySerializer\\.\\_findAndAddDynamic\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/impl\\/PropertySerializerMap\\;Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.MapEntrySerializer\\.\\_findAndAddDynamic\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/impl\\/PropertySerializerMap\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.MapEntrySerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.MapEntrySerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.PropertySerializerMap\\.findAndAddPrimarySerializer\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/impl\\/PropertySerializerMap\\$SerializerAndMapResult\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.PropertySerializerMap\\.findAndAddPrimarySerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/impl\\/PropertySerializerMap\\$SerializerAndMapResult\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.PropertySerializerMap\\.findAndAddSecondarySerializer\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/impl\\/PropertySerializerMap\\$SerializerAndMapResult\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.PropertySerializerMap\\.findAndAddSecondarySerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/impl\\/PropertySerializerMap\\$SerializerAndMapResult\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.PropertySerializerMap\\.findAndAddRootValueSerializer\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/impl\\/PropertySerializerMap\\$SerializerAndMapResult\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.PropertySerializerMap\\.findAndAddRootValueSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/impl\\/PropertySerializerMap\\$SerializerAndMapResult\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.PropertySerializerMap\\.findAndAddKeySerializer\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/impl\\/PropertySerializerMap\\$SerializerAndMapResult\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.SimpleBeanPropertyFilter\\$1\\.serializeAsField\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/PropertyWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.SimpleBeanPropertyFilter\\$1\\.depositSchemaProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/PropertyWriter\\;Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/ObjectNode\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.SimpleBeanPropertyFilter\\$1\\.depositSchemaProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/PropertyWriter\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonObjectFormatVisitor\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.SimpleBeanPropertyFilter\\$1\\.serializeAsElement\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/PropertyWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.SimpleBeanPropertyFilter\\.serializeAsField\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/BeanPropertyWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.SimpleBeanPropertyFilter\\.depositSchemaProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/BeanPropertyWriter\\;Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/ObjectNode\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.SimpleBeanPropertyFilter\\.depositSchemaProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/BeanPropertyWriter\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonObjectFormatVisitor\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.SimpleBeanPropertyFilter\\.serializeAsField\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/PropertyWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.SimpleBeanPropertyFilter\\.serializeAsElement\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/PropertyWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.SimpleBeanPropertyFilter\\.depositSchemaProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/PropertyWriter\\;Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/ObjectNode\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.SimpleBeanPropertyFilter\\.depositSchemaProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/PropertyWriter\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonObjectFormatVisitor\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.StringArraySerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.StringArraySerializer\\.serialize\\:\\(\\[Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.StringArraySerializer\\.serializeContents\\:\\(\\[Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.StringArraySerializer\\.serializeContentsSlow\\:\\(\\[Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.StringArraySerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.StringArraySerializer\\.serializeContents\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.StringArraySerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.StringCollectionSerializer\\.acceptContentVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonArrayFormatVisitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.StringCollectionSerializer\\.serialize\\:\\(Ljava\\/util\\/Collection\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.StringCollectionSerializer\\.serializeWithType\\:\\(Ljava\\/util\\/Collection\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.StringCollectionSerializer\\.serializeContents\\:\\(Ljava\\/util\\/Collection\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.StringCollectionSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.StringCollectionSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.TypeWrappedSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.TypeWrappedSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.TypeWrappedSerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.UnknownSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.UnknownSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.UnknownSerializer\\.getSchema\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/reflect\\/Type\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.UnknownSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.UnknownSerializer\\.failForEmpty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.UnwrappingBeanPropertyWriter\\$1\\.expectObjectFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonObjectFormatVisitor\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.UnwrappingBeanPropertyWriter\\.serializeAsField\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.UnwrappingBeanPropertyWriter\\.depositSchemaProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonObjectFormatVisitor\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.UnwrappingBeanPropertyWriter\\.\\_findAndAddDynamic\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/impl\\/PropertySerializerMap\\;Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.UnwrappingBeanSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.UnwrappingBeanSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.WritableObjectId\\.writeAsId\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/impl\\/ObjectIdWriter\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.WritableObjectId\\.writeAsField\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/impl\\/ObjectIdWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ArraySerializerBase\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ArraySerializerBase\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ArraySerializerBase\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ArraySerializerBase\\.serializeContents\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.AsArraySerializerBase\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.AsArraySerializerBase\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.AsArraySerializerBase\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.AsArraySerializerBase\\.serializeContents\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.AsArraySerializerBase\\.getSchema\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/reflect\\/Type\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.AsArraySerializerBase\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.AsArraySerializerBase\\.\\_findAndAddDynamic\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/impl\\/PropertySerializerMap\\;Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.AsArraySerializerBase\\.\\_findAndAddDynamic\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/impl\\/PropertySerializerMap\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.BeanSerializerBase\\.resolve\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.BeanSerializerBase\\.findConvertingSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/BeanPropertyWriter\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.BeanSerializerBase\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.BeanSerializerBase\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.BeanSerializerBase\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.BeanSerializerBase\\.\\_serializeWithObjectId\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.BeanSerializerBase\\.\\_serializeWithObjectId\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.BeanSerializerBase\\.\\_serializeObjectId\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/impl\\/WritableObjectId\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.BeanSerializerBase\\.serializeFields\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.BeanSerializerBase\\.serializeFieldsFiltered\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.BeanSerializerBase\\.getSchema\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/reflect\\/Type\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.BeanSerializerBase\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.BooleanSerializer\\$AsNumber\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.BooleanSerializer\\$AsNumber\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.BooleanSerializer\\$AsNumber\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.BooleanSerializer\\$AsNumber\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.BooleanSerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.BooleanSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.BooleanSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.BooleanSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ByteArraySerializer\\.serialize\\:\\(\\[BLcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ByteArraySerializer\\.serializeWithType\\:\\(\\[BLcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ByteArraySerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ByteArraySerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ByteArraySerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ByteBufferSerializer\\.serialize\\:\\(Ljava\\/nio\\/ByteBuffer\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ByteBufferSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ByteBufferSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.CalendarSerializer\\.serialize\\:\\(Ljava\\/util\\/Calendar\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.CalendarSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ClassSerializer\\.serialize\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ClassSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ClassSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.CollectionSerializer\\.serialize\\:\\(Ljava\\/util\\/Collection\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.CollectionSerializer\\.serializeContents\\:\\(Ljava\\/util\\/Collection\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.CollectionSerializer\\.serializeContentsUsing\\:\\(Ljava\\/util\\/Collection\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.CollectionSerializer\\.serializeContents\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.CollectionSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.DateSerializer\\.serialize\\:\\(Ljava\\/util\\/Date\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.DateSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.DateTimeSerializerBase\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.DateTimeSerializerBase\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.DateTimeSerializerBase\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.DateTimeSerializerBase\\.\\_acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.DateTimeSerializerBase\\.\\_serializeAsString\\:\\(Ljava\\/util\\/Date\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.EnumSerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.EnumSerializer\\.serialize\\:\\(Ljava\\/lang\\/Enum\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.EnumSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.EnumSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.EnumSetSerializer\\.serialize\\:\\(Ljava\\/util\\/EnumSet\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.EnumSetSerializer\\.serializeContents\\:\\(Ljava\\/util\\/EnumSet\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.EnumSetSerializer\\.serializeContents\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.EnumSetSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.FileSerializer\\.serialize\\:\\(Ljava\\/io\\/File\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.FileSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.FileSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.InetAddressSerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.InetAddressSerializer\\.serialize\\:\\(Ljava\\/net\\/InetAddress\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.InetAddressSerializer\\.serializeWithType\\:\\(Ljava\\/net\\/InetAddress\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.InetAddressSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.InetAddressSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.InetSocketAddressSerializer\\.serialize\\:\\(Ljava\\/net\\/InetSocketAddress\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.InetSocketAddressSerializer\\.serializeWithType\\:\\(Ljava\\/net\\/InetSocketAddress\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.InetSocketAddressSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.InetSocketAddressSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.IterableSerializer\\.serialize\\:\\(Ljava\\/lang\\/Iterable\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.IterableSerializer\\.serializeContents\\:\\(Ljava\\/lang\\/Iterable\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.IterableSerializer\\.serializeContents\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.IterableSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\$TypeSerializerRerouter\\.writeTypePrefix\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/WritableTypeId\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/type\\/WritableTypeId\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\$TypeSerializerRerouter\\.writeTypeSuffix\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/WritableTypeId\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/type\\/WritableTypeId\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\$TypeSerializerRerouter\\.writeTypePrefixForScalar\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\$TypeSerializerRerouter\\.writeTypePrefixForObject\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\$TypeSerializerRerouter\\.writeTypePrefixForArray\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\$TypeSerializerRerouter\\.writeTypeSuffixForScalar\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\$TypeSerializerRerouter\\.writeTypeSuffixForObject\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\$TypeSerializerRerouter\\.writeTypeSuffixForArray\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\$TypeSerializerRerouter\\.writeTypePrefixForScalar\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\$TypeSerializerRerouter\\.writeTypePrefixForObject\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\$TypeSerializerRerouter\\.writeTypePrefixForArray\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\$TypeSerializerRerouter\\.writeCustomTypePrefixForScalar\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\$TypeSerializerRerouter\\.writeCustomTypePrefixForObject\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\$TypeSerializerRerouter\\.writeCustomTypePrefixForArray\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\$TypeSerializerRerouter\\.writeCustomTypeSuffixForScalar\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\$TypeSerializerRerouter\\.writeCustomTypeSuffixForObject\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\$TypeSerializerRerouter\\.writeCustomTypeSuffixForArray\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\.getSchema\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/reflect\\/Type\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\.\\_acceptJsonFormatVisitorForEnum\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Ljava\\/lang\\/Class\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapProperty\\.serializeAsField\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapProperty\\.serializeAsOmittedField\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapProperty\\.serializeAsElement\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapProperty\\.serializeAsPlaceholder\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapProperty\\.depositSchemaProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonObjectFormatVisitor\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapProperty\\.depositSchemaProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/ObjectNode\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapSerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapSerializer\\.serialize\\:\\(Ljava\\/util\\/Map\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapSerializer\\.serializeWithType\\:\\(Ljava\\/util\\/Map\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapSerializer\\.serializeFields\\:\\(Ljava\\/util\\/Map\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapSerializer\\.serializeOptionalFields\\:\\(Ljava\\/util\\/Map\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapSerializer\\.serializeFieldsUsing\\:\\(Ljava\\/util\\/Map\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapSerializer\\.serializeFilteredFields\\:\\(Ljava\\/util\\/Map\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/PropertyFilter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapSerializer\\.serializeTypedFields\\:\\(Ljava\\/util\\/Map\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapSerializer\\.serializeFilteredAnyProperties\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Object\\;Ljava\\/util\\/Map\\;Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/PropertyFilter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapSerializer\\.\\_findAndAddDynamic\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/impl\\/PropertySerializerMap\\;Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapSerializer\\.\\_findAndAddDynamic\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/impl\\/PropertySerializerMap\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapSerializer\\.\\_orderEntries\\:\\(Ljava\\/util\\/Map\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapSerializer\\.\\_writeNullKeyedEntry\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapSerializer\\.\\_findSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/Object\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NonTypedScalarSerializerBase\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NullSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NullSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NullSerializer\\.getSchema\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/reflect\\/Type\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NullSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializer\\.serialize\\:\\(Ljava\\/lang\\/Number\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializers\\$Base\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializers\\$Base\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializers\\$DoubleSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializers\\$DoubleSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializers\\$DoubleSerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializers\\$DoubleSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializers\\$FloatSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializers\\$FloatSerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializers\\$FloatSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializers\\$IntLikeSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializers\\$IntLikeSerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializers\\$IntLikeSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializers\\$IntegerSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializers\\$IntegerSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializers\\$IntegerSerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializers\\$IntegerSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializers\\$LongSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializers\\$LongSerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializers\\$LongSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializers\\$ShortSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializers\\$ShortSerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializers\\$ShortSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ObjectArraySerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ObjectArraySerializer\\.serialize\\:\\(\\[Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ObjectArraySerializer\\.serializeContents\\:\\(\\[Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ObjectArraySerializer\\.serializeContentsUsing\\:\\(\\[Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ObjectArraySerializer\\.serializeTypedContents\\:\\(\\[Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ObjectArraySerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ObjectArraySerializer\\.\\_findAndAddDynamic\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/impl\\/PropertySerializerMap\\;Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ObjectArraySerializer\\.\\_findAndAddDynamic\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/impl\\/PropertySerializerMap\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ObjectArraySerializer\\.serializeContents\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ObjectArraySerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.RawSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.RawSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.RawSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ReferenceTypeSerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ReferenceTypeSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ReferenceTypeSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ReferenceTypeSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ReferenceTypeSerializer\\.\\_findCachedSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/Class\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ReferenceTypeSerializer\\.\\_findSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.SerializableSerializer\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializable\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.SerializableSerializer\\.serializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializable\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.SerializableSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.SerializableSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.SerializableSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.SqlDateSerializer\\.serialize\\:\\(Ljava\\/sql\\/Date\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.SqlDateSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.SqlTimeSerializer\\.serialize\\:\\(Ljava\\/sql\\/Time\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.SqlTimeSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.SqlTimeSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StaticListSerializerBase\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StaticListSerializerBase\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StaticListSerializerBase\\.acceptContentVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonArrayFormatVisitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StaticListSerializerBase\\.serializeWithType\\:\\(Ljava\\/util\\/Collection\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StaticListSerializerBase\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$BooleanArraySerializer\\.serialize\\:\\(\\[ZLcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$BooleanArraySerializer\\.serializeContents\\:\\(\\[ZLcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$BooleanArraySerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$BooleanArraySerializer\\.serializeContents\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$BooleanArraySerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$CharArraySerializer\\.serialize\\:\\(\\[CLcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$CharArraySerializer\\.serializeWithType\\:\\(\\[CLcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$CharArraySerializer\\.\\_writeArrayContents\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\[C\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$CharArraySerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$CharArraySerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$CharArraySerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$DoubleArraySerializer\\.serialize\\:\\(\\[DLcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$DoubleArraySerializer\\.serializeContents\\:\\(\\[DLcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$DoubleArraySerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$DoubleArraySerializer\\.serializeContents\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$DoubleArraySerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$FloatArraySerializer\\.serialize\\:\\(\\[FLcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$FloatArraySerializer\\.serializeContents\\:\\(\\[FLcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$FloatArraySerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$FloatArraySerializer\\.serializeContents\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$FloatArraySerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$IntArraySerializer\\.serialize\\:\\(\\[ILcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$IntArraySerializer\\.serializeContents\\:\\(\\[ILcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$IntArraySerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$IntArraySerializer\\.serializeContents\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$IntArraySerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$LongArraySerializer\\.serialize\\:\\(\\[JLcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$LongArraySerializer\\.serializeContents\\:\\(\\[JLcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$LongArraySerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$LongArraySerializer\\.serializeContents\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$LongArraySerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$ShortArraySerializer\\.serialize\\:\\(\\[SLcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$ShortArraySerializer\\.serializeContents\\:\\(\\[SLcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$ShortArraySerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$ShortArraySerializer\\.serializeContents\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$ShortArraySerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdDelegatingSerializer\\.resolve\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdDelegatingSerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdDelegatingSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdDelegatingSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdDelegatingSerializer\\.getSchema\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/reflect\\/Type\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdDelegatingSerializer\\.getSchema\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/reflect\\/Type\\;Z\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdDelegatingSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdDelegatingSerializer\\.\\_findSerializer\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdJdkSerializers\\$AtomicBooleanSerializer\\.serialize\\:\\(Ljava\\/util\\/concurrent\\/atomic\\/AtomicBoolean\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdJdkSerializers\\$AtomicBooleanSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdJdkSerializers\\$AtomicBooleanSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdJdkSerializers\\$AtomicIntegerSerializer\\.serialize\\:\\(Ljava\\/util\\/concurrent\\/atomic\\/AtomicInteger\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdJdkSerializers\\$AtomicIntegerSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdJdkSerializers\\$AtomicIntegerSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdJdkSerializers\\$AtomicLongSerializer\\.serialize\\:\\(Ljava\\/util\\/concurrent\\/atomic\\/AtomicLong\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdJdkSerializers\\$AtomicLongSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdJdkSerializers\\$AtomicLongSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdKeySerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdKeySerializers\\$Default\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdKeySerializers\\$Dynamic\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdKeySerializers\\$Dynamic\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdKeySerializers\\$Dynamic\\.\\_findAndAddDynamic\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/impl\\/PropertySerializerMap\\;Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdKeySerializers\\$EnumKeySerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdKeySerializers\\$StringKeySerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdScalarSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdScalarSerializer\\.getSchema\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/reflect\\/Type\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdScalarSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdSerializer\\.getSchema\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/reflect\\/Type\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdSerializer\\.getSchema\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/reflect\\/Type\\;Z\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdSerializer\\.visitStringFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdSerializer\\.visitStringFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonValueFormat\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdSerializer\\.visitIntFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\$NumberType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdSerializer\\.visitIntFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\$NumberType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonValueFormat\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdSerializer\\.visitFloatFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\$NumberType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdSerializer\\.visitArrayFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdSerializer\\.visitArrayFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatTypes\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdSerializer\\.wrapAndThrow\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/Throwable\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdSerializer\\.wrapAndThrow\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/Throwable\\;Ljava\\/lang\\/Object\\;I\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdSerializer\\.findContextualConvertingSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdSerializer\\.findConvertingContentSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdSerializer\\.findPropertyFilter\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/PropertyFilter\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdSerializer\\.findAnnotatedContentSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StringSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StringSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StringSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.TimeZoneSerializer\\.serialize\\:\\(Ljava\\/util\\/TimeZone\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.TimeZoneSerializer\\.serializeWithType\\:\\(Ljava\\/util\\/TimeZone\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.TimeZoneSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.TimeZoneSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ToStringSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ToStringSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ToStringSerializer\\.getSchema\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/reflect\\/Type\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ToStringSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.TokenBufferSerializer\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/util\\/TokenBuffer\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.TokenBufferSerializer\\.serializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/util\\/TokenBuffer\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.TokenBufferSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.TokenBufferSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.TokenBufferSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.UUIDSerializer\\.serialize\\:\\(Ljava\\/util\\/UUID\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.UUIDSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.type\\.TypeBase\\.serializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.type\\.TypeBase\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.type\\.TypeFactory\\.findClass\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.type\\.TypeFactory\\.classForName\\:\\(Ljava\\/lang\\/String\\;ZLjava\\/lang\\/ClassLoader\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.type\\.TypeFactory\\.classForName\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.type\\.TypeFactory\\.\\_resolveTypePlaceholders\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.type\\.TypeFactory\\.constructFromCanonical\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.type\\.TypeParser\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.type\\.TypeParser\\.parseType\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/TypeParser\\$MyTokenizer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.type\\.TypeParser\\.parseTypes\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/TypeParser\\$MyTokenizer\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.ByteBufferBackedInputStream\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.ByteBufferBackedInputStream\\.read\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.ByteBufferBackedOutputStream\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.ByteBufferBackedOutputStream\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.ClassUtil\\.throwIfIOE\\:\\(Ljava\\/lang\\/Throwable\\;\\)Ljava\\/lang\\/Throwable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.ClassUtil\\.throwRootCauseIfIOE\\:\\(Ljava\\/lang\\/Throwable\\;\\)Ljava\\/lang\\/Throwable\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.ClassUtil\\.throwAsMappingException\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/io\\/IOException\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.ClassUtil\\.closeOnFailAndThrowAsIOE\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Exception\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.ClassUtil\\.closeOnFailAndThrowAsIOE\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/io\\/Closeable\\;Ljava\\/lang\\/Exception\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.ClassUtil\\.createInstance\\:\\(Ljava\\/lang\\/Class\\;Z\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.ClassUtil\\.findConstructor\\:\\(Ljava\\/lang\\/Class\\;Z\\)Ljava\\/lang\\/reflect\\/Constructor\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.ConstantValueInstantiator\\.createUsingDefault\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.ISO8601DateFormat\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.ISO8601Utils\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/text\\/ParsePosition\\;\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.ISO8601Utils\\.parseInt\\:\\(Ljava\\/lang\\/String\\;II\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.JSONPObject\\.serializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.JSONPObject\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.JSONWrappedObject\\.serializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.JSONWrappedObject\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.LRUMap\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.LRUMap\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.RawValue\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.RawValue\\.serializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.RawValue\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.RawValue\\.\\_serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.StdDateFormat\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.StdDateFormat\\.\\_parseDate\\:\\(Ljava\\/lang\\/String\\;Ljava\\/text\\/ParsePosition\\;\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.StdDateFormat\\.\\_parseDateFromLong\\:\\(Ljava\\/lang\\/String\\;Ljava\\/text\\/ParsePosition\\;\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.StdDateFormat\\.parseAsISO8601\\:\\(Ljava\\/lang\\/String\\;Ljava\\/text\\/ParsePosition\\;\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException", 
   "java.text.ParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.StdDateFormat\\.\\_parseAsISO8601\\:\\(Ljava\\/lang\\/String\\;Ljava\\/text\\/ParsePosition\\;\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\$Parser\\.peekNextToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\$Parser\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\$Parser\\.nextToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\$Parser\\.nextFieldName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\$Parser\\.getBigIntegerValue\\:\\(\\)Ljava\\/math\\/BigInteger\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\$Parser\\.getDecimalValue\\:\\(\\)Ljava\\/math\\/BigDecimal\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\$Parser\\.getDoubleValue\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\$Parser\\.getFloatValue\\:\\(\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\$Parser\\.getIntValue\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\$Parser\\.getLongValue\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\$Parser\\.getNumberType\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\$NumberType\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\$Parser\\.getNumberValue\\:\\(\\)Ljava\\/lang\\/Number\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\$Parser\\.\\_convertNumberToInt\\:\\(Ljava\\/lang\\/Number\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\$Parser\\.\\_convertNumberToLong\\:\\(Ljava\\/lang\\/Number\\;\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\$Parser\\.getBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\$Parser\\.readBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\$Parser\\.\\_checkIsNumber\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\$Parser\\.\\_handleEOF\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.asCopyOfValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/util\\/TokenBuffer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.asParserOnFirstToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.append\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/util\\/TokenBuffer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/util\\/TokenBuffer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/util\\/TokenBuffer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeStartArray\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeEndArray\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeStartObject\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeStartObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeEndObject\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeFieldName\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeFieldName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeString\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeString\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeString\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeRawUTF8String\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeUTF8String\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeRaw\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeRaw\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeRaw\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeRaw\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeRaw\\:\\(C\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeRawValue\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeRawValue\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeRawValue\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeNumber\\:\\(S\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeNumber\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeNumber\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeNumber\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeNumber\\:\\(F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeNumber\\:\\(Ljava\\/math\\/BigDecimal\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeNumber\\:\\(Ljava\\/math\\/BigInteger\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeNumber\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeBoolean\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeNull\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeTree\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/TreeNode\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeEmbeddedObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.copyCurrentEvent\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.copyCurrentStructure\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.\\_checkNativeIds\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBufferReadContext\\.setCurrentName\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.Base64Variant\\.decode\\:\\(Ljava\\/lang\\/String\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.Base64Variant\\.decode\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/core\\/util\\/ByteArrayBuilder\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.Base64Variant\\.\\_reportInvalidBase64\\:\\(CILjava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.Base64Variant\\.\\_reportBase64EOF\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.Base64Variants\\.valueOf\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.hasFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/format\\/InputAccessor\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/format\\/MatchStrength\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.hasJSONFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/format\\/InputAccessor\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/format\\/MatchStrength\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createParser\\:\\(Ljava\\/io\\/File\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createParser\\:\\(Ljava\\/net\\/URL\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createParser\\:\\(Ljava\\/io\\/InputStream\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createParser\\:\\(Ljava\\/io\\/Reader\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createParser\\:\\(\\[B\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createParser\\:\\(\\[BII\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createParser\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createParser\\:\\(\\[C\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createParser\\:\\(\\[CII\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createParser\\:\\(Ljava\\/io\\/DataInput\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createNonBlockingByteArrayParser\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createJsonParser\\:\\(Ljava\\/io\\/File\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createJsonParser\\:\\(Ljava\\/net\\/URL\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createJsonParser\\:\\(Ljava\\/io\\/InputStream\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createJsonParser\\:\\(Ljava\\/io\\/Reader\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createJsonParser\\:\\(\\[B\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createJsonParser\\:\\(\\[BII\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createJsonParser\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createGenerator\\:\\(Ljava\\/io\\/OutputStream\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonEncoding\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createGenerator\\:\\(Ljava\\/io\\/OutputStream\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createGenerator\\:\\(Ljava\\/io\\/Writer\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createGenerator\\:\\(Ljava\\/io\\/File\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonEncoding\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createGenerator\\:\\(Ljava\\/io\\/DataOutput\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonEncoding\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createGenerator\\:\\(Ljava\\/io\\/DataOutput\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createJsonGenerator\\:\\(Ljava\\/io\\/OutputStream\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonEncoding\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createJsonGenerator\\:\\(Ljava\\/io\\/Writer\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createJsonGenerator\\:\\(Ljava\\/io\\/OutputStream\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.\\_createParser\\:\\(Ljava\\/io\\/InputStream\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.\\_createParser\\:\\(Ljava\\/io\\/Reader\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.\\_createParser\\:\\(\\[CIILcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;Z\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.\\_createParser\\:\\(\\[BIILcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.\\_createParser\\:\\(Ljava\\/io\\/DataInput\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.\\_createGenerator\\:\\(Ljava\\/io\\/Writer\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.\\_createUTF8Generator\\:\\(Ljava\\/io\\/OutputStream\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.\\_createWriter\\:\\(Ljava\\/io\\/OutputStream\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonEncoding\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Ljava\\/io\\/Writer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.\\_decorate\\:\\(Ljava\\/io\\/InputStream\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.\\_decorate\\:\\(Ljava\\/io\\/Reader\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Ljava\\/io\\/Reader\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.\\_decorate\\:\\(Ljava\\/io\\/DataInput\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Ljava\\/io\\/DataInput\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.\\_decorate\\:\\(Ljava\\/io\\/OutputStream\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.\\_decorate\\:\\(Ljava\\/io\\/Writer\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Ljava\\/io\\/Writer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.\\_optimizedStreamFromURL\\:\\(Ljava\\/net\\/URL\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeStartArray\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeStartArray\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeEndArray\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeStartObject\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeStartObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeEndObject\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeFieldName\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeFieldName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeFieldId\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeArray\\:\\(\\[III\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeArray\\:\\(\\[JII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeArray\\:\\(\\[DII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeString\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeString\\:\\(Ljava\\/io\\/Reader\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeString\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeString\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeRawUTF8String\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeUTF8String\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeRaw\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeRaw\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeRaw\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeRaw\\:\\(C\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeRaw\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeRawValue\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeRawValue\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeRawValue\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeRawValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeBinary\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeBinary\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeBinary\\:\\(Ljava\\/io\\/InputStream\\;I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/InputStream\\;I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeNumber\\:\\(S\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeNumber\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeNumber\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeNumber\\:\\(Ljava\\/math\\/BigInteger\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeNumber\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeNumber\\:\\(F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeNumber\\:\\(Ljava\\/math\\/BigDecimal\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeNumber\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeBoolean\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeNull\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeEmbeddedObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeObjectId\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeObjectRef\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeTypeId\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeTypePrefix\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/type\\/WritableTypeId\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/type\\/WritableTypeId\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeTypeSuffix\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/type\\/WritableTypeId\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/type\\/WritableTypeId\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeTree\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/TreeNode\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeStringField\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeBooleanField\\:\\(Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeNullField\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeNumberField\\:\\(Ljava\\/lang\\/String\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeNumberField\\:\\(Ljava\\/lang\\/String\\;J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeNumberField\\:\\(Ljava\\/lang\\/String\\;D\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeNumberField\\:\\(Ljava\\/lang\\/String\\;F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeNumberField\\:\\(Ljava\\/lang\\/String\\;Ljava\\/math\\/BigDecimal\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeBinaryField\\:\\(Ljava\\/lang\\/String\\;\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeArrayFieldStart\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeObjectFieldStart\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeObjectField\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeOmittedField\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.copyCurrentEvent\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.copyCurrentStructure\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.\\_reportError\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.\\_writeSimpleObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.releaseBuffered\\:\\(Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.releaseBuffered\\:\\(Ljava\\/io\\/Writer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.nextToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.nextValue\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.nextFieldName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.nextFieldName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.nextTextValue\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.nextIntValue\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.nextLongValue\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.nextBooleanValue\\:\\(\\)Ljava\\/lang\\/Boolean\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.skipChildren\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.finishToken\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.isNaN\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getCurrentName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.currentName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getText\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.UnsupportedOperationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getText\\:\\(Ljava\\/io\\/Writer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getTextCharacters\\:\\(\\)\\[C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getTextLength\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getTextOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getNumberValue\\:\\(\\)Ljava\\/lang\\/Number\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getNumberType\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\$NumberType\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getByteValue\\:\\(\\)B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getShortValue\\:\\(\\)S"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getIntValue\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getLongValue\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getBigIntegerValue\\:\\(\\)Ljava\\/math\\/BigInteger\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getFloatValue\\:\\(\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getDoubleValue\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getDecimalValue\\:\\(\\)Ljava\\/math\\/BigDecimal\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getBooleanValue\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getEmbeddedObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getBinaryValue\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.readBinaryValue\\:\\(Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.readBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getValueAsInt\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getValueAsInt\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getValueAsLong\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getValueAsLong\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getValueAsDouble\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getValueAsDouble\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getValueAsBoolean\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getValueAsBoolean\\:\\(Z\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getValueAsString\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getValueAsString\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getObjectId\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getTypeId\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.readValueAs\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.readValueAs\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/type\\/TypeReference\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.readValuesAs\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/util\\/Iterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.readValuesAs\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/type\\/TypeReference\\;\\)Ljava\\/util\\/Iterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.readValueAsTree\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/TreeNode\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonPointer\\.compile\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonPointer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.ObjectCodec\\.readValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.ObjectCodec\\.readValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/TypeReference\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.ObjectCodec\\.readValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/ResolvedType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.ObjectCodec\\.readValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/util\\/Iterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.ObjectCodec\\.readValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/TypeReference\\;\\)Ljava\\/util\\/Iterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.ObjectCodec\\.readValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/ResolvedType\\;\\)Ljava\\/util\\/Iterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.ObjectCodec\\.writeValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.ObjectCodec\\.readTree\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/TreeNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.ObjectCodec\\.writeTree\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/core\\/TreeNode\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.ObjectCodec\\.treeToValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/TreeNode\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.PrettyPrinter\\.writeRootValueSeparator\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.PrettyPrinter\\.writeStartObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.PrettyPrinter\\.writeEndObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.PrettyPrinter\\.writeObjectEntrySeparator\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.PrettyPrinter\\.writeObjectFieldValueSeparator\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.PrettyPrinter\\.writeStartArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.PrettyPrinter\\.writeEndArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.PrettyPrinter\\.writeArrayValueSeparator\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.PrettyPrinter\\.beforeArrayValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.PrettyPrinter\\.beforeObjectEntries\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.SerializableString\\.writeQuotedUTF8\\:\\(Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.SerializableString\\.writeUnquotedUTF8\\:\\(Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.SerializableString\\.putQuotedUTF8\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.SerializableString\\.putUnquotedUTF8\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.TreeCodec\\.readTree\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/TreeNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.TreeCodec\\.writeTree\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/core\\/TreeNode\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.TreeNode\\.at\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/TreeNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.async\\.ByteArrayFeeder\\.feedInput\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.async\\.ByteBufferFeeder\\.feedInput\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.GeneratorBase\\.writeStartObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.GeneratorBase\\.writeFieldName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.GeneratorBase\\.writeString\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.GeneratorBase\\.writeRawValue\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.GeneratorBase\\.writeRawValue\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.GeneratorBase\\.writeRawValue\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.GeneratorBase\\.writeRawValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.GeneratorBase\\.writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/InputStream\\;I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.GeneratorBase\\.writeObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.GeneratorBase\\.writeTree\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/TreeNode\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.GeneratorBase\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.GeneratorBase\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.GeneratorBase\\.\\_verifyValueWrite\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.GeneratorBase\\.\\_asString\\:\\(Ljava\\/math\\/BigDecimal\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.GeneratorBase\\.\\_decodeSurrogate\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.getCurrentName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.getBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.\\_closeInput\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.\\_releaseBuffers\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.\\_handleEOF\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.\\_eofAsNextChar\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.getNumberValue\\:\\(\\)Ljava\\/lang\\/Number\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.getNumberType\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\$NumberType\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.getIntValue\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.getLongValue\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.getBigIntegerValue\\:\\(\\)Ljava\\/math\\/BigInteger\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.getFloatValue\\:\\(\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.getDoubleValue\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.getDecimalValue\\:\\(\\)Ljava\\/math\\/BigDecimal\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.\\_parseNumericValue\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.\\_parseIntValue\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.\\_parseSlowFloat\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.\\_parseSlowInt\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.convertNumberToInt\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.convertNumberToLong\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.convertNumberToBigInteger\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.convertNumberToDouble\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.convertNumberToBigDecimal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.\\_reportMismatchedEndMarker\\:\\(IC\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.\\_decodeEscaped\\:\\(\\)C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.\\_decodeBase64Escape\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;II\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.\\_decodeBase64Escape\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;CI\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.reportInvalidBase64Char\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;II\\)Ljava\\/lang\\/IllegalArgumentException\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.reportInvalidBase64Char\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;IILjava\\/lang\\/String\\;\\)Ljava\\/lang\\/IllegalArgumentException\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.loadMoreGuaranteed\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.loadMore\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.\\_finishString\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.nextToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.nextValue\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.skipChildren\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_handleEOF\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.getCurrentName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.getText\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.getTextCharacters\\:\\(\\)\\[C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.getTextLength\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.getTextOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.getBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.getValueAsBoolean\\:\\(Z\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.getValueAsInt\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.getValueAsInt\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.getValueAsLong\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.getValueAsLong\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.getValueAsDouble\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.getValueAsString\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.getValueAsString\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_decodeBase64\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/core\\/util\\/ByteArrayBuilder\\;Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.reportUnexpectedNumberChar\\:\\(ILjava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.reportInvalidNumber\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.reportOverflowInt\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.reportOverflowLong\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_reportUnexpectedChar\\:\\(ILjava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_reportInvalidEOF\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_reportInvalidEOFInValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_reportInvalidEOF\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_reportInvalidEOFInValue\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_reportInvalidEOF\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_reportMissingRootWS\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_throwInvalidSpace\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_throwUnquotedSpace\\:\\(ILjava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_handleUnrecognizedCharacterEscape\\:\\(C\\)C"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_reportError\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_reportError\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_reportError\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_wrapError\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Throwable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeStartArray\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeStartArray\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeEndArray\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeStartObject\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeStartObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeEndObject\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeFieldName\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeFieldName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeString\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeString\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeString\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeRawUTF8String\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeUTF8String\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeRaw\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeRaw\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeRaw\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeRaw\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeRaw\\:\\(C\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeRawValue\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeRawValue\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeRawValue\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/InputStream\\;I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeNumber\\:\\(S\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeNumber\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeNumber\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeNumber\\:\\(Ljava\\/math\\/BigInteger\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeNumber\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeNumber\\:\\(F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeNumber\\:\\(Ljava\\/math\\/BigDecimal\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.UnsupportedOperationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeNumber\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeBoolean\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeNull\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeOmittedField\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeObjectId\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeObjectRef\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeTypeId\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.\\_checkParentPath\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.\\_checkPropertyParentPath\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.\\_checkBinaryWrite\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.\\_checkRawValueWrite\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getCurrentName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.nextToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.\\_nextToken2\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.\\_nextTokenWithBuffering\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/filter\\/TokenFilterContext\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.\\_nextBuffered\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/filter\\/TokenFilterContext\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.\\_verifyAllowedMatches\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.nextValue\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.skipChildren\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getText\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getTextCharacters\\:\\(\\)\\[C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getTextLength\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getTextOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getBigIntegerValue\\:\\(\\)Ljava\\/math\\/BigInteger\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getBooleanValue\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getByteValue\\:\\(\\)B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getShortValue\\:\\(\\)S"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getDecimalValue\\:\\(\\)Ljava\\/math\\/BigDecimal\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getDoubleValue\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getFloatValue\\:\\(\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getIntValue\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getLongValue\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getNumberType\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\$NumberType\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getNumberValue\\:\\(\\)Ljava\\/lang\\/Number\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getValueAsInt\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getValueAsInt\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getValueAsLong\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getValueAsLong\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getValueAsDouble\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getValueAsDouble\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getValueAsBoolean\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getValueAsBoolean\\:\\(Z\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getValueAsString\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getValueAsString\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getEmbeddedObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.readBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.TokenFilter\\.includeValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)Z"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.TokenFilterContext\\.setFieldName\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/filter\\/TokenFilter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.TokenFilterContext\\.writePath\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.TokenFilterContext\\.writeImmediatePath\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.TokenFilterContext\\.\\_writePath\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.TokenFilterContext\\.closeArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/filter\\/TokenFilterContext\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.TokenFilterContext\\.closeObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/filter\\/TokenFilterContext\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.format\\.DataFormatDetector\\.findFormat\\:\\(Ljava\\/io\\/InputStream\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/format\\/DataFormatMatcher\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.format\\.DataFormatDetector\\.findFormat\\:\\(\\[B\\)Lcom\\/fasterxml\\/jackson\\/core\\/format\\/DataFormatMatcher\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.format\\.DataFormatDetector\\.findFormat\\:\\(\\[BII\\)Lcom\\/fasterxml\\/jackson\\/core\\/format\\/DataFormatMatcher\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.format\\.DataFormatDetector\\.\\_findFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/format\\/InputAccessor\\$Std\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/format\\/DataFormatMatcher\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.format\\.DataFormatMatcher\\.createParserWithMatch\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.format\\.InputAccessor\\$Std\\.hasMoreBytes\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.format\\.InputAccessor\\$Std\\.nextByte\\:\\(\\)B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.format\\.InputAccessor\\.hasMoreBytes\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.format\\.InputAccessor\\.nextByte\\:\\(\\)B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.DataOutputAsStream\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.DataOutputAsStream\\.write\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.DataOutputAsStream\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.InputDecorator\\.decorate\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;Ljava\\/io\\/InputStream\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.InputDecorator\\.decorate\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\[BII\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.InputDecorator\\.decorate\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;Ljava\\/io\\/DataInput\\;\\)Ljava\\/io\\/DataInput\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.InputDecorator\\.decorate\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;Ljava\\/io\\/Reader\\;\\)Ljava\\/io\\/Reader\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.MergedStream\\.available\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.MergedStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.MergedStream\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.MergedStream\\.read\\:\\(\\[B\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.MergedStream\\.read\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.MergedStream\\.reset\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.MergedStream\\.skip\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.NumberInput\\.parseDouble\\:\\(Ljava\\/lang\\/String\\;\\)D"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.NumberInput\\.parseBigDecimal\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/math\\/BigDecimal\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.NumberInput\\.parseBigDecimal\\:\\(\\[C\\)Ljava\\/math\\/BigDecimal\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.NumberInput\\.parseBigDecimal\\:\\(\\[CII\\)Ljava\\/math\\/BigDecimal\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.OutputDecorator\\.decorate\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;Ljava\\/io\\/OutputStream\\;\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.OutputDecorator\\.decorate\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;Ljava\\/io\\/Writer\\;\\)Ljava\\/io\\/Writer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.SegmentedStringWriter\\.append\\:\\(C\\)Ljava\\/lang\\/Appendable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.SegmentedStringWriter\\.append\\:\\(Ljava\\/lang\\/CharSequence\\;II\\)Ljava\\/lang\\/Appendable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.SegmentedStringWriter\\.append\\:\\(Ljava\\/lang\\/CharSequence\\;\\)Ljava\\/lang\\/Appendable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.SerializedString\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.SerializedString\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.SerializedString\\.writeQuotedUTF8\\:\\(Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.SerializedString\\.writeUnquotedUTF8\\:\\(Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF32Reader\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF32Reader\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF32Reader\\.read\\:\\(\\[CII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF32Reader\\.reportUnexpectedEOF\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF32Reader\\.reportInvalid\\:\\(IILjava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF32Reader\\.loadMore\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF32Reader\\.reportBounds\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF32Reader\\.reportStrangeStream\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF8Writer\\.append\\:\\(C\\)Ljava\\/io\\/Writer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF8Writer\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF8Writer\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF8Writer\\.write\\:\\(\\[C\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF8Writer\\.write\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF8Writer\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF8Writer\\.write\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF8Writer\\.write\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF8Writer\\.convertSurrogate\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF8Writer\\.illegalSurrogate\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF8Writer\\.append\\:\\(C\\)Ljava\\/lang\\/Appendable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ByteSourceJsonBootstrapper\\.detectEncoding\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonEncoding\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ByteSourceJsonBootstrapper\\.skipUTF8BOM\\:\\(Ljava\\/io\\/DataInput\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ByteSourceJsonBootstrapper\\.constructReader\\:\\(\\)Ljava\\/io\\/Reader\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ByteSourceJsonBootstrapper\\.constructParser\\:\\(ILcom\\/fasterxml\\/jackson\\/core\\/ObjectCodec\\;Lcom\\/fasterxml\\/jackson\\/core\\/sym\\/ByteQuadsCanonicalizer\\;Lcom\\/fasterxml\\/jackson\\/core\\/sym\\/CharsToNameCanonicalizer\\;I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ByteSourceJsonBootstrapper\\.hasJSONFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/format\\/InputAccessor\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/format\\/MatchStrength\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ByteSourceJsonBootstrapper\\.tryMatch\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/format\\/InputAccessor\\;Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/core\\/format\\/MatchStrength\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/format\\/MatchStrength\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ByteSourceJsonBootstrapper\\.skipSpace\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/format\\/InputAccessor\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ByteSourceJsonBootstrapper\\.skipSpace\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/format\\/InputAccessor\\;B\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ByteSourceJsonBootstrapper\\.handleBOM\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ByteSourceJsonBootstrapper\\.checkUTF32\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ByteSourceJsonBootstrapper\\.reportWeirdUCS4\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ByteSourceJsonBootstrapper\\.ensureLoaded\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.DupDetector\\.isDup\\:\\(Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.JsonGeneratorImpl\\.writeStringField\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.JsonGeneratorImpl\\.\\_verifyPrettyValueWrite\\:\\(Ljava\\/lang\\/String\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.JsonGeneratorImpl\\.\\_reportCantWriteValueExpectName\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.JsonReadContext\\.setCurrentName\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.JsonReadContext\\.\\_checkDup\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/json\\/DupDetector\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.JsonWriteContext\\.writeFieldName\\:\\(Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.JsonWriteContext\\.\\_checkDup\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/json\\/DupDetector\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.releaseBuffered\\:\\(Ljava\\/io\\/Writer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.getNextChar\\:\\(Ljava\\/lang\\/String\\;\\)C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.getNextChar\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;\\)C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_closeInput\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_releaseBuffers\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_loadMoreGuaranteed\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_loadMore\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.getText\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.getText\\:\\(Ljava\\/io\\/Writer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.getValueAsString\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.getValueAsString\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.getTextCharacters\\:\\(\\)\\[C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.getTextLength\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.getTextOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.getBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.readBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_readBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/OutputStream\\;\\[B\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.nextToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.finishToken\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.nextFieldName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.nextFieldName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_isNextTokenNameYes\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_isNextTokenNameMaybe\\:\\(ILjava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_nextTokenNotInObject\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.nextTextValue\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.nextIntValue\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.nextLongValue\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.nextBooleanValue\\:\\(\\)Ljava\\/lang\\/Boolean\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_parsePosNumber\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_parseFloat\\:\\(IIIZI\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_parseNegNumber\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_parseNumber2\\:\\(ZI\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_verifyNoLeadingZeroes\\:\\(\\)C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_verifyNLZ2\\:\\(\\)C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_handleInvalidNumberStart\\:\\(IZ\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_verifyRootSpace\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_parseName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_parseName2\\:\\(III\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_handleOddName\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_parseAposName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_handleOddValue\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_handleApos\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_handleOddName2\\:\\(II\\[I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_finishString\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_finishString2\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_skipString\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_skipCR\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_skipColon\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_skipColon2\\:\\(Z\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_skipColonFast\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_skipComma\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_skipAfterComma2\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_skipWSOrEnd\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_skipWSOrEnd2\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_skipComment\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_skipCComment\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_skipYAMLComment\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_skipLine\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_decodeEscaped\\:\\(\\)C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_matchTrue\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_matchFalse\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_matchNull\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_matchToken\\:\\(Ljava\\/lang\\/String\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_matchToken2\\:\\(Ljava\\/lang\\/String\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_checkMatchEnd\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_decodeBase64\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_reportInvalidToken\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_reportInvalidToken\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_closeScope\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.releaseBuffered\\:\\(Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_closeInput\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_releaseBuffers\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.getText\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.getText\\:\\(Ljava\\/io\\/Writer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.getValueAsString\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.getValueAsString\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.getValueAsInt\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.getValueAsInt\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.getTextCharacters\\:\\(\\)\\[C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.getTextLength\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.getTextOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.getBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.readBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_readBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/OutputStream\\;\\[B\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.nextToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_nextTokenNotInObject\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.finishToken\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.nextFieldName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.nextTextValue\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.nextIntValue\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.nextLongValue\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.nextBooleanValue\\:\\(\\)Ljava\\/lang\\/Boolean\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_parsePosNumber\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_parseNegNumber\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_handleLeadingZeroes\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_parseFloat\\:\\(\\[CIIZI\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_verifyRootSpace\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_parseName\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_parseMediumName\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_parseMediumName2\\:\\(II\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_parseLongName\\:\\(III\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.parseName\\:\\(III\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.parseName\\:\\(IIII\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.parseName\\:\\(IIIII\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.parseEscapedName\\:\\(\\[IIIII\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_handleOddName\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_parseAposName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.findName\\:\\(II\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.findName\\:\\(III\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.findName\\:\\(IIII\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.findName\\:\\(\\[IIII\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.addName\\:\\(\\[III\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_finishString\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_finishAndReturnString\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_finishString2\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_skipString\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_handleUnexpectedValue\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_handleApos\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_handleInvalidNumberStart\\:\\(IZ\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_matchToken\\:\\(Ljava\\/lang\\/String\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_checkMatchEnd\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_skipWS\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_skipWSOrEnd\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_skipWSComment\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_skipColon\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_skipColon2\\:\\(IZ\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_skipComment\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_skipCComment\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_skipYAMLComment\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_skipLine\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_decodeEscaped\\:\\(\\)C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_decodeCharForError\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_decodeUtf8\\_2\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_decodeUtf8\\_3\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_decodeUtf8\\_4\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_skipUtf8\\_2\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_skipUtf8\\_3\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_skipUtf8\\_4\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_reportInvalidToken\\:\\(ILjava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_reportInvalidToken\\:\\(ILjava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_reportInvalidChar\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_reportInvalidInitial\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_reportInvalidOther\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_decodeBase64\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_closeScope\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeFieldName\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeFieldName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeUnq\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeStartArray\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeEndArray\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeStartObject\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeStartObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeEndObject\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writePPFieldName\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writePPFieldName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeString\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeString\\:\\(Ljava\\/io\\/Reader\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeString\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeString\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeRawUTF8String\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeUTF8String\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeRaw\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeRaw\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeRaw\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeRawValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeRaw\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeRaw\\:\\(C\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeSegmentedRaw\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeRawSegment\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/InputStream\\;I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeNumber\\:\\(S\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeQuotedShort\\:\\(S\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeNumber\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeQuotedInt\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeNumber\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeQuotedLong\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeNumber\\:\\(Ljava\\/math\\/BigInteger\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeNumber\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeNumber\\:\\(F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeNumber\\:\\(Ljava\\/math\\/BigDecimal\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeNumber\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeQuotedRaw\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeBoolean\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeNull\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_verifyValueWrite\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeBytes\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeBytes\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeStringSegments\\:\\(Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeStringSegments\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeStringSegments\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeStringSegment\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeStringSegment\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeStringSegment2\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeStringSegment2\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeStringSegmentASCII2\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeStringSegmentASCII2\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeCustomStringSegment2\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeCustomStringSegment2\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeCustomEscape\\:\\(\\[BILcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_handleLongCustomEscape\\:\\(\\[BII\\[BI\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeUTF8Segments\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeUTF8Segment\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeUTF8Segment2\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/InputStream\\;\\[BI\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/InputStream\\;\\[B\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_readMore\\:\\(Ljava\\/io\\/InputStream\\;\\[BIII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_outputRawMultiByteChar\\:\\(I\\[CII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_outputSurrogates\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_outputMultiByteChar\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeNull\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeGenericEscape\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_flushBuffer\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.releaseBuffered\\:\\(Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_loadMore\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_closeInput\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_releaseBuffers\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.getText\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.getText\\:\\(Ljava\\/io\\/Writer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.getValueAsString\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.getValueAsString\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.getValueAsInt\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.getValueAsInt\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.getTextCharacters\\:\\(\\)\\[C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.getTextLength\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.getTextOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.getBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.readBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_readBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/OutputStream\\;\\[B\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.nextToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_nextTokenNotInObject\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.finishToken\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.nextFieldName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.nextFieldName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipColonFast\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_isNextTokenNameYes\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_isNextTokenNameMaybe\\:\\(ILcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.nextTextValue\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.nextIntValue\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.nextLongValue\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.nextBooleanValue\\:\\(\\)Ljava\\/lang\\/Boolean\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_parsePosNumber\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_parseNegNumber\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_parseNumber2\\:\\(\\[CIZI\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_verifyNoLeadingZeroes\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_parseFloat\\:\\(\\[CIIZI\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_verifyRootSpace\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_parseName\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.parseMediumName\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.parseMediumName2\\:\\(II\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.parseLongName\\:\\(III\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.slowParseName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.parseName\\:\\(III\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.parseName\\:\\(IIII\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.parseName\\:\\(IIIII\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.parseEscapedName\\:\\(\\[IIIII\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_handleOddName\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_parseAposName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.findName\\:\\(II\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.findName\\:\\(III\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.findName\\:\\(IIII\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.findName\\:\\(\\[IIII\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.addName\\:\\(\\[III\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_loadMoreGuaranteed\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_finishString\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_finishAndReturnString\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_finishString2\\:\\(\\[CI\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipString\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_handleUnexpectedValue\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_handleApos\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_handleInvalidNumberStart\\:\\(IZ\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_matchTrue\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_matchFalse\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_matchNull\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_matchToken\\:\\(Ljava\\/lang\\/String\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_matchToken2\\:\\(Ljava\\/lang\\/String\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_checkMatchEnd\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipWS\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipWS2\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipWSOrEnd\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipWSOrEnd2\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipColon\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipColon2\\:\\(Z\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipComment\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipCComment\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipYAMLComment\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipLine\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_decodeEscaped\\:\\(\\)C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_decodeCharForError\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_decodeUtf8\\_2\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_decodeUtf8\\_3\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_decodeUtf8\\_3fast\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_decodeUtf8\\_4\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipUtf8\\_2\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipUtf8\\_3\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipUtf8\\_4\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipCR\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.nextByte\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_reportInvalidToken\\:\\(Ljava\\/lang\\/String\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_reportInvalidToken\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_reportInvalidToken\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_reportInvalidChar\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_reportInvalidInitial\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_reportInvalidOther\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_reportInvalidOther\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_decodeBase64\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_closeScope\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_closeArrayScope\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_closeObjectScope\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeFieldName\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeFieldName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeFieldName\\:\\(Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeFieldName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeStartArray\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeEndArray\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeStartObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeStartObject\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeEndObject\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writePPFieldName\\:\\(Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writePPFieldName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeString\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeString\\:\\(Ljava\\/io\\/Reader\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeString\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeString\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeRawUTF8String\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeUTF8String\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeRaw\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeRaw\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeRaw\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeRaw\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeRaw\\:\\(C\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeRawLong\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/InputStream\\;I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeNumber\\:\\(S\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeQuotedShort\\:\\(S\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeNumber\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeQuotedInt\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeNumber\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeQuotedLong\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeNumber\\:\\(Ljava\\/math\\/BigInteger\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeNumber\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeNumber\\:\\(F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeNumber\\:\\(Ljava\\/math\\/BigDecimal\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeNumber\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeQuotedRaw\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeBoolean\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeNull\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_verifyValueWrite\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeString\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeString2\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeLongString\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeSegment\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeString\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeStringASCII\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeSegmentASCII\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeStringASCII\\:\\(\\[CIII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeStringCustom\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeSegmentCustom\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeStringCustom\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/InputStream\\;\\[BI\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/InputStream\\;\\[B\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_readMore\\:\\(Ljava\\/io\\/InputStream\\;\\[BIII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeNull\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_prependOrWriteCharacterEscape\\:\\(CI\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_prependOrWriteCharacterEscape\\:\\(\\[CIICI\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_appendCharacterEscape\\:\\(CI\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_flushBuffer\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.feedInput\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.releaseBuffered\\:\\(Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_decodeEscaped\\:\\(\\)C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.nextToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishTokenWithEOF\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_startDocument\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishBOM\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_startFieldName\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_startFieldNameAfterComma\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_startValue\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_startValueExpectComma\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_startValueExpectColon\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_startValueAfterComma\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_startUnexpectedValue\\:\\(ZI\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_skipWS\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_startSlashComment\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishHashComment\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishCppComment\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishCComment\\:\\(IZ\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_startAfterComment\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_startFalseToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_startTrueToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_startNullToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishKeywordToken\\:\\(Ljava\\/lang\\/String\\;ILcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishKeywordTokenWithEOF\\:\\(Ljava\\/lang\\/String\\;ILcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishNonStdToken\\:\\(II\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishNonStdTokenWithEOF\\:\\(II\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishErrorToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishErrorTokenWithEOF\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_reportErrorToken\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_startPositiveNumber\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_startNegativeNumber\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_startNumberLeadingZero\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishNumberMinus\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishNumberLeadingZeroes\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishNumberLeadingNegZeroes\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishNumberIntegralPart\\:\\(\\[CI\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_startFloat\\:\\(\\[CII\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishFloatFraction\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishFloatExponent\\:\\(ZI\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_fastParseName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_parseMediumName\\:\\(II\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_parseMediumName2\\:\\(III\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_parseEscapedName\\:\\(III\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_handleOddName\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishUnquotedName\\:\\(III\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishAposName\\:\\(III\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishFieldWithEscape\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_decodeSplitEscaped\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_startString\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishRegularString\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_startAposString\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishAposString\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_decodeSplitMultiByte\\:\\(IIZ\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_decodeSplitUTF8\\_3\\:\\(III\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_decodeSplitUTF8\\_4\\:\\(III\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_decodeCharEscape\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_decodeFastCharEscape\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_decodeUTF8\\_2\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_decodeUTF8\\_3\\:\\(III\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_decodeUTF8\\_4\\:\\(IIII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.releaseBuffered\\:\\(Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.\\_releaseBuffers\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.\\_closeInput\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.getText\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.getText\\:\\(Ljava\\/io\\/Writer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.getValueAsString\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.getValueAsString\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.getTextCharacters\\:\\(\\)\\[C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.getTextLength\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.getTextOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.getBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.readBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.getEmbeddedObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.\\_startArrayScope\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.\\_startObjectScope\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.\\_closeArrayScope\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.\\_closeObjectScope\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.\\_findName\\:\\(II\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.\\_findName\\:\\(III\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.\\_findName\\:\\(IIII\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.\\_addName\\:\\(\\[III\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.\\_eofAsNextToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.\\_fieldComplete\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.\\_valueComplete\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.\\_valueCompleteInt\\:\\(ILjava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.\\_valueNonStdNumberComplete\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.\\_reportInvalidChar\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.\\_reportInvalidInitial\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.\\_reportInvalidOther\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.\\_reportInvalidOther\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.DefaultIndenter\\.writeIndentation\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.DefaultPrettyPrinter\\$FixedSpaceIndenter\\.writeIndentation\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.DefaultPrettyPrinter\\$Indenter\\.writeIndentation\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.DefaultPrettyPrinter\\$NopIndenter\\.writeIndentation\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.DefaultPrettyPrinter\\.writeRootValueSeparator\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.DefaultPrettyPrinter\\.writeStartObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.DefaultPrettyPrinter\\.beforeObjectEntries\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.DefaultPrettyPrinter\\.writeObjectFieldValueSeparator\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.DefaultPrettyPrinter\\.writeObjectEntrySeparator\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.DefaultPrettyPrinter\\.writeEndObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.DefaultPrettyPrinter\\.writeStartArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.DefaultPrettyPrinter\\.beforeArrayValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.DefaultPrettyPrinter\\.writeArrayValueSeparator\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.DefaultPrettyPrinter\\.writeEndArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeStartArray\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeStartArray\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeEndArray\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeStartObject\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeStartObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeEndObject\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeFieldName\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeFieldName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeFieldId\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeArray\\:\\(\\[III\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeArray\\:\\(\\[JII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeArray\\:\\(\\[DII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeString\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeString\\:\\(Ljava\\/io\\/Reader\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeString\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeString\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeRawUTF8String\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeUTF8String\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeRaw\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeRaw\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeRaw\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeRaw\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeRaw\\:\\(C\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeRawValue\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeRawValue\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeRawValue\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/InputStream\\;I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeNumber\\:\\(S\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeNumber\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeNumber\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeNumber\\:\\(Ljava\\/math\\/BigInteger\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeNumber\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeNumber\\:\\(F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeNumber\\:\\(Ljava\\/math\\/BigDecimal\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.UnsupportedOperationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeNumber\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeBoolean\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeNull\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeOmittedField\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeObjectId\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeObjectRef\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeTypeId\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeEmbeddedObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeTree\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/TreeNode\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.copyCurrentEvent\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.copyCurrentStructure\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getCurrentName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.isNaN\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getText\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getTextCharacters\\:\\(\\)\\[C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getTextLength\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getTextOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.UnsupportedOperationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getText\\:\\(Ljava\\/io\\/Writer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getBigIntegerValue\\:\\(\\)Ljava\\/math\\/BigInteger\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getBooleanValue\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getByteValue\\:\\(\\)B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getShortValue\\:\\(\\)S"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getDecimalValue\\:\\(\\)Ljava\\/math\\/BigDecimal\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getDoubleValue\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getFloatValue\\:\\(\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getIntValue\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getLongValue\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getNumberType\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\$NumberType\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getNumberValue\\:\\(\\)Ljava\\/lang\\/Number\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getValueAsInt\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getValueAsInt\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getValueAsLong\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getValueAsLong\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getValueAsDouble\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getValueAsDouble\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getValueAsBoolean\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getValueAsBoolean\\:\\(Z\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getValueAsString\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getValueAsString\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getEmbeddedObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.readBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.nextToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.nextValue\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.finishToken\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.skipChildren\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getObjectId\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getTypeId\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserSequence\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserSequence\\.nextToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserSequence\\.skipChildren\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserSequence\\.switchAndReturnNext\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.MinimalPrettyPrinter\\.writeRootValueSeparator\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.MinimalPrettyPrinter\\.writeStartObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.MinimalPrettyPrinter\\.beforeObjectEntries\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.MinimalPrettyPrinter\\.writeObjectFieldValueSeparator\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.MinimalPrettyPrinter\\.writeObjectEntrySeparator\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.MinimalPrettyPrinter\\.writeEndObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.MinimalPrettyPrinter\\.writeStartArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.MinimalPrettyPrinter\\.beforeArrayValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.MinimalPrettyPrinter\\.writeArrayValueSeparator\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.MinimalPrettyPrinter\\.writeEndArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.TextBuffer\\.contentsAsDecimal\\:\\(\\)Ljava\\/math\\/BigDecimal\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.TextBuffer\\.contentsAsDouble\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.TextBuffer\\.contentsToWriter\\:\\(Ljava\\/io\\/Writer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.Gson\\$5\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/util\\/concurrent\\/atomic\\/AtomicLongArray\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.Gson\\$5\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/util\\/concurrent\\/atomic\\/AtomicLongArray\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.Gson\\$5\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.Gson\\$5\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.google.gson.JsonParseException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.JsonDeserializer\\.deserialize\\:\\(Lcom\\/google\\/gson\\/JsonElement\\;Ljava\\/lang\\/reflect\\/Type\\;Lcom\\/google\\/gson\\/JsonDeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.google.gson.JsonParseException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.JsonStreamParser\\.next\\:\\(\\)Lcom\\/google\\/gson\\/JsonElement\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.Gson\\$FutureTypeAdapter\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.Gson\\$FutureTypeAdapter\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.google.gson.JsonIOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.Gson\\.toJson\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Appendable\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.google.gson.JsonIOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.Gson\\.toJson\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;Ljava\\/lang\\/Appendable\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.google.gson.JsonIOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.Gson\\.toJson\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.google.gson.JsonIOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.Gson\\.toJson\\:\\(Lcom\\/google\\/gson\\/JsonElement\\;Ljava\\/lang\\/Appendable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.Gson\\.newJsonWriter\\:\\(Ljava\\/io\\/Writer\\;\\)Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;"
 }, 
 {
  "exceptions": [
   "com.google.gson.JsonIOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.Gson\\.toJson\\:\\(Lcom\\/google\\/gson\\/JsonElement\\;Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.google.gson.JsonSyntaxException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.Gson\\.fromJson\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.google.gson.JsonSyntaxException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.Gson\\.fromJson\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/reflect\\/Type\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.google.gson.JsonSyntaxException", 
   "com.google.gson.JsonIOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.Gson\\.fromJson\\:\\(Ljava\\/io\\/Reader\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.google.gson.JsonIOException", 
   "com.google.gson.JsonSyntaxException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.Gson\\.fromJson\\:\\(Ljava\\/io\\/Reader\\;Ljava\\/lang\\/reflect\\/Type\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.google.gson.JsonIOException", 
   "com.google.gson.JsonSyntaxException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.Gson\\.fromJson\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;Ljava\\/lang\\/reflect\\/Type\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.google.gson.JsonSyntaxException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.Gson\\.fromJson\\:\\(Lcom\\/google\\/gson\\/JsonElement\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.google.gson.JsonSyntaxException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.Gson\\.fromJson\\:\\(Lcom\\/google\\/gson\\/JsonElement\\;Ljava\\/lang\\/reflect\\/Type\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.Gson\\$3\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Number\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.Gson\\$3\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Number\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.Gson\\$3\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.Gson\\$3\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.Gson\\$1\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Double\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.Gson\\$1\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Number\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.Gson\\$1\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.Gson\\$1\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.TypeAdapter\\$1\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.TypeAdapter\\$1\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.Gson\\$4\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/util\\/concurrent\\/atomic\\/AtomicLong\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.Gson\\$4\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/util\\/concurrent\\/atomic\\/AtomicLong\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.Gson\\$4\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.Gson\\$4\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonReader\\$1\\.promoteNameToValue\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonReader\\.beginArray\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonReader\\.endArray\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonReader\\.beginObject\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonReader\\.endObject\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonReader\\.hasNext\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonReader\\.peek\\:\\(\\)Lcom\\/google\\/gson\\/stream\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonReader\\.doPeek\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonReader\\.peekKeyword\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonReader\\.peekNumber\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonReader\\.isLiteral\\:\\(C\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonReader\\.nextName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonReader\\.nextString\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonReader\\.nextBoolean\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonReader\\.nextNull\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonReader\\.nextDouble\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonReader\\.nextLong\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonReader\\.nextQuotedValue\\:\\(C\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonReader\\.nextUnquotedValue\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonReader\\.skipQuotedValue\\:\\(C\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonReader\\.skipUnquotedValue\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonReader\\.nextInt\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonReader\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonReader\\.skipValue\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonReader\\.fillBuffer\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonReader\\.nextNonWhitespace\\:\\(Z\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonReader\\.checkLenient\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonReader\\.skipToEndOfLine\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonReader\\.skipTo\\:\\(Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonReader\\.readEscapeCharacter\\:\\(\\)C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonReader\\.syntaxError\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/IOException\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonReader\\.consumeNonExecutePrefix\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonWriter\\.beginArray\\:\\(\\)Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonWriter\\.endArray\\:\\(\\)Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonWriter\\.beginObject\\:\\(\\)Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonWriter\\.endObject\\:\\(\\)Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonWriter\\.open\\:\\(ILjava\\/lang\\/String\\;\\)Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonWriter\\.close\\:\\(IILjava\\/lang\\/String\\;\\)Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonWriter\\.name\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonWriter\\.writeDeferredName\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonWriter\\.value\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonWriter\\.jsonValue\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonWriter\\.nullValue\\:\\(\\)Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonWriter\\.value\\:\\(Z\\)Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonWriter\\.value\\:\\(Ljava\\/lang\\/Boolean\\;\\)Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonWriter\\.value\\:\\(D\\)Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonWriter\\.value\\:\\(J\\)Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonWriter\\.value\\:\\(Ljava\\/lang\\/Number\\;\\)Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonWriter\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonWriter\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonWriter\\.string\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonWriter\\.newline\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonWriter\\.beforeName\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.stream\\.JsonWriter\\.beforeValue\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.TypeAdapter\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.TypeAdapter\\.toJson\\:\\(Ljava\\/io\\/Writer\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.TypeAdapter\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.TypeAdapter\\.fromJson\\:\\(Ljava\\/io\\/Reader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.TypeAdapter\\.fromJson\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.Excluder\\$1\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.Excluder\\$1\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.ObjectStreamException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.LazilyParsedNumber\\.writeReplace\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.ObjectStreamException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.LinkedHashTreeMap\\.writeReplace\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.JsonReaderInternalAccess\\.promoteNameToValue\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.google.gson.JsonParseException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.Streams\\.parse\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Lcom\\/google\\/gson\\/JsonElement\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.Streams\\.write\\:\\(Lcom\\/google\\/gson\\/JsonElement\\;Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.UnsafeAllocator\\.newInstance\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.ObjectStreamException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.LinkedTreeMap\\.writeReplace\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.UnsafeAllocator\\$2\\.newInstance\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TreeTypeAdapter\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TreeTypeAdapter\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$8\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/util\\/concurrent\\/atomic\\/AtomicInteger\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$8\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/util\\/concurrent\\/atomic\\/AtomicInteger\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$8\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$8\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.ObjectTypeAdapter\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.ObjectTypeAdapter\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$13\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Number\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$13\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Number\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$13\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$13\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$35\\$1\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$35\\$1\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$11\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Number\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$11\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Number\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$11\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$11\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.ReflectiveTypeAdapterFactory\\$1\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.ReflectiveTypeAdapterFactory\\$1\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.ReflectiveTypeAdapterFactory\\$1\\.writeField\\:\\(Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.JsonTreeReader\\.beginArray\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.JsonTreeReader\\.endArray\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.JsonTreeReader\\.beginObject\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.JsonTreeReader\\.endObject\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.JsonTreeReader\\.hasNext\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.JsonTreeReader\\.peek\\:\\(\\)Lcom\\/google\\/gson\\/stream\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.JsonTreeReader\\.expect\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonToken\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.JsonTreeReader\\.nextName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.JsonTreeReader\\.nextString\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.JsonTreeReader\\.nextBoolean\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.JsonTreeReader\\.nextNull\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.JsonTreeReader\\.nextDouble\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.JsonTreeReader\\.nextLong\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.JsonTreeReader\\.nextInt\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.JsonTreeReader\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.JsonTreeReader\\.skipValue\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.JsonTreeReader\\.promoteNameToValue\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapterRuntimeTypeWrapper\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapterRuntimeTypeWrapper\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.DateTypeAdapter\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.DateTypeAdapter\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/util\\/Date\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.DateTypeAdapter\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.DateTypeAdapter\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$28\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/util\\/Locale\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$28\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/util\\/Locale\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$28\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$28\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$15\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Character\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$15\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Character\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$15\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$15\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$17\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/math\\/BigDecimal\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$17\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/math\\/BigDecimal\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$17\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$17\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.util\\.ISO8601Utils\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/text\\/ParsePosition\\;\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.util\\.ISO8601Utils\\.parseInt\\:\\(Ljava\\/lang\\/String\\;II\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$EnumTypeAdapter\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Enum\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$EnumTypeAdapter\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Enum\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$EnumTypeAdapter\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$EnumTypeAdapter\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.ReflectiveTypeAdapterFactory\\$Adapter\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.ReflectiveTypeAdapterFactory\\$Adapter\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TimeTypeAdapter\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/sql\\/Time\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TimeTypeAdapter\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/sql\\/Time\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TimeTypeAdapter\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TimeTypeAdapter\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$10\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/util\\/concurrent\\/atomic\\/AtomicIntegerArray\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$10\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/util\\/concurrent\\/atomic\\/AtomicIntegerArray\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$10\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$10\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.google.gson.JsonParseException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TreeTypeAdapter\\$GsonContextImpl\\.deserialize\\:\\(Lcom\\/google\\/gson\\/JsonElement\\;Ljava\\/lang\\/reflect\\/Type\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.JsonTreeReader\\$1\\.read\\:\\(\\[CII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.JsonTreeReader\\$1\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$9\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/util\\/concurrent\\/atomic\\/AtomicBoolean\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$9\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/util\\/concurrent\\/atomic\\/AtomicBoolean\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$9\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$9\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.ReflectiveTypeAdapterFactory\\$BoundField\\.writeField\\:\\(Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.ReflectiveTypeAdapterFactory\\$BoundField\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.ReflectiveTypeAdapterFactory\\$BoundField\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$26\\$1\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/sql\\/Timestamp\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$26\\$1\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/sql\\/Timestamp\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$26\\$1\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$26\\$1\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$12\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Number\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$12\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Number\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$12\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$12\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$16\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$16\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$16\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$16\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$14\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Number\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$14\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Number\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$14\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$14\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$29\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Lcom\\/google\\/gson\\/JsonElement\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$29\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Lcom\\/google\\/gson\\/JsonElement\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$29\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$29\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$25\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/util\\/Currency\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$25\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/util\\/Currency\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$25\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$25\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$18\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/math\\/BigInteger\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$18\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/math\\/BigInteger\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$18\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$18\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$3\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Boolean\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$3\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Boolean\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$3\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$3\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$1\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$1\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$1\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$1\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.MapTypeAdapterFactory\\$Adapter\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.MapTypeAdapterFactory\\$Adapter\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.MapTypeAdapterFactory\\$Adapter\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.MapTypeAdapterFactory\\$Adapter\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$27\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/util\\/Calendar\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$27\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/util\\/Calendar\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$27\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$27\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$23\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/net\\/InetAddress\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$23\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/net\\/InetAddress\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$23\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$23\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$5\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Number\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$5\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Number\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$5\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$5\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$7\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Number\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$7\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Number\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$7\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$7\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$21\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/net\\/URL\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$21\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/net\\/URL\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$21\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$21\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.SqlDateTypeAdapter\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/sql\\/Date\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.SqlDateTypeAdapter\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/sql\\/Date\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.SqlDateTypeAdapter\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.SqlDateTypeAdapter\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.JsonTreeWriter\\.beginArray\\:\\(\\)Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.JsonTreeWriter\\.endArray\\:\\(\\)Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.JsonTreeWriter\\.beginObject\\:\\(\\)Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.JsonTreeWriter\\.endObject\\:\\(\\)Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.JsonTreeWriter\\.name\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.JsonTreeWriter\\.value\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.JsonTreeWriter\\.nullValue\\:\\(\\)Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.JsonTreeWriter\\.value\\:\\(Z\\)Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.JsonTreeWriter\\.value\\:\\(Ljava\\/lang\\/Boolean\\;\\)Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.JsonTreeWriter\\.value\\:\\(D\\)Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.JsonTreeWriter\\.value\\:\\(J\\)Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.JsonTreeWriter\\.value\\:\\(Ljava\\/lang\\/Number\\;\\)Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.JsonTreeWriter\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.JsonTreeWriter\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$19\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/StringBuilder\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$19\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/StringBuilder\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$19\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$19\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.CollectionTypeAdapterFactory\\$Adapter\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.CollectionTypeAdapterFactory\\$Adapter\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/util\\/Collection\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.CollectionTypeAdapterFactory\\$Adapter\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.CollectionTypeAdapterFactory\\$Adapter\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$24\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/util\\/UUID\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$24\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/util\\/UUID\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$24\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$24\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.JsonTreeWriter\\$1\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.JsonTreeWriter\\$1\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$2\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/util\\/BitSet\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$2\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/util\\/BitSet\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$2\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$2\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$6\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Number\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$6\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Number\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$6\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$6\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$20\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/StringBuffer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$20\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/StringBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$20\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$20\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$22\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/net\\/URI\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$22\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/net\\/URI\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$22\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$22\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$4\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Boolean\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$4\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Boolean\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$4\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.TypeAdapters\\$4\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.ArrayTypeAdapter\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.bind\\.ArrayTypeAdapter\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.UnsafeAllocator\\$3\\.newInstance\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.Excluder\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.Streams\\$AppendableWriter\\.write\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.Streams\\$AppendableWriter\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.gson\\.internal\\.UnsafeAllocator\\$1\\.newInstance\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.Gson\\$2\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Float\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.Gson\\$2\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Number\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.Gson\\$2\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.Gson\\$2\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.DefaultDateTypeAdapter\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/util\\/Date\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.DefaultDateTypeAdapter\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.DefaultDateTypeAdapter\\.read\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.DefaultDateTypeAdapter\\.write\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonWriter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.google.gson.JsonSyntaxException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.JsonParser\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/google\\/gson\\/JsonElement\\;"
 }, 
 {
  "exceptions": [
   "com.google.gson.JsonIOException", 
   "com.google.gson.JsonSyntaxException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.JsonParser\\.parse\\:\\(Ljava\\/io\\/Reader\\;\\)Lcom\\/google\\/gson\\/JsonElement\\;"
 }, 
 {
  "exceptions": [
   "com.google.gson.JsonIOException", 
   "com.google.gson.JsonSyntaxException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.JsonParser\\.parse\\:\\(Lcom\\/google\\/gson\\/stream\\/JsonReader\\;\\)Lcom\\/google\\/gson\\/JsonElement\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.FieldAttributes\\.get\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.google.gson.JsonParseException"
  ], 
  "methodRegex": "com\\.google\\.gson\\.JsonDeserializationContext\\.deserialize\\:\\(Lcom\\/google\\/gson\\/JsonElement\\;Ljava\\/lang\\/reflect\\/Type\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.util\\.TempFileManager\\.create\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/openjdk\\/jmh\\/util\\/TempFile\\;"
 }, 
 {
  "exceptions": [
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.util\\.UnCloseablePrintStream\\.\\<init\\>\\:\\(Ljava\\/io\\/OutputStream\\;Ljava\\/nio\\/charset\\/Charset\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.util\\.FileUtils\\.weakTempFile\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/openjdk\\/jmh\\/util\\/TempFile\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.util\\.FileUtils\\.tempFile\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.util\\.FileUtils\\.extractFromResource\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.util\\.FileUtils\\.createTempFileWithLines\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Iterable\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.util\\.FileUtils\\.tail\\:\\(Ljava\\/io\\/File\\;I\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.util\\.FileUtils\\.readAllLines\\:\\(Ljava\\/io\\/Reader\\;\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.util\\.FileUtils\\.readAllLines\\:\\(Ljava\\/io\\/File\\;\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.util\\.FileUtils\\.readAllLines\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.util\\.FileUtils\\.writeLines\\:\\(Ljava\\/io\\/File\\;Ljava\\/util\\/Collection\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.util\\.FileUtils\\.appendLines\\:\\(Ljava\\/io\\/File\\;Ljava\\/util\\/Collection\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.util\\.FileUtils\\.copy\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.util\\.FileUtils\\.touch\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.util\\.NullOutputStream\\.write\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.util\\.NullOutputStream\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.util\\.NullOutputStream\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.runner\\.VersionMain\\.main\\:\\(\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.runner\\.OutputFormatAdapter\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.runner\\.OutputFormatAdapter\\.write\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.runner\\.BenchmarkHandler\\$ExecutorType\\$3\\.createExecutor\\:\\(ILjava\\/lang\\/String\\;\\)Ljava\\/util\\/concurrent\\/ExecutorService\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.runner\\.PrintPropertiesMain\\.main\\:\\(\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.runner\\.BenchmarkHandler\\$ExecutorType\\.createExecutor\\:\\(ILjava\\/lang\\/String\\;\\)Ljava\\/util\\/concurrent\\/ExecutorService\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.runner\\.options\\.TimeValue\\.sleep\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.openjdk.jmh.runner.options.CommandLineOptionException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.runner\\.options\\.CommandLineOptions\\.\\<init\\>\\:\\(\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.runner\\.options\\.CommandLineOptions\\.showHelp\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.runner\\.InfraControl\\.preTearDown\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.runner\\.BenchmarkHandler\\$ExecutorType\\$5\\.createExecutor\\:\\(ILjava\\/lang\\/String\\;\\)Ljava\\/util\\/concurrent\\/ExecutorService\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.runner\\.ForkedRunner\\.run\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.runner\\.link\\.BinaryLinkServer\\$Handler\\.\\<init\\>\\:\\(Lorg\\/openjdk\\/jmh\\/runner\\/link\\/BinaryLinkServer\\;Ljava\\/net\\/Socket\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.runner\\.link\\.BinaryLinkServer\\$Handler\\.handleHandshake\\:\\(Lorg\\/openjdk\\/jmh\\/runner\\/link\\/HandshakeInitFrame\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.runner\\.link\\.BinaryLinkServer\\$Handler\\.handleInfra\\:\\(Lorg\\/openjdk\\/jmh\\/runner\\/link\\/InfraFrame\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.runner\\.link\\.BinaryLinkServer\\$Handler\\.handleOutputFormat\\:\\(Lorg\\/openjdk\\/jmh\\/runner\\/link\\/OutputFormatFrame\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.runner\\.link\\.BinaryLinkServer\\.\\<init\\>\\:\\(Lorg\\/openjdk\\/jmh\\/runner\\/options\\/Options\\;Lorg\\/openjdk\\/jmh\\/runner\\/format\\/OutputFormat\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.runner\\.link\\.BinaryLinkServer\\$Acceptor\\.\\<init\\>\\:\\(Lorg\\/openjdk\\/jmh\\/runner\\/link\\/BinaryLinkServer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.runner\\.link\\.BinaryLinkClient\\$1\\.invoke\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.runner\\.link\\.BinaryLinkClient\\$ForwardingPrintStream\\$1\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.runner\\.link\\.BinaryLinkClient\\$ForwardingPrintStream\\$1\\.write\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.runner\\.link\\.BinaryLinkClient\\$ForwardingPrintStream\\$1\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.runner\\.link\\.BinaryLinkClient\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.runner\\.link\\.BinaryLinkClient\\.pushFrame\\:\\(Ljava\\/io\\/Serializable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.runner\\.link\\.BinaryLinkClient\\.readFrame\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.runner\\.link\\.BinaryLinkClient\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.runner\\.link\\.BinaryLinkClient\\.handshake\\:\\(\\)Lorg\\/openjdk\\/jmh\\/runner\\/options\\/Options\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.runner\\.link\\.BinaryLinkClient\\.requestPlan\\:\\(\\)Lorg\\/openjdk\\/jmh\\/runner\\/ActionPlan\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.runner\\.link\\.BinaryLinkClient\\.pushResults\\:\\(Lorg\\/openjdk\\/jmh\\/results\\/IterationResult\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.runner\\.link\\.BinaryLinkClient\\.pushException\\:\\(Lorg\\/openjdk\\/jmh\\/runner\\/BenchmarkException\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.runner\\.link\\.BinaryLinkClient\\.pushResultMetadata\\:\\(Lorg\\/openjdk\\/jmh\\/results\\/BenchmarkResultMetaData\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.runner\\.link\\.BinaryLinkClient\\.access\\$000\\:\\(Lorg\\/openjdk\\/jmh\\/runner\\/link\\/BinaryLinkClient\\;Ljava\\/io\\/Serializable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.runner\\.BenchmarkHandler\\$BenchmarkTask\\.call\\:\\(\\)Lorg\\/openjdk\\/jmh\\/results\\/BenchmarkTaskResult\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.runner\\.BenchmarkHandler\\$BenchmarkTask\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.runner\\.BenchmarkHandler\\$ExecutorType\\$4\\.createExecutor\\:\\(ILjava\\/lang\\/String\\;\\)Ljava\\/util\\/concurrent\\/ExecutorService\\;"
 }, 
 {
  "exceptions": [
   "org.openjdk.jmh.runner.RunnerException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.runner\\.Runner\\.runSingle\\:\\(\\)Lorg\\/openjdk\\/jmh\\/results\\/RunResult\\;"
 }, 
 {
  "exceptions": [
   "org.openjdk.jmh.runner.RunnerException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.runner\\.Runner\\.run\\:\\(\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "org.openjdk.jmh.runner.RunnerException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.runner\\.Runner\\.internalRun\\:\\(\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "org.openjdk.jmh.runner.RunnerException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.runner\\.Runner\\.explodeAllParams\\:\\(Lorg\\/openjdk\\/jmh\\/runner\\/BenchmarkListEntry\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.openjdk.jmh.runner.RunnerException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.runner\\.Runner\\.runBenchmarks\\:\\(Ljava\\/util\\/SortedSet\\;\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.runner\\.format\\.OutputFormat\\.write\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.runner\\.format\\.AbstractOutputFormat\\.write\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.runner\\.BenchmarkList\\.readBenchmarkList\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.runner\\.BenchmarkList\\.writeBenchmarkList\\:\\(Ljava\\/io\\/OutputStream\\;Ljava\\/util\\/Collection\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.runner\\.ForkedMain\\.main\\:\\(\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.openjdk.jmh.profile.ProfilerException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.profile\\.HotspotRuntimeProfiler\\.\\<init\\>\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.openjdk.jmh.profile.ProfilerException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.profile\\.GCProfiler\\.\\<init\\>\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.openjdk.jmh.profile.ProfilerException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.profile\\.AbstractHotspotProfiler\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.openjdk.jmh.profile.ProfilerException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.profile\\.HotspotCompilationProfiler\\.\\<init\\>\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.openjdk.jmh.profile.ProfilerException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.profile\\.HotspotClassloadingProfiler\\.\\<init\\>\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.openjdk.jmh.profile.ProfilerException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.profile\\.HotspotThreadProfiler\\.\\<init\\>\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.openjdk.jmh.profile.ProfilerException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.profile\\.PausesProfiler\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.openjdk.jmh.profile.ProfilerException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.profile\\.CompilerProfiler\\.\\<init\\>\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.openjdk.jmh.profile.ProfilerException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.profile\\.AbstractPerfAsmProfiler\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.openjdk.jmh.profile.ProfilerException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.profile\\.LinuxPerfNormProfiler\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.openjdk.jmh.profile.ProfilerException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.profile\\.LinuxPerfAsmProfiler\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.openjdk.jmh.profile.ProfilerException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.profile\\.DTraceAsmProfiler\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.openjdk.jmh.profile.ProfilerException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.profile\\.StackProfiler\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.openjdk.jmh.profile.ProfilerException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.profile\\.ProfilerFactory\\.getProfilerOrException\\:\\(Lorg\\/openjdk\\/jmh\\/runner\\/options\\/ProfilerConfig\\;\\)Lorg\\/openjdk\\/jmh\\/profile\\/Profiler\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.profile\\.ProfilerFactory\\.getProfiler\\:\\(Lorg\\/openjdk\\/jmh\\/runner\\/options\\/ProfilerConfig\\;\\)Lorg\\/openjdk\\/jmh\\/profile\\/Profiler\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InstantiationException", 
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.profile\\.ProfilerFactory\\.instantiate\\:\\(Lorg\\/openjdk\\/jmh\\/runner\\/options\\/ProfilerConfig\\;Ljava\\/lang\\/Class\\;\\)Lorg\\/openjdk\\/jmh\\/profile\\/Profiler\\;"
 }, 
 {
  "exceptions": [
   "java.lang.UnsupportedOperationException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.profile\\.AbstractHotspotProfiler\\$HotspotCounter\\.\\<init\\>\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.openjdk.jmh.profile.ProfilerException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.profile\\.WinPerfAsmProfiler\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.openjdk.jmh.profile.ProfilerException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.profile\\.LinuxPerfProfiler\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.openjdk.jmh.profile.ProfilerException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.profile\\.HotspotMemoryProfiler\\.\\<init\\>\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.openjdk.jmh.profile.ProfilerException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.profile\\.ProfilerUtils\\.parseInitLine\\:\\(Ljava\\/lang\\/String\\;Ljoptsimple\\/OptionParser\\;\\)Ljoptsimple\\/OptionSet\\;"
 }, 
 {
  "exceptions": [
   "org.openjdk.jmh.runner.RunnerException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.Main\\.main\\:\\(\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.generators\\.core\\.BenchmarkGenerator\\.generateClass\\:\\(Lorg\\/openjdk\\/jmh\\/generators\\/core\\/GeneratorDestination\\;Lorg\\/openjdk\\/jmh\\/generators\\/core\\/ClassInfo\\;Lorg\\/openjdk\\/jmh\\/generators\\/core\\/BenchmarkInfo\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.generators\\.core\\.GeneratorDestination\\.newResource\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.generators\\.core\\.GeneratorDestination\\.getResource\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.generators\\.core\\.GeneratorDestination\\.newClass\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/Writer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.generators\\.core\\.FileSystemDestination\\.newResource\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.generators\\.core\\.FileSystemDestination\\.getResource\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.generators\\.core\\.FileSystemDestination\\.newClass\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/Writer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.generators\\.core\\.StateObjectHandler\\.writeStateOverrides\\:\\(Lorg\\/openjdk\\/jmh\\/generators\\/core\\/BenchmarkGeneratorSession\\;Lorg\\/openjdk\\/jmh\\/generators\\/core\\/GeneratorDestination\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "joptsimple\\.OptionParser\\.printHelpOn\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "joptsimple\\.OptionParser\\.printHelpOn\\:\\(Ljava\\/io\\/Writer\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optimization\\.direct\\.CMAESOptimizer\\$PopulationSize\\.\\<init\\>\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optimization\\.direct\\.CMAESOptimizer\\$Sigma\\.\\<init\\>\\:\\(\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optimization\\.direct\\.BaseAbstractMultivariateVectorOptimizer\\.optimize\\:\\(ILorg\\/apache\\/commons\\/math3\\/analysis\\/MultivariateVectorFunction\\;\\[Lorg\\/apache\\/commons\\/math3\\/optimization\\/OptimizationData\\;\\)Lorg\\/apache\\/commons\\/math3\\/optimization\\/PointVectorValuePair\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optimization\\.direct\\.BaseAbstractMultivariateVectorOptimizer\\.optimizeInternal\\:\\(ILorg\\/apache\\/commons\\/math3\\/analysis\\/MultivariateVectorFunction\\;\\[Lorg\\/apache\\/commons\\/math3\\/optimization\\/OptimizationData\\;\\)Lorg\\/apache\\/commons\\/math3\\/optimization\\/PointVectorValuePair\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optimization\\.direct\\.BaseAbstractMultivariateOptimizer\\.optimizeInternal\\:\\(ILorg\\/apache\\/commons\\/math3\\/analysis\\/MultivariateFunction\\;Lorg\\/apache\\/commons\\/math3\\/optimization\\/GoalType\\;\\[Lorg\\/apache\\/commons\\/math3\\/optimization\\/OptimizationData\\;\\)Lorg\\/apache\\/commons\\/math3\\/optimization\\/PointValuePair\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optimization\\.fitting\\.GaussianFitter\\$ParameterGuesser\\.interpolateXAtY\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/optimization\\/fitting\\/WeightedObservedPoint\\;IID\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optimization\\.fitting\\.GaussianFitter\\$ParameterGuesser\\.getInterpolationPointsForY\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/optimization\\/fitting\\/WeightedObservedPoint\\;IID\\)\\[Lorg\\/apache\\/commons\\/math3\\/optimization\\/fitting\\/WeightedObservedPoint\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optimization\\.linear\\.LinearOptimizer\\.optimize\\:\\(Lorg\\/apache\\/commons\\/math3\\/optimization\\/linear\\/LinearObjectiveFunction\\;Ljava\\/util\\/Collection\\;Lorg\\/apache\\/commons\\/math3\\/optimization\\/GoalType\\;Z\\)Lorg\\/apache\\/commons\\/math3\\/optimization\\/PointValuePair\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optimization\\.linear\\.LinearObjectiveFunction\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optimization\\.linear\\.LinearObjectiveFunction\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optimization\\.linear\\.SimplexTableau\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optimization\\.linear\\.SimplexTableau\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException", 
   "org.apache.commons.math3.optimization.linear.UnboundedSolutionException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optimization\\.linear\\.SimplexSolver\\.doIteration\\:\\(Lorg\\/apache\\/commons\\/math3\\/optimization\\/linear\\/SimplexTableau\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException", 
   "org.apache.commons.math3.optimization.linear.UnboundedSolutionException", 
   "org.apache.commons.math3.optimization.linear.NoFeasibleSolutionException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optimization\\.linear\\.SimplexSolver\\.solvePhase1\\:\\(Lorg\\/apache\\/commons\\/math3\\/optimization\\/linear\\/SimplexTableau\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException", 
   "org.apache.commons.math3.optimization.linear.UnboundedSolutionException", 
   "org.apache.commons.math3.optimization.linear.NoFeasibleSolutionException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optimization\\.linear\\.SimplexSolver\\.doOptimize\\:\\(\\)Lorg\\/apache\\/commons\\/math3\\/optimization\\/PointValuePair\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optimization\\.linear\\.AbstractLinearOptimizer\\.incrementIterationsCounter\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optimization\\.linear\\.AbstractLinearOptimizer\\.optimize\\:\\(Lorg\\/apache\\/commons\\/math3\\/optimization\\/linear\\/LinearObjectiveFunction\\;Ljava\\/util\\/Collection\\;Lorg\\/apache\\/commons\\/math3\\/optimization\\/GoalType\\;Z\\)Lorg\\/apache\\/commons\\/math3\\/optimization\\/PointValuePair\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optimization\\.linear\\.AbstractLinearOptimizer\\.doOptimize\\:\\(\\)Lorg\\/apache\\/commons\\/math3\\/optimization\\/PointValuePair\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optimization\\.linear\\.LinearConstraint\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optimization\\.linear\\.LinearConstraint\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optimization\\.general\\.AbstractDifferentiableOptimizer\\.optimizeInternal\\:\\(ILorg\\/apache\\/commons\\/math3\\/analysis\\/MultivariateFunction\\;Lorg\\/apache\\/commons\\/math3\\/optimization\\/GoalType\\;\\[Lorg\\/apache\\/commons\\/math3\\/optimization\\/OptimizationData\\;\\)Lorg\\/apache\\/commons\\/math3\\/optimization\\/PointValuePair\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.ConvergenceException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optimization\\.general\\.LevenbergMarquardtOptimizer\\.qrDecomposition\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.FirstOrderDifferentialEquations\\.computeDerivatives\\:\\(D\\[D\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.ode.events.EventState$LocalMaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.events\\.EventState\\$1\\.value\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.events\\.EventState\\.reinitializeBegin\\:\\(Lorg\\/apache\\/commons\\/math3\\/ode\\/sampling\\/StepInterpolator\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException", 
   "org.apache.commons.math3.exception.NoBracketingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.events\\.EventState\\.evaluateStep\\:\\(Lorg\\/apache\\/commons\\/math3\\/ode\\/sampling\\/StepInterpolator\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.MultistepIntegrator\\$NordsieckInitializer\\.handleStep\\:\\(Lorg\\/apache\\/commons\\/math3\\/ode\\/sampling\\/StepInterpolator\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.EquationsMapper\\.extractEquationData\\:\\(\\[D\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.EquationsMapper\\.insertEquationData\\:\\(\\[D\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.sampling\\.StepInterpolator\\.getInterpolatedState\\:\\(\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.sampling\\.StepInterpolator\\.getInterpolatedDerivatives\\:\\(\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.sampling\\.StepInterpolator\\.getInterpolatedSecondaryState\\:\\(I\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.sampling\\.StepInterpolator\\.getInterpolatedSecondaryDerivatives\\:\\(I\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.sampling\\.StepInterpolator\\.copy\\:\\(\\)Lorg\\/apache\\/commons\\/math3\\/ode\\/sampling\\/StepInterpolator\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.sampling\\.AbstractStepInterpolator\\.copy\\:\\(\\)Lorg\\/apache\\/commons\\/math3\\/ode\\/sampling\\/StepInterpolator\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.sampling\\.AbstractStepInterpolator\\.computeInterpolatedStateAndDerivatives\\:\\(DD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.sampling\\.AbstractStepInterpolator\\.evaluateCompleteInterpolatedState\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.sampling\\.AbstractStepInterpolator\\.getInterpolatedState\\:\\(\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.sampling\\.AbstractStepInterpolator\\.getInterpolatedDerivatives\\:\\(\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.sampling\\.AbstractStepInterpolator\\.getInterpolatedSecondaryState\\:\\(I\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.sampling\\.AbstractStepInterpolator\\.getInterpolatedSecondaryDerivatives\\:\\(I\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.sampling\\.AbstractStepInterpolator\\.finalizeStep\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.sampling\\.AbstractStepInterpolator\\.doFinalize\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.sampling\\.AbstractStepInterpolator\\.writeExternal\\:\\(Ljava\\/io\\/ObjectOutput\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.sampling\\.AbstractStepInterpolator\\.readExternal\\:\\(Ljava\\/io\\/ObjectInput\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.sampling\\.AbstractStepInterpolator\\.writeBaseExternal\\:\\(Ljava\\/io\\/ObjectOutput\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.sampling\\.AbstractStepInterpolator\\.readBaseExternal\\:\\(Ljava\\/io\\/ObjectInput\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.sampling\\.StepNormalizer\\.handleStep\\:\\(Lorg\\/apache\\/commons\\/math3\\/ode\\/sampling\\/StepInterpolator\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.sampling\\.StepNormalizer\\.storeStep\\:\\(Lorg\\/apache\\/commons\\/math3\\/ode\\/sampling\\/StepInterpolator\\;D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.sampling\\.NordsieckStepInterpolator\\.getInterpolatedStateVariation\\:\\(\\)\\[D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.sampling\\.NordsieckStepInterpolator\\.writeExternal\\:\\(Ljava\\/io\\/ObjectOutput\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.sampling\\.NordsieckStepInterpolator\\.readExternal\\:\\(Ljava\\/io\\/ObjectInput\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.sampling\\.StepHandler\\.handleStep\\:\\(Lorg\\/apache\\/commons\\/math3\\/ode\\/sampling\\/StepInterpolator\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.ExpandableStatefulODE\\.computeDerivatives\\:\\(D\\[D\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.ExpandableStatefulODE\\.setPrimaryState\\:\\(\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.ExpandableStatefulODE\\.setSecondaryState\\:\\(I\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.ExpandableStatefulODE\\.setCompleteState\\:\\(\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.ExpandableStatefulODE\\.getCompleteState\\:\\(\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.MainStateJacobianProvider\\.computeMainStateJacobian\\:\\(D\\[D\\[D\\[\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalStateException", 
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.SecondOrderIntegrator\\.integrate\\:\\(Lorg\\/apache\\/commons\\/math3\\/ode\\/SecondOrderDifferentialEquations\\;D\\[D\\[DD\\[D\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.ParameterJacobianWrapper\\.computeParameterJacobian\\:\\(D\\[D\\[DLjava\\/lang\\/String\\;\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.SecondaryEquations\\.computeDerivatives\\:\\(D\\[D\\[D\\[D\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.MaxCountExceededException", 
   "org.apache.commons.math3.exception.NoBracketingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.AbstractIntegrator\\.integrate\\:\\(Lorg\\/apache\\/commons\\/math3\\/ode\\/FirstOrderDifferentialEquations\\;D\\[DD\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MaxCountExceededException", 
   "org.apache.commons.math3.exception.NoBracketingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.AbstractIntegrator\\.integrate\\:\\(Lorg\\/apache\\/commons\\/math3\\/ode\\/ExpandableStatefulODE\\;D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.AbstractIntegrator\\.computeDerivatives\\:\\(D\\[D\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NoBracketingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.AbstractIntegrator\\.acceptStep\\:\\(Lorg\\/apache\\/commons\\/math3\\/ode\\/sampling\\/AbstractStepInterpolator\\;\\[D\\[DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.AbstractIntegrator\\.sanityChecks\\:\\(Lorg\\/apache\\/commons\\/math3\\/ode\\/ExpandableStatefulODE\\;D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MaxCountExceededException", 
   "org.apache.commons.math3.ode.UnknownParameterException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.ParameterJacobianProvider\\.computeParameterJacobian\\:\\(D\\[D\\[DLjava\\/lang\\/String\\;\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.MaxCountExceededException", 
   "org.apache.commons.math3.exception.NoBracketingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.FirstOrderIntegrator\\.integrate\\:\\(Lorg\\/apache\\/commons\\/math3\\/ode\\/FirstOrderDifferentialEquations\\;D\\[DD\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.JacobianMatrices\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/ode\\/FirstOrderDifferentialEquations\\;\\[D\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.ode.JacobianMatrices$MismatchedEquations"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.JacobianMatrices\\.registerVariationalEquations\\:\\(Lorg\\/apache\\/commons\\/math3\\/ode\\/ExpandableStatefulODE\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.ode.UnknownParameterException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.JacobianMatrices\\.setParameterStep\\:\\(Ljava\\/lang\\/String\\;D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.JacobianMatrices\\.setInitialMainStateJacobian\\:\\(\\[\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.ode.UnknownParameterException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.JacobianMatrices\\.setInitialParameterJacobian\\:\\(Ljava\\/lang\\/String\\;\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.JacobianMatrices\\.checkDimension\\:\\(ILjava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.MultistepIntegrator\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;IIDDDD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.MaxCountExceededException", 
   "org.apache.commons.math3.exception.NoBracketingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.MultistepIntegrator\\.start\\:\\(D\\[DD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.JacobianMatrices\\$JacobiansSecondaryEquations\\.computeDerivatives\\:\\(D\\[D\\[D\\[D\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.ode.UnknownParameterException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.AbstractParameterizable\\.complainIfNotSupported\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.ode.UnknownParameterException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.ParameterizedODE\\.getParameter\\:\\(Ljava\\/lang\\/String\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.ode.UnknownParameterException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.ParameterizedODE\\.setParameter\\:\\(Ljava\\/lang\\/String\\;D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.ContinuousOutputModel\\.append\\:\\(Lorg\\/apache\\/commons\\/math3\\/ode\\/ContinuousOutputModel\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.ContinuousOutputModel\\.handleStep\\:\\(Lorg\\/apache\\/commons\\/math3\\/ode\\/sampling\\/StepInterpolator\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.ContinuousOutputModel\\.getInterpolatedState\\:\\(\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.ContinuousOutputModel\\.getInterpolatedSecondaryState\\:\\(I\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.JacobianMatrices\\$MainStateJacobianWrapper\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/ode\\/FirstOrderDifferentialEquations\\;\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.JacobianMatrices\\$MainStateJacobianWrapper\\.computeDerivatives\\:\\(D\\[D\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.JacobianMatrices\\$MainStateJacobianWrapper\\.computeMainStateJacobian\\:\\(D\\[D\\[D\\[\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.nonstiff\\.AdaptiveStepsizeIntegrator\\.sanityChecks\\:\\(Lorg\\/apache\\/commons\\/math3\\/ode\\/ExpandableStatefulODE\\;D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.nonstiff\\.AdaptiveStepsizeIntegrator\\.initializeStep\\:\\(ZI\\[DD\\[D\\[D\\[D\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.nonstiff\\.AdaptiveStepsizeIntegrator\\.filterStep\\:\\(DZZ\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MaxCountExceededException", 
   "org.apache.commons.math3.exception.NoBracketingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.nonstiff\\.AdaptiveStepsizeIntegrator\\.integrate\\:\\(Lorg\\/apache\\/commons\\/math3\\/ode\\/ExpandableStatefulODE\\;D\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.nonstiff\\.RungeKuttaStepInterpolator\\.writeExternal\\:\\(Ljava\\/io\\/ObjectOutput\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.nonstiff\\.RungeKuttaStepInterpolator\\.readExternal\\:\\(Ljava\\/io\\/ObjectInput\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.nonstiff\\.AdamsMoultonIntegrator\\.\\<init\\>\\:\\(IDDDD\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.nonstiff\\.AdamsMoultonIntegrator\\.\\<init\\>\\:\\(IDD\\[D\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MaxCountExceededException", 
   "org.apache.commons.math3.exception.NoBracketingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.nonstiff\\.AdamsMoultonIntegrator\\.integrate\\:\\(Lorg\\/apache\\/commons\\/math3\\/ode\\/ExpandableStatefulODE\\;D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.nonstiff\\.AdamsIntegrator\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;IIDDDD\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.nonstiff\\.AdamsIntegrator\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;IIDD\\[D\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MaxCountExceededException", 
   "org.apache.commons.math3.exception.NoBracketingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.nonstiff\\.AdamsIntegrator\\.integrate\\:\\(Lorg\\/apache\\/commons\\/math3\\/ode\\/ExpandableStatefulODE\\;D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.nonstiff\\.DormandPrince853StepInterpolator\\.computeInterpolatedStateAndDerivatives\\:\\(DD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.nonstiff\\.DormandPrince853StepInterpolator\\.doFinalize\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.nonstiff\\.DormandPrince853StepInterpolator\\.writeExternal\\:\\(Ljava\\/io\\/ObjectOutput\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.nonstiff\\.DormandPrince853StepInterpolator\\.readExternal\\:\\(Ljava\\/io\\/ObjectInput\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.nonstiff\\.AdamsBashforthIntegrator\\.\\<init\\>\\:\\(IDDDD\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.nonstiff\\.AdamsBashforthIntegrator\\.\\<init\\>\\:\\(IDD\\[D\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MaxCountExceededException", 
   "org.apache.commons.math3.exception.NoBracketingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.nonstiff\\.AdamsBashforthIntegrator\\.integrate\\:\\(Lorg\\/apache\\/commons\\/math3\\/ode\\/ExpandableStatefulODE\\;D\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.nonstiff\\.GraggBulirschStoerStepInterpolator\\.writeExternal\\:\\(Ljava\\/io\\/ObjectOutput\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.nonstiff\\.GraggBulirschStoerStepInterpolator\\.readExternal\\:\\(Ljava\\/io\\/ObjectInput\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MaxCountExceededException", 
   "org.apache.commons.math3.exception.NoBracketingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.nonstiff\\.EmbeddedRungeKuttaIntegrator\\.integrate\\:\\(Lorg\\/apache\\/commons\\/math3\\/ode\\/ExpandableStatefulODE\\;D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.nonstiff\\.GraggBulirschStoerIntegrator\\.tryStep\\:\\(D\\[DDI\\[D\\[\\[D\\[D\\[D\\[D\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MaxCountExceededException", 
   "org.apache.commons.math3.exception.NoBracketingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.nonstiff\\.GraggBulirschStoerIntegrator\\.integrate\\:\\(Lorg\\/apache\\/commons\\/math3\\/ode\\/ExpandableStatefulODE\\;D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MaxCountExceededException", 
   "org.apache.commons.math3.exception.NoBracketingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.nonstiff\\.RungeKuttaIntegrator\\.integrate\\:\\(Lorg\\/apache\\/commons\\/math3\\/ode\\/ExpandableStatefulODE\\;D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.ParameterizedWrapper\\.computeDerivatives\\:\\(D\\[D\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.ode.UnknownParameterException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ode\\.ParameterizedWrapper\\.getParameter\\:\\(Ljava\\/lang\\/String\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.RealFieldElement\\.remainder\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.RealFieldElement\\.hypot\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.RealFieldElement\\.pow\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.RealFieldElement\\.atan2\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.RealFieldElement\\.linearCombination\\:\\(\\[Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.RealFieldElement\\.linearCombination\\:\\(\\[D\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.complex\\.Complex\\.add\\:\\(Lorg\\/apache\\/commons\\/math3\\/complex\\/Complex\\;\\)Lorg\\/apache\\/commons\\/math3\\/complex\\/Complex\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.complex\\.Complex\\.divide\\:\\(Lorg\\/apache\\/commons\\/math3\\/complex\\/Complex\\;\\)Lorg\\/apache\\/commons\\/math3\\/complex\\/Complex\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.complex\\.Complex\\.multiply\\:\\(Lorg\\/apache\\/commons\\/math3\\/complex\\/Complex\\;\\)Lorg\\/apache\\/commons\\/math3\\/complex\\/Complex\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.complex\\.Complex\\.subtract\\:\\(Lorg\\/apache\\/commons\\/math3\\/complex\\/Complex\\;\\)Lorg\\/apache\\/commons\\/math3\\/complex\\/Complex\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.complex\\.Complex\\.pow\\:\\(Lorg\\/apache\\/commons\\/math3\\/complex\\/Complex\\;\\)Lorg\\/apache\\/commons\\/math3\\/complex\\/Complex\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.complex\\.Complex\\.nthRoot\\:\\(I\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.complex\\.Complex\\.reciprocal\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.complex\\.Complex\\.divide\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.complex\\.Complex\\.multiply\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.complex\\.Complex\\.subtract\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.complex\\.Complex\\.add\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.complex\\.Quaternion\\.\\<init\\>\\:\\(D\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.complex\\.RootsOfUnity\\.isCounterClockWise\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.ZeroException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.complex\\.RootsOfUnity\\.computeRoots\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalStateException", 
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.complex\\.RootsOfUnity\\.getReal\\:\\(I\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalStateException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.complex\\.RootsOfUnity\\.getImaginary\\:\\(I\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.complex\\.ComplexFormat\\.\\<init\\>\\:\\(Ljava\\/text\\/NumberFormat\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.complex\\.ComplexFormat\\.\\<init\\>\\:\\(Ljava\\/text\\/NumberFormat\\;Ljava\\/text\\/NumberFormat\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NoDataException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.complex\\.ComplexFormat\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NoDataException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.complex\\.ComplexFormat\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;Ljava\\/text\\/NumberFormat\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NoDataException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.complex\\.ComplexFormat\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;Ljava\\/text\\/NumberFormat\\;Ljava\\/text\\/NumberFormat\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.complex\\.ComplexFormat\\.format\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/StringBuffer\\;Ljava\\/text\\/FieldPosition\\;\\)Ljava\\/lang\\/StringBuffer\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NoDataException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.complex\\.ComplexFormat\\.getInstance\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Lorg\\/apache\\/commons\\/math3\\/complex\\/ComplexFormat\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathParseException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.complex\\.ComplexFormat\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/commons\\/math3\\/complex\\/Complex\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.complex\\.ComplexUtils\\.polar2Complex\\:\\(DD\\)Lorg\\/apache\\/commons\\/math3\\/complex\\/Complex\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.fitting\\.GaussianFitter\\$ParameterGuesser\\.interpolateXAtY\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/fitting\\/WeightedObservedPoint\\;IID\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.fitting\\.GaussianFitter\\$ParameterGuesser\\.getInterpolationPointsForY\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/fitting\\/WeightedObservedPoint\\;IID\\)\\[Lorg\\/apache\\/commons\\/math3\\/fitting\\/WeightedObservedPoint\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.transform\\.FastFourierTransformer\\$MultiDimensionalComplexMatrix\\.get\\:\\(\\[I\\)Lorg\\/apache\\/commons\\/math3\\/complex\\/Complex\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.transform\\.FastFourierTransformer\\$MultiDimensionalComplexMatrix\\.set\\:\\(Lorg\\/apache\\/commons\\/math3\\/complex\\/Complex\\;\\[I\\)Lorg\\/apache\\/commons\\/math3\\/complex\\/Complex\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.transform\\.FastHadamardTransformer\\.fht\\:\\(\\[D\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.transform\\.FastHadamardTransformer\\.fht\\:\\(\\[I\\)\\[I"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.transform\\.RealTransformer\\.transform\\:\\(\\[DLorg\\/apache\\/commons\\/math3\\/transform\\/TransformType\\;\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NonMonotonicSequenceException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.transform\\.RealTransformer\\.transform\\:\\(Lorg\\/apache\\/commons\\/math3\\/analysis\\/UnivariateFunction\\;DDILorg\\/apache\\/commons\\/math3\\/transform\\/TransformType\\;\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.transform\\.FastCosineTransformer\\.transform\\:\\(\\[DLorg\\/apache\\/commons\\/math3\\/transform\\/TransformType\\;\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.transform\\.FastCosineTransformer\\.transform\\:\\(Lorg\\/apache\\/commons\\/math3\\/analysis\\/UnivariateFunction\\;DDILorg\\/apache\\/commons\\/math3\\/transform\\/TransformType\\;\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.transform\\.FastCosineTransformer\\.fct\\:\\(\\[D\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.transform\\.TransformUtils\\.createComplexArray\\:\\(\\[\\[D\\)\\[Lorg\\/apache\\/commons\\/math3\\/complex\\/Complex\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.transform\\.TransformUtils\\.exactLog2\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.transform\\.FastSineTransformer\\.fst\\:\\(\\[D\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.filter\\.DefaultProcessModel\\.\\<init\\>\\:\\(\\[\\[D\\[\\[D\\[\\[D\\[D\\[\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.filter\\.DefaultProcessModel\\.\\<init\\>\\:\\(\\[\\[D\\[\\[D\\[\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.linear.NonSquareMatrixException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.filter\\.KalmanFilter\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/filter\\/ProcessModel\\;Lorg\\/apache\\/commons\\/math3\\/filter\\/MeasurementModel\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.filter\\.KalmanFilter\\.predict\\:\\(\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.filter\\.KalmanFilter\\.predict\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.linear.SingularMatrixException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.filter\\.KalmanFilter\\.correct\\:\\(\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.linear.SingularMatrixException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.filter\\.KalmanFilter\\.correct\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.filter\\.DefaultMeasurementModel\\.\\<init\\>\\:\\(\\[\\[D\\[\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NotPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.LoessInterpolator\\.\\<init\\>\\:\\(DID\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NonMonotonicSequenceException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.NotFiniteNumberException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.LoessInterpolator\\.interpolate\\:\\(\\[D\\[D\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/polynomials\\/PolynomialSplineFunction\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NonMonotonicSequenceException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.NotFiniteNumberException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.LoessInterpolator\\.smooth\\:\\(\\[D\\[D\\[D\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NonMonotonicSequenceException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.NotFiniteNumberException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.LoessInterpolator\\.smooth\\:\\(\\[D\\[D\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.LoessInterpolator\\.interpolate\\:\\(\\[D\\[D\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/UnivariateFunction\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.SmoothingPolynomialBicubicSplineInterpolator\\.\\<init\\>\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.SmoothingPolynomialBicubicSplineInterpolator\\.\\<init\\>\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NonMonotonicSequenceException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.SmoothingPolynomialBicubicSplineInterpolator\\.interpolate\\:\\(\\[D\\[D\\[\\[D\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/interpolation\\/BicubicSplineInterpolatingFunction\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NonMonotonicSequenceException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.SmoothingPolynomialBicubicSplineInterpolator\\.interpolate\\:\\(\\[D\\[D\\[\\[D\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/BivariateFunction\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NonMonotonicSequenceException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.BivariateGridInterpolator\\.interpolate\\:\\(\\[D\\[D\\[\\[D\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/BivariateFunction\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.UnivariateInterpolator\\.interpolate\\:\\(\\[D\\[D\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/UnivariateFunction\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NonMonotonicSequenceException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.TricubicSplineInterpolatingFunction\\.\\<init\\>\\:\\(\\[D\\[D\\[D\\[\\[\\[D\\[\\[\\[D\\[\\[\\[D\\[\\[\\[D\\[\\[\\[D\\[\\[\\[D\\[\\[\\[D\\[\\[\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.TricubicSplineInterpolatingFunction\\.value\\:\\(DDD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NonMonotonicSequenceException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.TricubicSplineInterpolator\\.interpolate\\:\\(\\[D\\[D\\[D\\[\\[\\[D\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/interpolation\\/TricubicSplineInterpolatingFunction\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NonMonotonicSequenceException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.TricubicSplineInterpolator\\.interpolate\\:\\(\\[D\\[D\\[D\\[\\[\\[D\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/TrivariateFunction\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.MicrosphereInterpolatingFunction\\.\\<init\\>\\:\\(\\[\\[D\\[DIILorg\\/apache\\/commons\\/math3\\/random\\/UnitSphereRandomVectorGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.MicrosphereInterpolatingFunction\\.value\\:\\(\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.MicrosphereInterpolator\\.\\<init\\>\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.MicrosphereInterpolator\\.interpolate\\:\\(\\[\\[D\\[D\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/MultivariateFunction\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.UnivariatePeriodicInterpolator\\$1\\.value\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.MultivariateInterpolator\\.interpolate\\:\\(\\[\\[D\\[D\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/MultivariateFunction\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.ZeroException", 
   "org.apache.commons.math3.exception.MathArithmeticException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.FieldHermiteInterpolator\\.addSamplePoint\\:\\(Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\[\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.FieldHermiteInterpolator\\.value\\:\\(Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.FieldHermiteInterpolator\\.derivatives\\:\\(Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;I\\)\\[\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.ZeroException", 
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.HermiteInterpolator\\.addSamplePoint\\:\\(D\\[\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NoDataException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.HermiteInterpolator\\.getPolynomials\\:\\(\\)\\[Lorg\\/apache\\/commons\\/math3\\/analysis\\/polynomials\\/PolynomialFunction\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NoDataException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.HermiteInterpolator\\.value\\:\\(D\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NoDataException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.HermiteInterpolator\\.value\\:\\(Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;\\)\\[Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NoDataException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.HermiteInterpolator\\.checkInterpolation\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NonMonotonicSequenceException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.TrivariateGridInterpolator\\.interpolate\\:\\(\\[D\\[D\\[D\\[\\[\\[D\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/TrivariateFunction\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.NonMonotonicSequenceException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.DividedDifferenceInterpolator\\.interpolate\\:\\(\\[D\\[D\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/polynomials\\/PolynomialFunctionNewtonForm\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.NonMonotonicSequenceException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.DividedDifferenceInterpolator\\.computeDividedDifference\\:\\(\\[D\\[D\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.DividedDifferenceInterpolator\\.interpolate\\:\\(\\[D\\[D\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/UnivariateFunction\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.NonMonotonicSequenceException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.NevilleInterpolator\\.interpolate\\:\\(\\[D\\[D\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/polynomials\\/PolynomialFunctionLagrangeForm\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.NevilleInterpolator\\.interpolate\\:\\(\\[D\\[D\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/UnivariateFunction\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.NonMonotonicSequenceException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.LinearInterpolator\\.interpolate\\:\\(\\[D\\[D\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/polynomials\\/PolynomialSplineFunction\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.LinearInterpolator\\.interpolate\\:\\(\\[D\\[D\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/UnivariateFunction\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NonMonotonicSequenceException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.BicubicSplineInterpolator\\.interpolate\\:\\(\\[D\\[D\\[\\[D\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/interpolation\\/BicubicSplineInterpolatingFunction\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NonMonotonicSequenceException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.BicubicSplineInterpolator\\.interpolate\\:\\(\\[D\\[D\\[\\[D\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/BivariateFunction\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.NonMonotonicSequenceException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.BicubicSplineInterpolatingFunction\\.\\<init\\>\\:\\(\\[D\\[D\\[\\[D\\[\\[D\\[\\[D\\[\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.BicubicSplineInterpolatingFunction\\.value\\:\\(DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.BicubicSplineInterpolatingFunction\\.partialDerivativeX\\:\\(DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.BicubicSplineInterpolatingFunction\\.partialDerivativeY\\:\\(DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.BicubicSplineInterpolatingFunction\\.partialDerivativeXX\\:\\(DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.BicubicSplineInterpolatingFunction\\.partialDerivativeYY\\:\\(DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.BicubicSplineInterpolatingFunction\\.partialDerivativeXY\\:\\(DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.BicubicSplineInterpolatingFunction\\.partialDerivative\\:\\(IDD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.NonMonotonicSequenceException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.SplineInterpolator\\.interpolate\\:\\(\\[D\\[D\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/polynomials\\/PolynomialSplineFunction\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.SplineInterpolator\\.interpolate\\:\\(\\[D\\[D\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/UnivariateFunction\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.NonMonotonicSequenceException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.UnivariatePeriodicInterpolator\\.interpolate\\:\\(\\[D\\[D\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/UnivariateFunction\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.interpolation\\.TricubicSplineFunction\\.value\\:\\(DDD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.FunctionUtils\\$17\\.value\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.MultivariateMatrixFunction\\.value\\:\\(\\[D\\)\\[\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.integration\\.SimpsonIntegrator\\.\\<init\\>\\:\\(DDII\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.integration\\.SimpsonIntegrator\\.\\<init\\>\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.integration\\.SimpsonIntegrator\\.doIntegrate\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.integration\\.BaseAbstractUnivariateIntegrator\\.\\<init\\>\\:\\(DDII\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.integration\\.BaseAbstractUnivariateIntegrator\\.\\<init\\>\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.integration\\.BaseAbstractUnivariateIntegrator\\.computeObjectiveValue\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.integration\\.BaseAbstractUnivariateIntegrator\\.setup\\:\\(ILorg\\/apache\\/commons\\/math3\\/analysis\\/UnivariateFunction\\;DD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException", 
   "org.apache.commons.math3.exception.MaxCountExceededException", 
   "org.apache.commons.math3.exception.MathIllegalArgumentException", 
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.integration\\.BaseAbstractUnivariateIntegrator\\.integrate\\:\\(ILorg\\/apache\\/commons\\/math3\\/analysis\\/UnivariateFunction\\;DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.integration\\.BaseAbstractUnivariateIntegrator\\.doIntegrate\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.integration\\.RombergIntegrator\\.\\<init\\>\\:\\(DDII\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.integration\\.RombergIntegrator\\.\\<init\\>\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.integration\\.RombergIntegrator\\.doIntegrate\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.integration\\.TrapezoidIntegrator\\.\\<init\\>\\:\\(DDII\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.integration\\.TrapezoidIntegrator\\.\\<init\\>\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.integration\\.TrapezoidIntegrator\\.stage\\:\\(Lorg\\/apache\\/commons\\/math3\\/analysis\\/integration\\/BaseAbstractUnivariateIntegrator\\;I\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException", 
   "org.apache.commons.math3.exception.TooManyEvaluationsException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.integration\\.TrapezoidIntegrator\\.doIntegrate\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.integration\\.IterativeLegendreGaussIntegrator\\.\\<init\\>\\:\\(IDDII\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.integration\\.IterativeLegendreGaussIntegrator\\.\\<init\\>\\:\\(IDD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.integration\\.IterativeLegendreGaussIntegrator\\.\\<init\\>\\:\\(III\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException", 
   "org.apache.commons.math3.exception.TooManyEvaluationsException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.integration\\.IterativeLegendreGaussIntegrator\\.doIntegrate\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.integration\\.IterativeLegendreGaussIntegrator\\.stage\\:\\(I\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException", 
   "org.apache.commons.math3.exception.MaxCountExceededException", 
   "org.apache.commons.math3.exception.MathIllegalArgumentException", 
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.integration\\.UnivariateIntegrator\\.integrate\\:\\(ILorg\\/apache\\/commons\\/math3\\/analysis\\/UnivariateFunction\\;DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.integration\\.LegendreGaussIntegrator\\.\\<init\\>\\:\\(IDDII\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.integration\\.LegendreGaussIntegrator\\.\\<init\\>\\:\\(IDD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.integration\\.LegendreGaussIntegrator\\.\\<init\\>\\:\\(III\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException", 
   "org.apache.commons.math3.exception.TooManyEvaluationsException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.integration\\.LegendreGaussIntegrator\\.doIntegrate\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.integration\\.LegendreGaussIntegrator\\.stage\\:\\(I\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.integration\\.gauss\\.LegendreHighPrecisionRuleFactory\\.computeRule\\:\\(I\\)Lorg\\/apache\\/commons\\/math3\\/util\\/Pair\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.integration\\.gauss\\.GaussIntegratorFactory\\.legendre\\:\\(IDD\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/integration\\/gauss\\/GaussIntegrator\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.integration\\.gauss\\.GaussIntegratorFactory\\.legendreHighPrecision\\:\\(I\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/integration\\/gauss\\/GaussIntegrator\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.integration\\.gauss\\.GaussIntegratorFactory\\.legendreHighPrecision\\:\\(IDD\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/integration\\/gauss\\/GaussIntegrator\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.integration\\.gauss\\.GaussIntegratorFactory\\.getRule\\:\\(Lorg\\/apache\\/commons\\/math3\\/analysis\\/integration\\/gauss\\/BaseRuleFactory\\;I\\)Lorg\\/apache\\/commons\\/math3\\/util\\/Pair\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NonMonotonicSequenceException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.integration\\.gauss\\.GaussIntegrator\\.\\<init\\>\\:\\(\\[D\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NonMonotonicSequenceException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.integration\\.gauss\\.GaussIntegrator\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/util\\/Pair\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.integration\\.gauss\\.LegendreRuleFactory\\.computeRule\\:\\(I\\)Lorg\\/apache\\/commons\\/math3\\/util\\/Pair\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.integration\\.gauss\\.BaseRuleFactory\\.getRule\\:\\(I\\)Lorg\\/apache\\/commons\\/math3\\/util\\/Pair\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.integration\\.gauss\\.BaseRuleFactory\\.getRuleInternal\\:\\(I\\)Lorg\\/apache\\/commons\\/math3\\/util\\/Pair\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.integration\\.gauss\\.BaseRuleFactory\\.addRule\\:\\(Lorg\\/apache\\/commons\\/math3\\/util\\/Pair\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.integration\\.gauss\\.BaseRuleFactory\\.computeRule\\:\\(I\\)Lorg\\/apache\\/commons\\/math3\\/util\\/Pair\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException", 
   "org.apache.commons.math3.exception.TooManyEvaluationsException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.integration\\.IterativeLegendreGaussIntegrator\\$1\\.value\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.FunctionUtils\\.sample\\:\\(Lorg\\/apache\\/commons\\/math3\\/analysis\\/UnivariateFunction\\;DDI\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.FunctionUtils\\$5\\.value\\:\\(Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.FunctionUtils\\$15\\.value\\:\\(Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.FunctionUtils\\$19\\.value\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;\\)\\[Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.function\\.HarmonicOscillator\\$Parametric\\.value\\:\\(D\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.function\\.HarmonicOscillator\\$Parametric\\.gradient\\:\\(D\\[D\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.function\\.HarmonicOscillator\\$Parametric\\.validateParameters\\:\\(\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.function\\.Gaussian\\$Parametric\\.value\\:\\(D\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.function\\.Gaussian\\$Parametric\\.gradient\\:\\(D\\[D\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.function\\.Gaussian\\$Parametric\\.validateParameters\\:\\(\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.function\\.Gaussian\\.\\<init\\>\\:\\(DDD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.function\\.Gaussian\\.\\<init\\>\\:\\(DD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.function\\.Gaussian\\.value\\:\\(Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.function\\.Sigmoid\\.value\\:\\(Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.function\\.Sigmoid\\$Parametric\\.value\\:\\(D\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.function\\.Sigmoid\\$Parametric\\.gradient\\:\\(D\\[D\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.function\\.Sigmoid\\$Parametric\\.validateParameters\\:\\(\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.function\\.Logistic\\$Parametric\\.value\\:\\(D\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.function\\.Logistic\\$Parametric\\.gradient\\:\\(D\\[D\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.function\\.Logistic\\$Parametric\\.validateParameters\\:\\(\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.function\\.Logistic\\.\\<init\\>\\:\\(DDDDDD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.function\\.Sinc\\.value\\:\\(Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.function\\.Logit\\$Parametric\\.value\\:\\(D\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.function\\.Logit\\$Parametric\\.gradient\\:\\(D\\[D\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.function\\.Logit\\$Parametric\\.validateParameters\\:\\(\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NonMonotonicSequenceException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.function\\.StepFunction\\.\\<init\\>\\:\\(\\[D\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.function\\.HarmonicOscillator\\.value\\:\\(Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.function\\.Logit\\.value\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.function\\.Logit\\.value\\:\\(DDD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.function\\.Logit\\.value\\:\\(Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.function\\.Logit\\.access\\$000\\:\\(DDD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.NonMonotonicSequenceException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.polynomials\\.PolynomialFunctionLagrangeForm\\.\\<init\\>\\:\\(\\[D\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.NonMonotonicSequenceException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.polynomials\\.PolynomialFunctionLagrangeForm\\.evaluate\\:\\(\\[D\\[DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.NonMonotonicSequenceException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.polynomials\\.PolynomialFunctionLagrangeForm\\.verifyInterpolationArray\\:\\(\\[D\\[DZ\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.polynomials\\.PolynomialFunctionNewtonForm\\.\\<init\\>\\:\\(\\[D\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NoDataException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.polynomials\\.PolynomialFunctionNewtonForm\\.evaluate\\:\\(\\[D\\[DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.polynomials\\.PolynomialFunctionNewtonForm\\.verifyInputArray\\:\\(\\[D\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NoDataException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.polynomials\\.PolynomialFunction\\.\\<init\\>\\:\\(\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NoDataException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.polynomials\\.PolynomialFunction\\.evaluate\\:\\(\\[DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NoDataException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.polynomials\\.PolynomialFunction\\.value\\:\\(Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NoDataException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.polynomials\\.PolynomialFunction\\.differentiate\\:\\(\\[D\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NoDataException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.polynomials\\.PolynomialFunction\\$Parametric\\.value\\:\\(D\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NonMonotonicSequenceException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.polynomials\\.PolynomialSplineFunction\\.\\<init\\>\\:\\(\\[D\\[Lorg\\/apache\\/commons\\/math3\\/analysis\\/polynomials\\/PolynomialFunction\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.FiniteDifferencesDifferentiator\\$2\\.value\\:\\(D\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.FiniteDifferencesDifferentiator\\$2\\.value\\:\\(Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;\\)\\[Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.UnivariateDifferentiableFunction\\.value\\:\\(Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DSCompiler\\.\\<init\\>\\:\\(IILorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DSCompiler\\;Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DSCompiler\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DSCompiler\\.getCompiler\\:\\(II\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DSCompiler\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DSCompiler\\.compileCompositionIndirection\\:\\(IILorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DSCompiler\\;Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DSCompiler\\;\\[\\[I\\[\\[I\\)\\[\\[\\[I"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DSCompiler\\.getPartialDerivativeIndex\\:\\(\\[I\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DSCompiler\\.getPartialDerivativeIndex\\:\\(II\\[\\[I\\[I\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DSCompiler\\.convertIndex\\:\\(II\\[\\[III\\[\\[I\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DSCompiler\\.taylor\\:\\(\\[DI\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DSCompiler\\.checkCompatibility\\:\\(Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DSCompiler\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.FiniteDifferencesDifferentiator\\$3\\.value\\:\\(D\\)\\[\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.FiniteDifferencesDifferentiator\\$3\\.value\\:\\(Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;\\)\\[\\[Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.FiniteDifferencesDifferentiator\\$1\\.value\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.FiniteDifferencesDifferentiator\\$1\\.value\\:\\(Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.UnivariateDifferentiableMatrixFunction\\.value\\:\\(Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;\\)\\[\\[Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.UnivariateDifferentiableVectorFunction\\.value\\:\\(Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;\\)\\[Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.FiniteDifferencesDifferentiator\\.\\<init\\>\\:\\(ID\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.FiniteDifferencesDifferentiator\\.\\<init\\>\\:\\(IDDD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.FiniteDifferencesDifferentiator\\.evaluate\\:\\(Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;D\\[D\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.FiniteDifferencesDifferentiator\\.access\\$500\\:\\(Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/FiniteDifferencesDifferentiator\\;Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;D\\[D\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.MultivariateDifferentiableFunction\\.value\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.MultivariateDifferentiableVectorFunction\\.value\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;\\)\\[Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DerivativeStructure\\.\\<init\\>\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DerivativeStructure\\.\\<init\\>\\:\\(IID\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DerivativeStructure\\.\\<init\\>\\:\\(IIID\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DerivativeStructure\\.\\<init\\>\\:\\(DLorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;DLorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DerivativeStructure\\.\\<init\\>\\:\\(DLorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;DLorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;DLorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DerivativeStructure\\.\\<init\\>\\:\\(DLorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;DLorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;DLorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;DLorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DerivativeStructure\\.\\<init\\>\\:\\(II\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DerivativeStructure\\.getPartialDerivative\\:\\(\\[I\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DerivativeStructure\\.add\\:\\(Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DerivativeStructure\\.subtract\\:\\(Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DerivativeStructure\\.multiply\\:\\(Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DerivativeStructure\\.divide\\:\\(Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DerivativeStructure\\.remainder\\:\\(Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DerivativeStructure\\.hypot\\:\\(Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DerivativeStructure\\.hypot\\:\\(Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DerivativeStructure\\.compose\\:\\(\\[D\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DerivativeStructure\\.pow\\:\\(Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DerivativeStructure\\.atan2\\:\\(Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DerivativeStructure\\.atan2\\:\\(Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DerivativeStructure\\.taylor\\:\\(\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DerivativeStructure\\.linearCombination\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;\\[Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DerivativeStructure\\.linearCombination\\:\\(\\[D\\[Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DerivativeStructure\\.linearCombination\\:\\(Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DerivativeStructure\\.linearCombination\\:\\(DLorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;DLorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DerivativeStructure\\.linearCombination\\:\\(Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DerivativeStructure\\.linearCombination\\:\\(DLorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;DLorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;DLorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DerivativeStructure\\.linearCombination\\:\\(Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DerivativeStructure\\.linearCombination\\:\\(DLorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;DLorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;DLorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;DLorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DerivativeStructure\\.linearCombination\\:\\(\\[D\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DerivativeStructure\\.linearCombination\\:\\(\\[Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DerivativeStructure\\.atan2\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DerivativeStructure\\.pow\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DerivativeStructure\\.hypot\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DerivativeStructure\\.remainder\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DerivativeStructure\\.divide\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DerivativeStructure\\.multiply\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DerivativeStructure\\.subtract\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.differentiation\\.DerivativeStructure\\.add\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException", 
   "org.apache.commons.math3.exception.NoBracketingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.SecantSolver\\.doSolve\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException", 
   "org.apache.commons.math3.exception.NumberIsTooLargeException", 
   "org.apache.commons.math3.exception.NoBracketingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.MullerSolver\\.doSolve\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.MullerSolver\\.solve\\:\\(DDDD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.NewtonRaphsonSolver\\.solve\\:\\(ILorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/UnivariateDifferentiableFunction\\;DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.NewtonRaphsonSolver\\.doSolve\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException", 
   "org.apache.commons.math3.exception.TooManyEvaluationsException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.NewtonRaphsonSolver\\.solve\\:\\(ILorg\\/apache\\/commons\\/math3\\/analysis\\/UnivariateFunction\\;DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.AbstractUnivariateDifferentiableSolver\\.computeObjectiveValueAndDerivative\\:\\(D\\)Lorg\\/apache\\/commons\\/math3\\/analysis\\/differentiation\\/DerivativeStructure\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.AbstractUnivariateDifferentiableSolver\\.setup\\:\\(ILorg\\/apache\\/commons\\/math3\\/analysis\\/UnivariateFunction\\;DDD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.BisectionSolver\\.doSolve\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException", 
   "org.apache.commons.math3.exception.NumberIsTooLargeException", 
   "org.apache.commons.math3.exception.NoBracketingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.MullerSolver2\\.doSolve\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NoBracketingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.UnivariateSolverUtils\\.solve\\:\\(Lorg\\/apache\\/commons\\/math3\\/analysis\\/UnivariateFunction\\;DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NoBracketingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.UnivariateSolverUtils\\.solve\\:\\(Lorg\\/apache\\/commons\\/math3\\/analysis\\/UnivariateFunction\\;DDD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NoBracketingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.UnivariateSolverUtils\\.forceSide\\:\\(ILorg\\/apache\\/commons\\/math3\\/analysis\\/UnivariateFunction\\;Lorg\\/apache\\/commons\\/math3\\/analysis\\/solvers\\/BracketedUnivariateSolver\\;DDDLorg\\/apache\\/commons\\/math3\\/analysis\\/solvers\\/AllowedSolution\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.NoBracketingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.UnivariateSolverUtils\\.bracket\\:\\(Lorg\\/apache\\/commons\\/math3\\/analysis\\/UnivariateFunction\\;DDD\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.NoBracketingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.UnivariateSolverUtils\\.bracket\\:\\(Lorg\\/apache\\/commons\\/math3\\/analysis\\/UnivariateFunction\\;DDDI\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.UnivariateSolverUtils\\.isBracketing\\:\\(Lorg\\/apache\\/commons\\/math3\\/analysis\\/UnivariateFunction\\;DD\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.UnivariateSolverUtils\\.verifyInterval\\:\\(DD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.UnivariateSolverUtils\\.verifySequence\\:\\(DDD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NoBracketingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.UnivariateSolverUtils\\.verifyBracketing\\:\\(Lorg\\/apache\\/commons\\/math3\\/analysis\\/UnivariateFunction\\;DD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.AbstractDifferentiableUnivariateSolver\\.computeDerivativeObjectiveValue\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.AbstractDifferentiableUnivariateSolver\\.setup\\:\\(ILorg\\/apache\\/commons\\/math3\\/analysis\\/UnivariateFunction\\;DDD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.ConvergenceException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.BaseSecantSolver\\.doSolve\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.BracketingNthOrderBrentSolver\\.\\<init\\>\\:\\(DI\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.BracketingNthOrderBrentSolver\\.\\<init\\>\\:\\(DDI\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.BracketingNthOrderBrentSolver\\.\\<init\\>\\:\\(DDDI\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException", 
   "org.apache.commons.math3.exception.NumberIsTooLargeException", 
   "org.apache.commons.math3.exception.NoBracketingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.BracketingNthOrderBrentSolver\\.doSolve\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException", 
   "org.apache.commons.math3.exception.NumberIsTooLargeException", 
   "org.apache.commons.math3.exception.NoBracketingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.BracketingNthOrderBrentSolver\\.solve\\:\\(ILorg\\/apache\\/commons\\/math3\\/analysis\\/UnivariateFunction\\;DDLorg\\/apache\\/commons\\/math3\\/analysis\\/solvers\\/AllowedSolution\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException", 
   "org.apache.commons.math3.exception.NumberIsTooLargeException", 
   "org.apache.commons.math3.exception.NoBracketingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.BracketingNthOrderBrentSolver\\.solve\\:\\(ILorg\\/apache\\/commons\\/math3\\/analysis\\/UnivariateFunction\\;DDDLorg\\/apache\\/commons\\/math3\\/analysis\\/solvers\\/AllowedSolution\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException", 
   "org.apache.commons.math3.exception.TooManyEvaluationsException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.BaseUnivariateSolver\\.solve\\:\\(ILorg\\/apache\\/commons\\/math3\\/analysis\\/UnivariateFunction\\;DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException", 
   "org.apache.commons.math3.exception.TooManyEvaluationsException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.BaseUnivariateSolver\\.solve\\:\\(ILorg\\/apache\\/commons\\/math3\\/analysis\\/UnivariateFunction\\;DDD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException", 
   "org.apache.commons.math3.exception.NoBracketingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.RiddersSolver\\.doSolve\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.BaseAbstractUnivariateSolver\\.computeObjectiveValue\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.BaseAbstractUnivariateSolver\\.setup\\:\\(ILorg\\/apache\\/commons\\/math3\\/analysis\\/UnivariateFunction\\;DDD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException", 
   "org.apache.commons.math3.exception.NoBracketingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.BaseAbstractUnivariateSolver\\.solve\\:\\(ILorg\\/apache\\/commons\\/math3\\/analysis\\/UnivariateFunction\\;DDD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException", 
   "org.apache.commons.math3.exception.NoBracketingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.BaseAbstractUnivariateSolver\\.solve\\:\\(ILorg\\/apache\\/commons\\/math3\\/analysis\\/UnivariateFunction\\;D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException", 
   "org.apache.commons.math3.exception.NoBracketingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.BaseAbstractUnivariateSolver\\.doSolve\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.BaseAbstractUnivariateSolver\\.verifyInterval\\:\\(DD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.BaseAbstractUnivariateSolver\\.verifySequence\\:\\(DDD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NoBracketingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.BaseAbstractUnivariateSolver\\.verifyBracketing\\:\\(DD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.BaseAbstractUnivariateSolver\\.incrementEvaluationCount\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.TooManyEvaluationsException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.LaguerreSolver\\$ComplexSolver\\.solveAll\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/complex\\/Complex\\;Lorg\\/apache\\/commons\\/math3\\/complex\\/Complex\\;\\)\\[Lorg\\/apache\\/commons\\/math3\\/complex\\/Complex\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.TooManyEvaluationsException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.LaguerreSolver\\$ComplexSolver\\.solve\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/complex\\/Complex\\;Lorg\\/apache\\/commons\\/math3\\/complex\\/Complex\\;\\)Lorg\\/apache\\/commons\\/math3\\/complex\\/Complex\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.NewtonSolver\\.solve\\:\\(ILorg\\/apache\\/commons\\/math3\\/analysis\\/DifferentiableUnivariateFunction\\;DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.NewtonSolver\\.doSolve\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException", 
   "org.apache.commons.math3.exception.TooManyEvaluationsException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.NewtonSolver\\.solve\\:\\(ILorg\\/apache\\/commons\\/math3\\/analysis\\/UnivariateFunction\\;DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException", 
   "org.apache.commons.math3.exception.NumberIsTooLargeException", 
   "org.apache.commons.math3.exception.NoBracketingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.LaguerreSolver\\.doSolve\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.TooManyEvaluationsException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.LaguerreSolver\\.solveAllComplex\\:\\(\\[DD\\)\\[Lorg\\/apache\\/commons\\/math3\\/complex\\/Complex\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.TooManyEvaluationsException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.LaguerreSolver\\.solveComplex\\:\\(\\[DD\\)Lorg\\/apache\\/commons\\/math3\\/complex\\/Complex\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NoBracketingException", 
   "org.apache.commons.math3.exception.TooManyEvaluationsException", 
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.BrentSolver\\.doSolve\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.solvers\\.AbstractPolynomialSolver\\.setup\\:\\(ILorg\\/apache\\/commons\\/math3\\/analysis\\/UnivariateFunction\\;DDD\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.analysis\\.MultivariateVectorFunction\\.value\\:\\(\\[D\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyIterationsException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optim\\.linear\\.LinearOptimizer\\.optimize\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/optim\\/OptimizationData\\;\\)Lorg\\/apache\\/commons\\/math3\\/optim\\/PointValuePair\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optim\\.linear\\.LinearObjectiveFunction\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optim\\.linear\\.LinearObjectiveFunction\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optim\\.linear\\.SimplexTableau\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optim\\.linear\\.SimplexTableau\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyIterationsException", 
   "org.apache.commons.math3.optim.linear.UnboundedSolutionException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optim\\.linear\\.SimplexSolver\\.doIteration\\:\\(Lorg\\/apache\\/commons\\/math3\\/optim\\/linear\\/SimplexTableau\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyIterationsException", 
   "org.apache.commons.math3.optim.linear.UnboundedSolutionException", 
   "org.apache.commons.math3.optim.linear.NoFeasibleSolutionException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optim\\.linear\\.SimplexSolver\\.solvePhase1\\:\\(Lorg\\/apache\\/commons\\/math3\\/optim\\/linear\\/SimplexTableau\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyIterationsException", 
   "org.apache.commons.math3.optim.linear.UnboundedSolutionException", 
   "org.apache.commons.math3.optim.linear.NoFeasibleSolutionException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optim\\.linear\\.SimplexSolver\\.doOptimize\\:\\(\\)Lorg\\/apache\\/commons\\/math3\\/optim\\/PointValuePair\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optim\\.linear\\.LinearConstraint\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optim\\.linear\\.LinearConstraint\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optim\\.nonlinear\\.vector\\.MultivariateVectorOptimizer\\.optimize\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/optim\\/OptimizationData\\;\\)Lorg\\/apache\\/commons\\/math3\\/optim\\/PointVectorValuePair\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optim\\.nonlinear\\.vector\\.JacobianMultivariateVectorOptimizer\\.optimize\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/optim\\/OptimizationData\\;\\)Lorg\\/apache\\/commons\\/math3\\/optim\\/PointVectorValuePair\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optim\\.nonlinear\\.vector\\.MultiStartMultivariateVectorOptimizer\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/optim\\/nonlinear\\/vector\\/MultivariateVectorOptimizer\\;ILorg\\/apache\\/commons\\/math3\\/random\\/RandomVectorGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.ConvergenceException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optim\\.nonlinear\\.vector\\.jacobian\\.LevenbergMarquardtOptimizer\\.qrDecomposition\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optim\\.nonlinear\\.vector\\.jacobian\\.AbstractLeastSquaresOptimizer\\.optimize\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/optim\\/OptimizationData\\;\\)Lorg\\/apache\\/commons\\/math3\\/optim\\/PointVectorValuePair\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optim\\.nonlinear\\.scalar\\.noderiv\\.CMAESOptimizer\\$PopulationSize\\.\\<init\\>\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optim\\.nonlinear\\.scalar\\.noderiv\\.CMAESOptimizer\\$Sigma\\.\\<init\\>\\:\\(\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optim\\.nonlinear\\.scalar\\.noderiv\\.CMAESOptimizer\\.optimize\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/optim\\/OptimizationData\\;\\)Lorg\\/apache\\/commons\\/math3\\/optim\\/PointValuePair\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optim\\.nonlinear\\.scalar\\.MultivariateOptimizer\\.optimize\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/optim\\/OptimizationData\\;\\)Lorg\\/apache\\/commons\\/math3\\/optim\\/PointValuePair\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optim\\.nonlinear\\.scalar\\.MultiStartMultivariateOptimizer\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/optim\\/nonlinear\\/scalar\\/MultivariateOptimizer\\;ILorg\\/apache\\/commons\\/math3\\/random\\/RandomVectorGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optim\\.nonlinear\\.scalar\\.gradient\\.NonLinearConjugateGradientOptimizer\\.optimize\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/optim\\/OptimizationData\\;\\)Lorg\\/apache\\/commons\\/math3\\/optim\\/PointValuePair\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optim\\.nonlinear\\.scalar\\.GradientMultivariateOptimizer\\.optimize\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/optim\\/OptimizationData\\;\\)Lorg\\/apache\\/commons\\/math3\\/optim\\/PointValuePair\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optim\\.univariate\\.UnivariateOptimizer\\.optimize\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/optim\\/OptimizationData\\;\\)Lorg\\/apache\\/commons\\/math3\\/optim\\/univariate\\/UnivariatePointValuePair\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException", 
   "org.apache.commons.math3.exception.TooManyIterationsException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optim\\.univariate\\.UnivariateOptimizer\\.optimize\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/optim\\/OptimizationData\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException", 
   "org.apache.commons.math3.exception.TooManyIterationsException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optim\\.univariate\\.MultiStartUnivariateOptimizer\\.optimize\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/optim\\/OptimizationData\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException", 
   "org.apache.commons.math3.exception.TooManyIterationsException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optim\\.BaseOptimizer\\.optimize\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/optim\\/OptimizationData\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyEvaluationsException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optim\\.BaseOptimizer\\.incrementEvaluationCount\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.TooManyIterationsException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.optim\\.BaseOptimizer\\.incrementIterationCount\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.Vector\\.normalize\\:\\(\\)Lorg\\/apache\\/commons\\/math3\\/geometry\\/Vector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathUnsupportedOperationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.Space\\.getSubSpace\\:\\(\\)Lorg\\/apache\\/commons\\/math3\\/geometry\\/Space\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathUnsupportedOperationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.twod\\.Euclidean2D\\.getSubSpace\\:\\(\\)Lorg\\/apache\\/commons\\/math3\\/geometry\\/Space\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathParseException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.twod\\.Vector2DFormat\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/twod\\/Vector2D\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathParseException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.twod\\.Vector2DFormat\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/commons\\/math3\\/geometry\\/Vector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.twod\\.Line\\.getTransform\\:\\(Ljava\\/awt\\/geom\\/AffineTransform\\;\\)Lorg\\/apache\\/commons\\/math3\\/geometry\\/partitioning\\/Transform\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.twod\\.NestedLoops\\.\\<init\\>\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/twod\\/Vector2D\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.twod\\.NestedLoops\\.add\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/twod\\/Vector2D\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.twod\\.NestedLoops\\.add\\:\\(Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/twod\\/NestedLoops\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.twod\\.Line\\$LineTransform\\.\\<init\\>\\:\\(Ljava\\/awt\\/geom\\/AffineTransform\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.twod\\.Vector2D\\.\\<init\\>\\:\\(\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.twod\\.Vector2D\\.normalize\\:\\(\\)Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/twod\\/Vector2D\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.twod\\.Vector2D\\.normalize\\:\\(\\)Lorg\\/apache\\/commons\\/math3\\/geometry\\/Vector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.threed\\.Plane\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/Vector3D\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.threed\\.Plane\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/Vector3D\\;Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/Vector3D\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.threed\\.Plane\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/Vector3D\\;Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/Vector3D\\;Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/Vector3D\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.threed\\.Plane\\.reset\\:\\(Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/Vector3D\\;Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/Vector3D\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.threed\\.Plane\\.setNormal\\:\\(Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/Vector3D\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.threed\\.SubLine\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/Vector3D\\;Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/Vector3D\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.threed\\.SubLine\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/Segment\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.threed\\.SubLine\\.buildIntervalSet\\:\\(Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/Vector3D\\;Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/Vector3D\\;\\)Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/oned\\/IntervalsSet\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.threed\\.Line\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/Vector3D\\;Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/Vector3D\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.threed\\.Line\\.reset\\:\\(Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/Vector3D\\;Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/Vector3D\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.threed\\.Rotation\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/Vector3D\\;D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.geometry.euclidean.threed.NotARotationMatrixException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.threed\\.Rotation\\.\\<init\\>\\:\\(\\[\\[DD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.threed\\.Rotation\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/Vector3D\\;Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/Vector3D\\;Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/Vector3D\\;Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/Vector3D\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.threed\\.Rotation\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/Vector3D\\;Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/Vector3D\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.threed\\.Rotation\\.getAngles\\:\\(Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/RotationOrder\\;\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.geometry.euclidean.threed.NotARotationMatrixException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.threed\\.Rotation\\.orthogonalizeMatrix\\:\\(\\[\\[DD\\)\\[\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.threed\\.Vector3D\\.\\<init\\>\\:\\(\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.threed\\.Vector3D\\.normalize\\:\\(\\)Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/Vector3D\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.threed\\.Vector3D\\.orthogonal\\:\\(\\)Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/Vector3D\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.threed\\.Vector3D\\.angle\\:\\(Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/Vector3D\\;Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/Vector3D\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.threed\\.Vector3D\\.normalize\\:\\(\\)Lorg\\/apache\\/commons\\/math3\\/geometry\\/Vector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.threed\\.FieldVector3D\\.\\<init\\>\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/RealFieldElement\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.threed\\.FieldVector3D\\.normalize\\:\\(\\)Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/FieldVector3D\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.threed\\.FieldVector3D\\.orthogonal\\:\\(\\)Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/FieldVector3D\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.threed\\.FieldVector3D\\.angle\\:\\(Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/FieldVector3D\\;Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/FieldVector3D\\;\\)Lorg\\/apache\\/commons\\/math3\\/RealFieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.threed\\.FieldVector3D\\.angle\\:\\(Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/FieldVector3D\\;Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/Vector3D\\;\\)Lorg\\/apache\\/commons\\/math3\\/RealFieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.threed\\.FieldVector3D\\.angle\\:\\(Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/Vector3D\\;Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/FieldVector3D\\;\\)Lorg\\/apache\\/commons\\/math3\\/RealFieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.threed\\.FieldRotation\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/FieldVector3D\\;Lorg\\/apache\\/commons\\/math3\\/RealFieldElement\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.geometry.euclidean.threed.NotARotationMatrixException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.threed\\.FieldRotation\\.\\<init\\>\\:\\(\\[\\[Lorg\\/apache\\/commons\\/math3\\/RealFieldElement\\;D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.threed\\.FieldRotation\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/FieldVector3D\\;Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/FieldVector3D\\;Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/FieldVector3D\\;Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/FieldVector3D\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.threed\\.FieldRotation\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/FieldVector3D\\;Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/FieldVector3D\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.threed\\.FieldRotation\\.getAngles\\:\\(Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/RotationOrder\\;\\)\\[Lorg\\/apache\\/commons\\/math3\\/RealFieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.geometry.euclidean.threed.NotARotationMatrixException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.threed\\.FieldRotation\\.orthogonalizeMatrix\\:\\(\\[\\[Lorg\\/apache\\/commons\\/math3\\/RealFieldElement\\;D\\)\\[\\[Lorg\\/apache\\/commons\\/math3\\/RealFieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathUnsupportedOperationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.threed\\.Euclidean3D\\.getSubSpace\\:\\(\\)Lorg\\/apache\\/commons\\/math3\\/geometry\\/Space\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathParseException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.threed\\.Vector3DFormat\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/threed\\/Vector3D\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathParseException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.threed\\.Vector3DFormat\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/commons\\/math3\\/geometry\\/Vector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathParseException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.oned\\.Vector1DFormat\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/oned\\/Vector1D\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathParseException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.oned\\.Vector1DFormat\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/commons\\/math3\\/geometry\\/Vector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.oned\\.Vector1D\\.normalize\\:\\(\\)Lorg\\/apache\\/commons\\/math3\\/geometry\\/euclidean\\/oned\\/Vector1D\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.oned\\.Vector1D\\.normalize\\:\\(\\)Lorg\\/apache\\/commons\\/math3\\/geometry\\/Vector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathUnsupportedOperationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.euclidean\\.oned\\.Euclidean1D\\.getSubSpace\\:\\(\\)Lorg\\/apache\\/commons\\/math3\\/geometry\\/Space\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathParseException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.geometry\\.VectorFormat\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/commons\\/math3\\/geometry\\/Vector\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.EmpiricalDistribution\\$DataAdapter\\.computeBinStats\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.EmpiricalDistribution\\$DataAdapter\\.computeStats\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.StableRandomGenerator\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/random\\/RandomGenerator\\;DD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomData\\.nextHexString\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomData\\.nextInt\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomData\\.nextLong\\:\\(JJ\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomData\\.nextSecureHexString\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomData\\.nextSecureInt\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomData\\.nextSecureLong\\:\\(JJ\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomData\\.nextPoisson\\:\\(D\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomData\\.nextGaussian\\:\\(DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomData\\.nextExponential\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException", 
   "org.apache.commons.math3.exception.NotFiniteNumberException", 
   "org.apache.commons.math3.exception.NotANumberException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomData\\.nextUniform\\:\\(DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException", 
   "org.apache.commons.math3.exception.NotFiniteNumberException", 
   "org.apache.commons.math3.exception.NotANumberException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomData\\.nextUniform\\:\\(DDZ\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomData\\.nextPermutation\\:\\(II\\)\\[I"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomData\\.nextSample\\:\\(Ljava\\/util\\/Collection\\;I\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.BitsStreamGenerator\\.nextInt\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.BitsStreamGenerator\\.nextLong\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataGenerator\\.nextHexString\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataGenerator\\.nextInt\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataGenerator\\.nextLong\\:\\(JJ\\)J"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataGenerator\\.nextLong\\:\\(Lorg\\/apache\\/commons\\/math3\\/random\\/RandomGenerator\\;J\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataGenerator\\.nextSecureHexString\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataGenerator\\.nextSecureInt\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataGenerator\\.nextSecureLong\\:\\(JJ\\)J"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataGenerator\\.nextLong\\:\\(Ljava\\/security\\/SecureRandom\\;J\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataGenerator\\.nextPoisson\\:\\(D\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataGenerator\\.nextGaussian\\:\\(DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataGenerator\\.nextExponential\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataGenerator\\.nextGamma\\:\\(DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataGenerator\\.nextHypergeometric\\:\\(III\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataGenerator\\.nextPascal\\:\\(ID\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataGenerator\\.nextT\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataGenerator\\.nextWeibull\\:\\(DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataGenerator\\.nextZipf\\:\\(ID\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataGenerator\\.nextF\\:\\(DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException", 
   "org.apache.commons.math3.exception.NotFiniteNumberException", 
   "org.apache.commons.math3.exception.NotANumberException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataGenerator\\.nextUniform\\:\\(DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException", 
   "org.apache.commons.math3.exception.NotFiniteNumberException", 
   "org.apache.commons.math3.exception.NotANumberException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataGenerator\\.nextUniform\\:\\(DDZ\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataGenerator\\.nextPermutation\\:\\(II\\)\\[I"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataGenerator\\.nextSample\\:\\(Ljava\\/util\\/Collection\\;I\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchAlgorithmException", 
   "java.security.NoSuchProviderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataGenerator\\.setSecureAlgorithm\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.EmpiricalDistribution\\.load\\:\\(\\[D\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.ZeroException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.EmpiricalDistribution\\.load\\:\\(Ljava\\/net\\/URL\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.EmpiricalDistribution\\.load\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.EmpiricalDistribution\\.fillBinStats\\:\\(Lorg\\/apache\\/commons\\/math3\\/random\\/EmpiricalDistribution\\$DataAdapter\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.EmpiricalDistribution\\.getNextValue\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.EmpiricalDistribution\\.inverseCumulativeProbability\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.EmpiricalDistribution\\$ArrayDataAdapter\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/random\\/EmpiricalDistribution\\;\\[D\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.EmpiricalDistribution\\$ArrayDataAdapter\\.computeStats\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.EmpiricalDistribution\\$ArrayDataAdapter\\.computeBinStats\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.commons.math3.exception.MathIllegalStateException", 
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.ValueServer\\.getNext\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.commons.math3.exception.MathIllegalStateException", 
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.ValueServer\\.fill\\:\\(\\[D\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.commons.math3.exception.MathIllegalStateException", 
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.ValueServer\\.fill\\:\\(I\\)\\[D"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.commons.math3.exception.ZeroException", 
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.ValueServer\\.computeDistribution\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "java.io.IOException", 
   "org.apache.commons.math3.exception.ZeroException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.ValueServer\\.computeDistribution\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.net.MalformedURLException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.ValueServer\\.setValuesFileURL\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.ValueServer\\.resetReplayFile\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.ValueServer\\.closeReplayFile\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.ValueServer\\.getNextDigest\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.commons.math3.exception.MathIllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.ValueServer\\.getNextReplay\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.ValueServer\\.getNextUniform\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.ValueServer\\.getNextExponential\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.ValueServer\\.getNextGaussian\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.EmpiricalDistribution\\$StreamDataAdapter\\.computeBinStats\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.EmpiricalDistribution\\$StreamDataAdapter\\.computeStats\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataImpl\\.nextHexString\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataImpl\\.nextInt\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataImpl\\.nextLong\\:\\(JJ\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataImpl\\.nextSecureHexString\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataImpl\\.nextSecureInt\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataImpl\\.nextSecureLong\\:\\(JJ\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataImpl\\.nextPoisson\\:\\(D\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataImpl\\.nextGaussian\\:\\(DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataImpl\\.nextExponential\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException", 
   "org.apache.commons.math3.exception.NotFiniteNumberException", 
   "org.apache.commons.math3.exception.NotANumberException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataImpl\\.nextUniform\\:\\(DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException", 
   "org.apache.commons.math3.exception.NotFiniteNumberException", 
   "org.apache.commons.math3.exception.NotANumberException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataImpl\\.nextUniform\\:\\(DDZ\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataImpl\\.nextF\\:\\(DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataImpl\\.nextGamma\\:\\(DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataImpl\\.nextHypergeometric\\:\\(III\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataImpl\\.nextPascal\\:\\(ID\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataImpl\\.nextT\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataImpl\\.nextWeibull\\:\\(DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataImpl\\.nextZipf\\:\\(ID\\)I"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchAlgorithmException", 
   "java.security.NoSuchProviderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataImpl\\.setSecureAlgorithm\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataImpl\\.nextPermutation\\:\\(II\\)\\[I"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataImpl\\.nextSample\\:\\(Ljava\\/util\\/Collection\\;I\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataImpl\\.nextInversionDeviate\\:\\(Lorg\\/apache\\/commons\\/math3\\/distribution\\/RealDistribution\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.random\\.RandomDataImpl\\.nextInversionDeviate\\:\\(Lorg\\/apache\\/commons\\/math3\\/distribution\\/IntegerDistribution\\;\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.FieldElement\\.add\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.FieldElement\\.subtract\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.FieldElement\\.multiply\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.FieldElement\\.divide\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.FieldElement\\.reciprocal\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.special\\.Beta\\.logGammaSum\\:\\(DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.special\\.Beta\\.logGammaMinusLogGammaSum\\:\\(DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.special\\.Beta\\.deltaMinusDeltaSum\\:\\(DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.special\\.Gamma\\.logGamma1p\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.linear.NonSquareOperatorException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MaxCountExceededException", 
   "org.apache.commons.math3.linear.NonSelfAdjointOperatorException", 
   "org.apache.commons.math3.linear.NonPositiveDefiniteOperatorException", 
   "org.apache.commons.math3.linear.IllConditionedOperatorException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.SymmLQ\\.solve\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealLinearOperator\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealLinearOperator\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.linear.NonSquareOperatorException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MaxCountExceededException", 
   "org.apache.commons.math3.linear.NonSelfAdjointOperatorException", 
   "org.apache.commons.math3.linear.NonPositiveDefiniteOperatorException", 
   "org.apache.commons.math3.linear.IllConditionedOperatorException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.SymmLQ\\.solve\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealLinearOperator\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealLinearOperator\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;ZD\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.linear.NonSquareOperatorException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.linear.NonSelfAdjointOperatorException", 
   "org.apache.commons.math3.linear.NonPositiveDefiniteOperatorException", 
   "org.apache.commons.math3.linear.IllConditionedOperatorException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.SymmLQ\\.solve\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealLinearOperator\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealLinearOperator\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.linear.NonSquareOperatorException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.linear.NonSelfAdjointOperatorException", 
   "org.apache.commons.math3.linear.IllConditionedOperatorException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.SymmLQ\\.solve\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealLinearOperator\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.linear.NonSquareOperatorException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.linear.NonSelfAdjointOperatorException", 
   "org.apache.commons.math3.linear.IllConditionedOperatorException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.SymmLQ\\.solve\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealLinearOperator\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;ZD\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.linear.NonSquareOperatorException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.linear.NonSelfAdjointOperatorException", 
   "org.apache.commons.math3.linear.IllConditionedOperatorException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.SymmLQ\\.solve\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealLinearOperator\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.linear.NonSquareOperatorException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.linear.NonSelfAdjointOperatorException", 
   "org.apache.commons.math3.linear.NonPositiveDefiniteOperatorException", 
   "org.apache.commons.math3.linear.IllConditionedOperatorException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.SymmLQ\\.solveInPlace\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealLinearOperator\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealLinearOperator\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.linear.NonSquareOperatorException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.linear.NonSelfAdjointOperatorException", 
   "org.apache.commons.math3.linear.NonPositiveDefiniteOperatorException", 
   "org.apache.commons.math3.linear.IllConditionedOperatorException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.SymmLQ\\.solveInPlace\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealLinearOperator\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealLinearOperator\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;ZD\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.linear.NonSquareOperatorException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.linear.NonSelfAdjointOperatorException", 
   "org.apache.commons.math3.linear.IllConditionedOperatorException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.SymmLQ\\.solveInPlace\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealLinearOperator\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.OpenMapRealVector\\.add\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.OpenMapRealVector\\.add\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/OpenMapRealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/OpenMapRealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.OpenMapRealVector\\.dotProduct\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/OpenMapRealVector\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.OpenMapRealVector\\.ebeDivide\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/OpenMapRealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.OpenMapRealVector\\.ebeMultiply\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/OpenMapRealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.OpenMapRealVector\\.getSubVector\\:\\(II\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/OpenMapRealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.OpenMapRealVector\\.getDistance\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/OpenMapRealVector\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.OpenMapRealVector\\.getDistance\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.OpenMapRealVector\\.getEntry\\:\\(I\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.OpenMapRealVector\\.getL1Distance\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/OpenMapRealVector\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.OpenMapRealVector\\.getL1Distance\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.OpenMapRealVector\\.getLInfDistance\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/OpenMapRealVector\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.OpenMapRealVector\\.getLInfDistance\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.OpenMapRealVector\\.setEntry\\:\\(ID\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.OpenMapRealVector\\.setSubVector\\:\\(ILorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.OpenMapRealVector\\.subtract\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/OpenMapRealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/OpenMapRealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.OpenMapRealVector\\.subtract\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.OpenMapRealVector\\.unitVector\\:\\(\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/OpenMapRealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.OpenMapRealVector\\.unitize\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.OpenMapRealVector\\.unitVector\\:\\(\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.OpenMapRealVector\\.ebeMultiply\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.OpenMapRealVector\\.ebeDivide\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.OpenMapRealVector\\.getSubVector\\:\\(II\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.Array2DRowRealMatrix\\.\\<init\\>\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.Array2DRowRealMatrix\\.\\<init\\>\\:\\(\\[\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.Array2DRowRealMatrix\\.\\<init\\>\\:\\(\\[\\[DZ\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.Array2DRowRealMatrix\\.createMatrix\\:\\(II\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.Array2DRowRealMatrix\\.add\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/Array2DRowRealMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/Array2DRowRealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.Array2DRowRealMatrix\\.subtract\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/Array2DRowRealMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/Array2DRowRealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.Array2DRowRealMatrix\\.multiply\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/Array2DRowRealMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/Array2DRowRealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.Array2DRowRealMatrix\\.setSubMatrix\\:\\(\\[\\[DII\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.Array2DRowRealMatrix\\.getEntry\\:\\(II\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.Array2DRowRealMatrix\\.setEntry\\:\\(IID\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.Array2DRowRealMatrix\\.addToEntry\\:\\(IID\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.Array2DRowRealMatrix\\.multiplyEntry\\:\\(IID\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.Array2DRowRealMatrix\\.operate\\:\\(\\[D\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.Array2DRowRealMatrix\\.preMultiply\\:\\(\\[D\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.Array2DRowRealMatrix\\.walkInRowOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrixChangingVisitor\\;IIII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.Array2DRowRealMatrix\\.walkInRowOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrixPreservingVisitor\\;IIII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.Array2DRowRealMatrix\\.walkInColumnOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrixChangingVisitor\\;IIII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.Array2DRowRealMatrix\\.walkInColumnOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrixPreservingVisitor\\;IIII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.Array2DRowRealMatrix\\.copyIn\\:\\(\\[\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/Field\\;II\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.extractField\\:\\(\\[\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)Lorg\\/apache\\/commons\\/math3\\/Field\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NoDataException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.extractField\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)Lorg\\/apache\\/commons\\/math3\\/Field\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.createMatrix\\:\\(II\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.add\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.subtract\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.multiply\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.preMultiply\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.NonSquareMatrixException", 
   "org.apache.commons.math3.exception.NotPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.power\\:\\(I\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.getSubMatrix\\:\\(IIII\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.getSubMatrix\\:\\(\\[I\\[I\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.copySubMatrix\\:\\(IIII\\[\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException", 
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.copySubMatrix\\:\\(\\[I\\[I\\[\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.setSubMatrix\\:\\(\\[\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;II\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.getRowMatrix\\:\\(I\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.setRowMatrix\\:\\(ILorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.getColumnMatrix\\:\\(I\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.setColumnMatrix\\:\\(ILorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.getRowVector\\:\\(I\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.setRowVector\\:\\(ILorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.getColumnVector\\:\\(I\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.setColumnVector\\:\\(ILorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.getRow\\:\\(I\\)\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.setRow\\:\\(I\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.getColumn\\:\\(I\\)\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.setColumn\\:\\(I\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.getEntry\\:\\(II\\)Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.setEntry\\:\\(IILorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.addToEntry\\:\\(IILorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.multiplyEntry\\:\\(IILorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.NonSquareMatrixException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.getTrace\\:\\(\\)Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.operate\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.operate\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.preMultiply\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.preMultiply\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.walkInRowOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrixChangingVisitor\\;IIII\\)Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.walkInRowOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrixPreservingVisitor\\;IIII\\)Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.walkInColumnOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrixChangingVisitor\\;IIII\\)Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.walkInColumnOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrixPreservingVisitor\\;IIII\\)Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.walkInOptimizedOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrixChangingVisitor\\;IIII\\)Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.walkInOptimizedOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrixPreservingVisitor\\;IIII\\)Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.checkRowIndex\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.checkColumnIndex\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.checkSubMatrixIndex\\:\\(IIII\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.checkSubMatrixIndex\\:\\(\\[I\\[I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.checkAdditionCompatible\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.checkSubtractionCompatible\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractFieldMatrix\\.checkMultiplicationCompatible\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.EigenDecomposition\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.EigenDecomposition\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.EigenDecomposition\\.findEigenVectorsFromSchur\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/SchurTransformer\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayRealVector\\.\\<init\\>\\:\\(\\[DZ\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayRealVector\\.\\<init\\>\\:\\(\\[DII\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayRealVector\\.\\<init\\>\\:\\(\\[Ljava\\/lang\\/Double\\;II\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayRealVector\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayRealVector\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/ArrayRealVector\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayRealVector\\.add\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/ArrayRealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayRealVector\\.subtract\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/ArrayRealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayRealVector\\.ebeMultiply\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/ArrayRealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayRealVector\\.ebeDivide\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/ArrayRealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayRealVector\\.dotProduct\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayRealVector\\.getDistance\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayRealVector\\.getL1Distance\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayRealVector\\.getLInfDistance\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayRealVector\\.getEntry\\:\\(I\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NotPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayRealVector\\.getSubVector\\:\\(II\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayRealVector\\.setEntry\\:\\(ID\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayRealVector\\.addToEntry\\:\\(ID\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayRealVector\\.setSubVector\\:\\(ILorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayRealVector\\.setSubVector\\:\\(I\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayRealVector\\.checkVectorDimensions\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayRealVector\\.checkVectorDimensions\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayRealVector\\.combine\\:\\(DDLorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/ArrayRealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayRealVector\\.combineToSelf\\:\\(DDLorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/ArrayRealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayRealVector\\.walkInDefaultOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVectorPreservingVisitor\\;II\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayRealVector\\.walkInOptimizedOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVectorPreservingVisitor\\;II\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayRealVector\\.walkInDefaultOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVectorChangingVisitor\\;II\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayRealVector\\.walkInOptimizedOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVectorChangingVisitor\\;II\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayRealVector\\.combineToSelf\\:\\(DDLorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayRealVector\\.combine\\:\\(DDLorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayRealVector\\.ebeMultiply\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayRealVector\\.ebeDivide\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayRealVector\\.subtract\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayRealVector\\.add\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.IterativeLinearSolver\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/util\\/IterationManager\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.linear.NonSquareOperatorException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.IterativeLinearSolver\\.checkParameters\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealLinearOperator\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.linear.NonSquareOperatorException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.IterativeLinearSolver\\.solve\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealLinearOperator\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.linear.NonSquareOperatorException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.IterativeLinearSolver\\.solve\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealLinearOperator\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.linear.NonSquareOperatorException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.IterativeLinearSolver\\.solveInPlace\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealLinearOperator\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathUnsupportedOperationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\$2\\$2\\.remove\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NoDataException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.MatrixUtils\\.createRealMatrix\\:\\(\\[\\[D\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.MatrixUtils\\.createFieldMatrix\\:\\(\\[\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.MatrixUtils\\.createRealVector\\:\\(\\[D\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.ZeroException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.MatrixUtils\\.createFieldVector\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.MatrixUtils\\.createRowRealMatrix\\:\\(\\[D\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.MatrixUtils\\.createRowFieldMatrix\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.MatrixUtils\\.createColumnRealMatrix\\:\\(\\[D\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.MatrixUtils\\.createColumnFieldMatrix\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.MatrixUtils\\.checkMatrixIndex\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/AnyMatrix\\;II\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.MatrixUtils\\.checkRowIndex\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/AnyMatrix\\;I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.MatrixUtils\\.checkColumnIndex\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/AnyMatrix\\;I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.MatrixUtils\\.checkSubMatrixIndex\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/AnyMatrix\\;IIII\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.MatrixUtils\\.checkSubMatrixIndex\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/AnyMatrix\\;\\[I\\[I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.MatrixUtils\\.checkAdditionCompatible\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/AnyMatrix\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/AnyMatrix\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.MatrixUtils\\.checkSubtractionCompatible\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/AnyMatrix\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/AnyMatrix\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.MatrixUtils\\.checkMultiplicationCompatible\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/AnyMatrix\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/AnyMatrix\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.MatrixUtils\\.serializeRealVector\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.MatrixUtils\\.deserializeRealVector\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.MatrixUtils\\.serializeRealMatrix\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.MatrixUtils\\.deserializeRealMatrix\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MathArithmeticException", 
   "org.apache.commons.math3.linear.NonSquareMatrixException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.MatrixUtils\\.solveLowerTriangularSystem\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MathArithmeticException", 
   "org.apache.commons.math3.linear.NonSquareMatrixException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.MatrixUtils\\.solveUpperTriangularSystem\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockRealMatrix\\.\\<init\\>\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockRealMatrix\\.\\<init\\>\\:\\(\\[\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockRealMatrix\\.\\<init\\>\\:\\(II\\[\\[DZ\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockRealMatrix\\.toBlocksLayout\\:\\(\\[\\[D\\)\\[\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockRealMatrix\\.createMatrix\\:\\(II\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/BlockRealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockRealMatrix\\.add\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/BlockRealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockRealMatrix\\.add\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/BlockRealMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/BlockRealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockRealMatrix\\.subtract\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/BlockRealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockRealMatrix\\.subtract\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/BlockRealMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/BlockRealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockRealMatrix\\.multiply\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/BlockRealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockRealMatrix\\.multiply\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/BlockRealMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/BlockRealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockRealMatrix\\.getSubMatrix\\:\\(IIII\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/BlockRealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockRealMatrix\\.setSubMatrix\\:\\(\\[\\[DII\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockRealMatrix\\.getRowMatrix\\:\\(I\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/BlockRealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockRealMatrix\\.setRowMatrix\\:\\(ILorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockRealMatrix\\.setRowMatrix\\:\\(ILorg\\/apache\\/commons\\/math3\\/linear\\/BlockRealMatrix\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockRealMatrix\\.getColumnMatrix\\:\\(I\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/BlockRealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockRealMatrix\\.setColumnMatrix\\:\\(ILorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockRealMatrix\\.setColumnMatrix\\:\\(ILorg\\/apache\\/commons\\/math3\\/linear\\/BlockRealMatrix\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockRealMatrix\\.getRowVector\\:\\(I\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockRealMatrix\\.setRowVector\\:\\(ILorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockRealMatrix\\.getColumnVector\\:\\(I\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockRealMatrix\\.setColumnVector\\:\\(ILorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockRealMatrix\\.getRow\\:\\(I\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockRealMatrix\\.setRow\\:\\(I\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockRealMatrix\\.getColumn\\:\\(I\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockRealMatrix\\.setColumn\\:\\(I\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockRealMatrix\\.getEntry\\:\\(II\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockRealMatrix\\.setEntry\\:\\(IID\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockRealMatrix\\.addToEntry\\:\\(IID\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockRealMatrix\\.multiplyEntry\\:\\(IID\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockRealMatrix\\.operate\\:\\(\\[D\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockRealMatrix\\.preMultiply\\:\\(\\[D\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockRealMatrix\\.walkInRowOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrixChangingVisitor\\;IIII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockRealMatrix\\.walkInRowOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrixPreservingVisitor\\;IIII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockRealMatrix\\.walkInOptimizedOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrixChangingVisitor\\;IIII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockRealMatrix\\.walkInOptimizedOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrixPreservingVisitor\\;IIII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockRealMatrix\\.createMatrix\\:\\(II\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockRealMatrix\\.getColumnMatrix\\:\\(I\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockRealMatrix\\.getRowMatrix\\:\\(I\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockRealMatrix\\.getSubMatrix\\:\\(IIII\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockRealMatrix\\.multiply\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockRealMatrix\\.subtract\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockRealMatrix\\.add\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealMatrix\\.createMatrix\\:\\(II\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealMatrix\\.add\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealMatrix\\.subtract\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealMatrix\\.multiply\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealMatrix\\.preMultiply\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.linear.NonSquareMatrixException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealMatrix\\.power\\:\\(I\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealMatrix\\.getSubMatrix\\:\\(IIII\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealMatrix\\.getSubMatrix\\:\\(\\[I\\[I\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealMatrix\\.copySubMatrix\\:\\(IIII\\[\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealMatrix\\.copySubMatrix\\:\\(\\[I\\[I\\[\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealMatrix\\.setSubMatrix\\:\\(\\[\\[DII\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealMatrix\\.getRowMatrix\\:\\(I\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealMatrix\\.setRowMatrix\\:\\(ILorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealMatrix\\.getColumnMatrix\\:\\(I\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealMatrix\\.setColumnMatrix\\:\\(ILorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealMatrix\\.getRowVector\\:\\(I\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealMatrix\\.setRowVector\\:\\(ILorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealMatrix\\.getColumnVector\\:\\(I\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealMatrix\\.setColumnVector\\:\\(ILorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealMatrix\\.getRow\\:\\(I\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealMatrix\\.setRow\\:\\(I\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealMatrix\\.getColumn\\:\\(I\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealMatrix\\.setColumn\\:\\(I\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealMatrix\\.getEntry\\:\\(II\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealMatrix\\.setEntry\\:\\(IID\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealMatrix\\.addToEntry\\:\\(IID\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealMatrix\\.multiplyEntry\\:\\(IID\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.NonSquareMatrixException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealMatrix\\.getTrace\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealMatrix\\.operate\\:\\(\\[D\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealMatrix\\.operate\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealMatrix\\.preMultiply\\:\\(\\[D\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealMatrix\\.preMultiply\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealMatrix\\.walkInRowOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrixChangingVisitor\\;IIII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealMatrix\\.walkInRowOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrixPreservingVisitor\\;IIII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealMatrix\\.walkInColumnOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrixChangingVisitor\\;IIII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealMatrix\\.walkInColumnOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrixPreservingVisitor\\;IIII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealMatrix\\.walkInOptimizedOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrixChangingVisitor\\;IIII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealMatrix\\.walkInOptimizedOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrixPreservingVisitor\\;IIII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.SparseFieldVector\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/Field\\;\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.SparseFieldVector\\.add\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/SparseFieldVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.SparseFieldVector\\.append\\:\\(Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.SparseFieldVector\\.dotProduct\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.SparseFieldVector\\.ebeDivide\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.SparseFieldVector\\.ebeMultiply\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.SparseFieldVector\\.getEntry\\:\\(I\\)Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NotPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.SparseFieldVector\\.getSubVector\\:\\(II\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.SparseFieldVector\\.mapAdd\\:\\(Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.SparseFieldVector\\.mapAddToSelf\\:\\(Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.SparseFieldVector\\.mapDivide\\:\\(Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.SparseFieldVector\\.mapDivideToSelf\\:\\(Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.SparseFieldVector\\.mapInv\\:\\(\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.SparseFieldVector\\.mapInvToSelf\\:\\(\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.SparseFieldVector\\.mapMultiply\\:\\(Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.SparseFieldVector\\.mapMultiplyToSelf\\:\\(Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.SparseFieldVector\\.mapSubtract\\:\\(Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.SparseFieldVector\\.mapSubtractToSelf\\:\\(Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.SparseFieldVector\\.projection\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.SparseFieldVector\\.setEntry\\:\\(ILorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.SparseFieldVector\\.setSubVector\\:\\(ILorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.SparseFieldVector\\.subtract\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/SparseFieldVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/SparseFieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.SparseFieldVector\\.subtract\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.SparseFieldVector\\.checkIndex\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.SparseFieldVector\\.checkVectorDimensions\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.SparseFieldVector\\.add\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathUnsupportedOperationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\$SparseEntryIterator\\.remove\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldVector\\.add\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldVector\\.subtract\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldVector\\.mapAdd\\:\\(Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldVector\\.mapAddToSelf\\:\\(Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldVector\\.mapSubtract\\:\\(Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldVector\\.mapSubtractToSelf\\:\\(Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldVector\\.mapMultiply\\:\\(Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldVector\\.mapMultiplyToSelf\\:\\(Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldVector\\.mapDivide\\:\\(Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldVector\\.mapDivideToSelf\\:\\(Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldVector\\.mapInv\\:\\(\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldVector\\.mapInvToSelf\\:\\(\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldVector\\.ebeMultiply\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldVector\\.ebeDivide\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldVector\\.dotProduct\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldVector\\.projection\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldVector\\.getEntry\\:\\(I\\)Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldVector\\.setEntry\\:\\(ILorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NotPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldVector\\.getSubVector\\:\\(II\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldVector\\.setSubVector\\:\\(ILorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockFieldMatrix\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/Field\\;II\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockFieldMatrix\\.\\<init\\>\\:\\(\\[\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockFieldMatrix\\.\\<init\\>\\:\\(II\\[\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockFieldMatrix\\.toBlocksLayout\\:\\(\\[\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)\\[\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockFieldMatrix\\.createMatrix\\:\\(II\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockFieldMatrix\\.add\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockFieldMatrix\\.add\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/BlockFieldMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/BlockFieldMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockFieldMatrix\\.subtract\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockFieldMatrix\\.subtract\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/BlockFieldMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/BlockFieldMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockFieldMatrix\\.multiply\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockFieldMatrix\\.multiply\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/BlockFieldMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/BlockFieldMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockFieldMatrix\\.getSubMatrix\\:\\(IIII\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockFieldMatrix\\.setSubMatrix\\:\\(\\[\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;II\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockFieldMatrix\\.getRowMatrix\\:\\(I\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockFieldMatrix\\.setRowMatrix\\:\\(ILorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockFieldMatrix\\.setRowMatrix\\:\\(ILorg\\/apache\\/commons\\/math3\\/linear\\/BlockFieldMatrix\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockFieldMatrix\\.getColumnMatrix\\:\\(I\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockFieldMatrix\\.setColumnMatrix\\:\\(ILorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockFieldMatrix\\.setColumnMatrix\\:\\(ILorg\\/apache\\/commons\\/math3\\/linear\\/BlockFieldMatrix\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockFieldMatrix\\.getRowVector\\:\\(I\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockFieldMatrix\\.setRowVector\\:\\(ILorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockFieldMatrix\\.getColumnVector\\:\\(I\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockFieldMatrix\\.setColumnVector\\:\\(ILorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockFieldMatrix\\.getRow\\:\\(I\\)\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockFieldMatrix\\.setRow\\:\\(I\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockFieldMatrix\\.getColumn\\:\\(I\\)\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockFieldMatrix\\.setColumn\\:\\(I\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockFieldMatrix\\.getEntry\\:\\(II\\)Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockFieldMatrix\\.setEntry\\:\\(IILorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockFieldMatrix\\.addToEntry\\:\\(IILorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockFieldMatrix\\.multiplyEntry\\:\\(IILorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockFieldMatrix\\.operate\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockFieldMatrix\\.preMultiply\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockFieldMatrix\\.walkInRowOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrixChangingVisitor\\;IIII\\)Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockFieldMatrix\\.walkInRowOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrixPreservingVisitor\\;IIII\\)Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockFieldMatrix\\.walkInOptimizedOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrixChangingVisitor\\;IIII\\)Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.BlockFieldMatrix\\.walkInOptimizedOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrixPreservingVisitor\\;IIII\\)Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ConjugateGradient\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/util\\/IterationManager\\;DZ\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.linear.NonPositiveDefiniteOperatorException", 
   "org.apache.commons.math3.linear.NonSquareOperatorException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MaxCountExceededException", 
   "org.apache.commons.math3.linear.NonPositiveDefiniteOperatorException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ConjugateGradient\\.solveInPlace\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealLinearOperator\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealLinearOperator\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.NonSelfAdjointOperatorException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.SymmLQ\\$State\\.checkSymmetry\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealLinearOperator\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.NonPositiveDefiniteOperatorException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.SymmLQ\\$State\\.throwNPDLOException\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealLinearOperator\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractRealMatrix\\.\\<init\\>\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractRealMatrix\\.add\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractRealMatrix\\.subtract\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractRealMatrix\\.multiply\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractRealMatrix\\.preMultiply\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.linear.NonSquareMatrixException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractRealMatrix\\.power\\:\\(I\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractRealMatrix\\.getSubMatrix\\:\\(IIII\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractRealMatrix\\.getSubMatrix\\:\\(\\[I\\[I\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractRealMatrix\\.copySubMatrix\\:\\(IIII\\[\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractRealMatrix\\.copySubMatrix\\:\\(\\[I\\[I\\[\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractRealMatrix\\.setSubMatrix\\:\\(\\[\\[DII\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractRealMatrix\\.getRowMatrix\\:\\(I\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractRealMatrix\\.setRowMatrix\\:\\(ILorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractRealMatrix\\.getColumnMatrix\\:\\(I\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractRealMatrix\\.setColumnMatrix\\:\\(ILorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractRealMatrix\\.getRowVector\\:\\(I\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractRealMatrix\\.setRowVector\\:\\(ILorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractRealMatrix\\.getColumnVector\\:\\(I\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractRealMatrix\\.setColumnVector\\:\\(ILorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractRealMatrix\\.getRow\\:\\(I\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractRealMatrix\\.setRow\\:\\(I\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractRealMatrix\\.getColumn\\:\\(I\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractRealMatrix\\.setColumn\\:\\(I\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractRealMatrix\\.addToEntry\\:\\(IID\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractRealMatrix\\.multiplyEntry\\:\\(IID\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.NonSquareMatrixException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractRealMatrix\\.getTrace\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractRealMatrix\\.operate\\:\\(\\[D\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractRealMatrix\\.operate\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractRealMatrix\\.preMultiply\\:\\(\\[D\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractRealMatrix\\.preMultiply\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractRealMatrix\\.walkInRowOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrixChangingVisitor\\;IIII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractRealMatrix\\.walkInRowOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrixPreservingVisitor\\;IIII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractRealMatrix\\.walkInColumnOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrixChangingVisitor\\;IIII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractRealMatrix\\.walkInColumnOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrixPreservingVisitor\\;IIII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractRealMatrix\\.walkInOptimizedOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrixChangingVisitor\\;IIII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractRealMatrix\\.walkInOptimizedOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrixPreservingVisitor\\;IIII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractRealMatrix\\.createMatrix\\:\\(II\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractRealMatrix\\.getEntry\\:\\(II\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.AbstractRealMatrix\\.setEntry\\:\\(IID\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RectangularCholeskyDecomposition\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RectangularCholeskyDecomposition\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.ZeroException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayFieldVector\\.\\<init\\>\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayFieldVector\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/Field\\;\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.ZeroException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayFieldVector\\.\\<init\\>\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayFieldVector\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/Field\\;\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayFieldVector\\.\\<init\\>\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;II\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayFieldVector\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/Field\\;\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;II\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayFieldVector\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayFieldVector\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/ArrayFieldVector\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayFieldVector\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/ArrayFieldVector\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayFieldVector\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/ArrayFieldVector\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/ArrayFieldVector\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayFieldVector\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayFieldVector\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/ArrayFieldVector\\;\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayFieldVector\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayFieldVector\\.\\<init\\>\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/ArrayFieldVector\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayFieldVector\\.\\<init\\>\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.ZeroException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayFieldVector\\.\\<init\\>\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.ZeroException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayFieldVector\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/Field\\;\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayFieldVector\\.add\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayFieldVector\\.add\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/ArrayFieldVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/ArrayFieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayFieldVector\\.subtract\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayFieldVector\\.subtract\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/ArrayFieldVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/ArrayFieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayFieldVector\\.mapAdd\\:\\(Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayFieldVector\\.mapAddToSelf\\:\\(Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayFieldVector\\.mapSubtract\\:\\(Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayFieldVector\\.mapSubtractToSelf\\:\\(Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayFieldVector\\.mapMultiply\\:\\(Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayFieldVector\\.mapMultiplyToSelf\\:\\(Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayFieldVector\\.mapDivide\\:\\(Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayFieldVector\\.mapDivideToSelf\\:\\(Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayFieldVector\\.mapInv\\:\\(\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayFieldVector\\.mapInvToSelf\\:\\(\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayFieldVector\\.ebeMultiply\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayFieldVector\\.ebeMultiply\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/ArrayFieldVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/ArrayFieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayFieldVector\\.ebeDivide\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayFieldVector\\.ebeDivide\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/ArrayFieldVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/ArrayFieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayFieldVector\\.dotProduct\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayFieldVector\\.dotProduct\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/ArrayFieldVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayFieldVector\\.projection\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayFieldVector\\.projection\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/ArrayFieldVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/ArrayFieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NotPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayFieldVector\\.getSubVector\\:\\(II\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayFieldVector\\.setSubVector\\:\\(ILorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayFieldVector\\.set\\:\\(ILorg\\/apache\\/commons\\/math3\\/linear\\/ArrayFieldVector\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayFieldVector\\.checkVectorDimensions\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayFieldVector\\.checkVectorDimensions\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.ArrayFieldVector\\.checkIndex\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.OpenMapRealMatrix\\.\\<init\\>\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.OpenMapRealMatrix\\.createMatrix\\:\\(II\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/OpenMapRealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.OpenMapRealMatrix\\.add\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/OpenMapRealMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/OpenMapRealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.OpenMapRealMatrix\\.subtract\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/OpenMapRealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.OpenMapRealMatrix\\.subtract\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/OpenMapRealMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/OpenMapRealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.OpenMapRealMatrix\\.multiply\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.OpenMapRealMatrix\\.multiply\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/OpenMapRealMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/OpenMapRealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.OpenMapRealMatrix\\.getEntry\\:\\(II\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.OpenMapRealMatrix\\.setEntry\\:\\(IID\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.OpenMapRealMatrix\\.addToEntry\\:\\(IID\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.OpenMapRealMatrix\\.multiplyEntry\\:\\(IID\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.OpenMapRealMatrix\\.createMatrix\\:\\(II\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.OpenMapRealMatrix\\.subtract\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathUnsupportedOperationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\$2\\$1\\.remove\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.Array2DRowFieldMatrix\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/Field\\;II\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NoDataException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.Array2DRowFieldMatrix\\.\\<init\\>\\:\\(\\[\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NoDataException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.Array2DRowFieldMatrix\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/Field\\;\\[\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.Array2DRowFieldMatrix\\.\\<init\\>\\:\\(\\[\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.Array2DRowFieldMatrix\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/Field\\;\\[\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NoDataException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.Array2DRowFieldMatrix\\.\\<init\\>\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.Array2DRowFieldMatrix\\.createMatrix\\:\\(II\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.Array2DRowFieldMatrix\\.add\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/Array2DRowFieldMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/Array2DRowFieldMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.Array2DRowFieldMatrix\\.subtract\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/Array2DRowFieldMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/Array2DRowFieldMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.Array2DRowFieldMatrix\\.multiply\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/Array2DRowFieldMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/Array2DRowFieldMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.Array2DRowFieldMatrix\\.setSubMatrix\\:\\(\\[\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;II\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.Array2DRowFieldMatrix\\.getEntry\\:\\(II\\)Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.Array2DRowFieldMatrix\\.setEntry\\:\\(IILorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.Array2DRowFieldMatrix\\.addToEntry\\:\\(IILorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.Array2DRowFieldMatrix\\.multiplyEntry\\:\\(IILorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.Array2DRowFieldMatrix\\.operate\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.Array2DRowFieldMatrix\\.preMultiply\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.Array2DRowFieldMatrix\\.walkInRowOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrixChangingVisitor\\;IIII\\)Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.Array2DRowFieldMatrix\\.walkInRowOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrixPreservingVisitor\\;IIII\\)Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.Array2DRowFieldMatrix\\.walkInColumnOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrixChangingVisitor\\;IIII\\)Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.Array2DRowFieldMatrix\\.walkInColumnOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrixPreservingVisitor\\;IIII\\)Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.Array2DRowFieldMatrix\\.copyIn\\:\\(\\[\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.DiagonalMatrix\\.\\<init\\>\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.DiagonalMatrix\\.\\<init\\>\\:\\(\\[DZ\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.DiagonalMatrix\\.createMatrix\\:\\(II\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.DiagonalMatrix\\.add\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/DiagonalMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/DiagonalMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.DiagonalMatrix\\.subtract\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/DiagonalMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/DiagonalMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.DiagonalMatrix\\.multiply\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/DiagonalMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/DiagonalMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.DiagonalMatrix\\.multiply\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.DiagonalMatrix\\.getEntry\\:\\(II\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.DiagonalMatrix\\.setEntry\\:\\(IID\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.DiagonalMatrix\\.addToEntry\\:\\(IID\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.DiagonalMatrix\\.multiplyEntry\\:\\(IID\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.DiagonalMatrix\\.operate\\:\\(\\[D\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.DiagonalMatrix\\.preMultiply\\:\\(\\[D\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.DiagonalMatrix\\.ensureZero\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealLinearOperator\\.operate\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "java.lang.UnsupportedOperationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealLinearOperator\\.operateTranspose\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldMatrix\\.createMatrix\\:\\(II\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldMatrix\\.add\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldMatrix\\.subtract\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldMatrix\\.multiply\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldMatrix\\.preMultiply\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.NonSquareMatrixException", 
   "org.apache.commons.math3.exception.NotPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldMatrix\\.power\\:\\(I\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldMatrix\\.getSubMatrix\\:\\(IIII\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldMatrix\\.getSubMatrix\\:\\(\\[I\\[I\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldMatrix\\.copySubMatrix\\:\\(IIII\\[\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException", 
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldMatrix\\.copySubMatrix\\:\\(\\[I\\[I\\[\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldMatrix\\.setSubMatrix\\:\\(\\[\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;II\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldMatrix\\.getRowMatrix\\:\\(I\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldMatrix\\.setRowMatrix\\:\\(ILorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldMatrix\\.getColumnMatrix\\:\\(I\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldMatrix\\.setColumnMatrix\\:\\(ILorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldMatrix\\.getRowVector\\:\\(I\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldMatrix\\.setRowVector\\:\\(ILorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldMatrix\\.getColumnVector\\:\\(I\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldMatrix\\.setColumnVector\\:\\(ILorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldMatrix\\.getRow\\:\\(I\\)\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldMatrix\\.setRow\\:\\(I\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldMatrix\\.getColumn\\:\\(I\\)\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.MatrixDimensionMismatchException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldMatrix\\.setColumn\\:\\(I\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldMatrix\\.getEntry\\:\\(II\\)Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldMatrix\\.setEntry\\:\\(IILorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldMatrix\\.addToEntry\\:\\(IILorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldMatrix\\.multiplyEntry\\:\\(IILorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.NonSquareMatrixException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldMatrix\\.getTrace\\:\\(\\)Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldMatrix\\.operate\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldMatrix\\.operate\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldMatrix\\.preMultiply\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;\\)\\[Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldMatrix\\.preMultiply\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldMatrix\\.walkInRowOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrixChangingVisitor\\;IIII\\)Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldMatrix\\.walkInRowOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrixPreservingVisitor\\;IIII\\)Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldMatrix\\.walkInColumnOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrixChangingVisitor\\;IIII\\)Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldMatrix\\.walkInColumnOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrixPreservingVisitor\\;IIII\\)Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldMatrix\\.walkInOptimizedOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrixChangingVisitor\\;IIII\\)Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.FieldMatrix\\.walkInOptimizedOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrixPreservingVisitor\\;IIII\\)Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\.getEntry\\:\\(I\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\.setEntry\\:\\(ID\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\.addToEntry\\:\\(ID\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\.getSubVector\\:\\(II\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\.setSubVector\\:\\(ILorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\.checkVectorDimensions\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\.checkVectorDimensions\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\.checkIndex\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\.checkIndices\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\.add\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\.subtract\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\.dotProduct\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\.cosine\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\.ebeDivide\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\.ebeMultiply\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\.getDistance\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\.getL1Distance\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\.getLInfDistance\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\.projection\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\.unitVector\\:\\(\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\.unitize\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\.combine\\:\\(DDLorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\.combineToSelf\\:\\(DDLorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\.walkInDefaultOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVectorPreservingVisitor\\;II\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\.walkInOptimizedOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVectorPreservingVisitor\\;II\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\.walkInDefaultOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVectorChangingVisitor\\;II\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\.walkInOptimizedOrder\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVectorChangingVisitor\\;II\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathUnsupportedOperationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\.equals\\:\\(Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathUnsupportedOperationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\.hashCode\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.NonSquareOperatorException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.JacobiPreconditioner\\.create\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealLinearOperator\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/JacobiPreconditioner\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.PreconditionedIterativeLinearSolver\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/util\\/IterationManager\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.linear.NonSquareOperatorException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.PreconditionedIterativeLinearSolver\\.solve\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealLinearOperator\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealLinearOperator\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.linear.NonSquareOperatorException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.PreconditionedIterativeLinearSolver\\.solve\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealLinearOperator\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.linear.NonSquareOperatorException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.PreconditionedIterativeLinearSolver\\.solve\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealLinearOperator\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.linear.NonSquareOperatorException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.PreconditionedIterativeLinearSolver\\.checkParameters\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealLinearOperator\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealLinearOperator\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.linear.NonSquareOperatorException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.PreconditionedIterativeLinearSolver\\.solve\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealLinearOperator\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealLinearOperator\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.linear.NonSquareOperatorException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.PreconditionedIterativeLinearSolver\\.solveInPlace\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealLinearOperator\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealLinearOperator\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.linear.NonSquareOperatorException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.PreconditionedIterativeLinearSolver\\.solveInPlace\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealLinearOperator\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathUnsupportedOperationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\$1\\.remove\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathUnsupportedOperationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\$2\\.mapToSelf\\:\\(Lorg\\/apache\\/commons\\/math3\\/analysis\\/UnivariateFunction\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\$2\\.add\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\$2\\.subtract\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathUnsupportedOperationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\$2\\.mapAddToSelf\\:\\(D\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathUnsupportedOperationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\$2\\.mapSubtractToSelf\\:\\(D\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathUnsupportedOperationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\$2\\.mapMultiplyToSelf\\:\\(D\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathUnsupportedOperationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\$2\\.mapDivideToSelf\\:\\(D\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\$2\\.ebeMultiply\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\$2\\.ebeDivide\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\$2\\.dotProduct\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\$2\\.cosine\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\$2\\.getDistance\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\$2\\.getL1Distance\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\$2\\.getLInfDistance\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\$2\\.unitVector\\:\\(\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathUnsupportedOperationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\$2\\.unitize\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\$2\\.getEntry\\:\\(I\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathUnsupportedOperationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\$2\\.setEntry\\:\\(ID\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathUnsupportedOperationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\$2\\.addToEntry\\:\\(ID\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.NotPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\$2\\.getSubVector\\:\\(II\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathUnsupportedOperationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\$2\\.setSubVector\\:\\(ILorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathUnsupportedOperationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\$2\\.set\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\$2\\.combine\\:\\(DDLorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathUnsupportedOperationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\$2\\.combineToSelf\\:\\(DDLorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealVector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathUnsupportedOperationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.linear\\.RealVector\\$2\\$UnmodifiableEntry\\.setValue\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException", 
   "org.apache.commons.math3.exception.ConvergenceException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ml\\.clustering\\.MultiKMeansPlusPlusClusterer\\.cluster\\:\\(Ljava\\/util\\/Collection\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ml\\.clustering\\.DBSCANClusterer\\.\\<init\\>\\:\\(DI\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ml\\.clustering\\.DBSCANClusterer\\.\\<init\\>\\:\\(DILorg\\/apache\\/commons\\/math3\\/ml\\/distance\\/DistanceMeasure\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ml\\.clustering\\.DBSCANClusterer\\.cluster\\:\\(Ljava\\/util\\/Collection\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException", 
   "org.apache.commons.math3.exception.ConvergenceException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ml\\.clustering\\.Clusterer\\.cluster\\:\\(Ljava\\/util\\/Collection\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException", 
   "org.apache.commons.math3.exception.ConvergenceException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ml\\.clustering\\.KMeansPlusPlusClusterer\\.cluster\\:\\(Ljava\\/util\\/Collection\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.ConvergenceException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ml\\.clustering\\.KMeansPlusPlusClusterer\\.getPointFromLargestVarianceCluster\\:\\(Ljava\\/util\\/Collection\\;\\)Lorg\\/apache\\/commons\\/math3\\/ml\\/clustering\\/Clusterable\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.ConvergenceException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ml\\.clustering\\.KMeansPlusPlusClusterer\\.getPointFromLargestNumberCluster\\:\\(Ljava\\/util\\/Collection\\;\\)Lorg\\/apache\\/commons\\/math3\\/ml\\/clustering\\/Clusterable\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.ConvergenceException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.ml\\.clustering\\.KMeansPlusPlusClusterer\\.getFarthestPoint\\:\\(Ljava\\/util\\/Collection\\;\\)Lorg\\/apache\\/commons\\/math3\\/ml\\/clustering\\/Clusterable\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.dfp\\.BracketingNthOrderBrentSolverDFP\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/dfp\\/Dfp\\;Lorg\\/apache\\/commons\\/math3\\/dfp\\/Dfp\\;Lorg\\/apache\\/commons\\/math3\\/dfp\\/Dfp\\;I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NoBracketingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.dfp\\.BracketingNthOrderBrentSolverDFP\\.solve\\:\\(ILorg\\/apache\\/commons\\/math3\\/dfp\\/UnivariateDfpFunction\\;Lorg\\/apache\\/commons\\/math3\\/dfp\\/Dfp\\;Lorg\\/apache\\/commons\\/math3\\/dfp\\/Dfp\\;Lorg\\/apache\\/commons\\/math3\\/analysis\\/solvers\\/AllowedSolution\\;\\)Lorg\\/apache\\/commons\\/math3\\/dfp\\/Dfp\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NoBracketingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.dfp\\.BracketingNthOrderBrentSolverDFP\\.solve\\:\\(ILorg\\/apache\\/commons\\/math3\\/dfp\\/UnivariateDfpFunction\\;Lorg\\/apache\\/commons\\/math3\\/dfp\\/Dfp\\;Lorg\\/apache\\/commons\\/math3\\/dfp\\/Dfp\\;Lorg\\/apache\\/commons\\/math3\\/dfp\\/Dfp\\;Lorg\\/apache\\/commons\\/math3\\/analysis\\/solvers\\/AllowedSolution\\;\\)Lorg\\/apache\\/commons\\/math3\\/dfp\\/Dfp\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.dfp\\.Dfp\\.atan2\\:\\(Lorg\\/apache\\/commons\\/math3\\/dfp\\/Dfp\\;\\)Lorg\\/apache\\/commons\\/math3\\/dfp\\/Dfp\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.dfp\\.Dfp\\.linearCombination\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/dfp\\/Dfp\\;\\[Lorg\\/apache\\/commons\\/math3\\/dfp\\/Dfp\\;\\)Lorg\\/apache\\/commons\\/math3\\/dfp\\/Dfp\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.dfp\\.Dfp\\.linearCombination\\:\\(\\[D\\[Lorg\\/apache\\/commons\\/math3\\/dfp\\/Dfp\\;\\)Lorg\\/apache\\/commons\\/math3\\/dfp\\/Dfp\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.dfp\\.Dfp\\.linearCombination\\:\\(\\[D\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.dfp\\.Dfp\\.linearCombination\\:\\(\\[Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.dfp\\.Dfp\\.atan2\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.dfp\\.Dfp\\.pow\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.dfp\\.Dfp\\.hypot\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.dfp\\.Dfp\\.remainder\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.dfp\\.Dfp\\.divide\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.dfp\\.Dfp\\.multiply\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.dfp\\.Dfp\\.subtract\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.dfp\\.Dfp\\.add\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.StatUtils\\.sum\\:\\(\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.StatUtils\\.sum\\:\\(\\[DII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.StatUtils\\.sumSq\\:\\(\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.StatUtils\\.sumSq\\:\\(\\[DII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.StatUtils\\.product\\:\\(\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.StatUtils\\.product\\:\\(\\[DII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.StatUtils\\.sumLog\\:\\(\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.StatUtils\\.sumLog\\:\\(\\[DII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.StatUtils\\.mean\\:\\(\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.StatUtils\\.mean\\:\\(\\[DII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.StatUtils\\.geometricMean\\:\\(\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.StatUtils\\.geometricMean\\:\\(\\[DII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.StatUtils\\.variance\\:\\(\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.StatUtils\\.variance\\:\\(\\[DII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.StatUtils\\.variance\\:\\(\\[DDII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.StatUtils\\.variance\\:\\(\\[DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.StatUtils\\.populationVariance\\:\\(\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.StatUtils\\.populationVariance\\:\\(\\[DII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.StatUtils\\.populationVariance\\:\\(\\[DDII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.StatUtils\\.populationVariance\\:\\(\\[DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.StatUtils\\.max\\:\\(\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.StatUtils\\.max\\:\\(\\[DII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.StatUtils\\.min\\:\\(\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.StatUtils\\.min\\:\\(\\[DII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.StatUtils\\.percentile\\:\\(\\[DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.StatUtils\\.percentile\\:\\(\\[DIID\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NoDataException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.StatUtils\\.sumDifference\\:\\(\\[D\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NoDataException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.StatUtils\\.meanDifference\\:\\(\\[D\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.StatUtils\\.varianceDifference\\:\\(\\[D\\[DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.regression\\.OLSMultipleLinearRegression\\.newSampleData\\:\\(\\[D\\[\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.regression\\.OLSMultipleLinearRegression\\.calculateTotalSumOfSquares\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.regression\\.OLSMultipleLinearRegression\\.calculateRSquared\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.regression\\.OLSMultipleLinearRegression\\.calculateAdjustedRSquared\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.stat.regression.ModelSpecificationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.regression\\.SimpleRegression\\.addData\\:\\(\\[\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.stat.regression.ModelSpecificationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.regression\\.SimpleRegression\\.addObservation\\:\\(\\[DD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.stat.regression.ModelSpecificationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.regression\\.SimpleRegression\\.addObservations\\:\\(\\[\\[D\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.regression\\.SimpleRegression\\.getSlopeConfidenceInterval\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.regression\\.SimpleRegression\\.getSlopeConfidenceInterval\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.stat.regression.ModelSpecificationException", 
   "org.apache.commons.math3.exception.NoDataException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.regression\\.SimpleRegression\\.regress\\:\\(\\)Lorg\\/apache\\/commons\\/math3\\/stat\\/regression\\/RegressionResults\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.regression\\.SimpleRegression\\.regress\\:\\(\\[I\\)Lorg\\/apache\\/commons\\/math3\\/stat\\/regression\\/RegressionResults\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.regression\\.RegressionResults\\.getParameterEstimate\\:\\(I\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.regression\\.RegressionResults\\.getStdErrorOfEstimate\\:\\(I\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.regression\\.RegressionResults\\.getCovarianceOfParameters\\:\\(II\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.stat.regression.ModelSpecificationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.regression\\.MillerUpdatingRegression\\.\\<init\\>\\:\\(IZD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.stat.regression.ModelSpecificationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.regression\\.MillerUpdatingRegression\\.\\<init\\>\\:\\(IZ\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.stat.regression.ModelSpecificationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.regression\\.MillerUpdatingRegression\\.addObservation\\:\\(\\[DD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.stat.regression.ModelSpecificationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.regression\\.MillerUpdatingRegression\\.addObservations\\:\\(\\[\\[D\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.stat.regression.ModelSpecificationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.regression\\.MillerUpdatingRegression\\.regcf\\:\\(I\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.stat.regression.ModelSpecificationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.regression\\.MillerUpdatingRegression\\.regress\\:\\(\\)Lorg\\/apache\\/commons\\/math3\\/stat\\/regression\\/RegressionResults\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.stat.regression.ModelSpecificationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.regression\\.MillerUpdatingRegression\\.regress\\:\\(I\\)Lorg\\/apache\\/commons\\/math3\\/stat\\/regression\\/RegressionResults\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.stat.regression.ModelSpecificationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.regression\\.MillerUpdatingRegression\\.regress\\:\\(\\[I\\)Lorg\\/apache\\/commons\\/math3\\/stat\\/regression\\/RegressionResults\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.stat.regression.ModelSpecificationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.regression\\.UpdatingMultipleLinearRegression\\.addObservation\\:\\(\\[DD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.stat.regression.ModelSpecificationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.regression\\.UpdatingMultipleLinearRegression\\.addObservations\\:\\(\\[\\[D\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.stat.regression.ModelSpecificationException", 
   "org.apache.commons.math3.exception.NoDataException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.regression\\.UpdatingMultipleLinearRegression\\.regress\\:\\(\\)Lorg\\/apache\\/commons\\/math3\\/stat\\/regression\\/RegressionResults\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.stat.regression.ModelSpecificationException", 
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.regression\\.UpdatingMultipleLinearRegression\\.regress\\:\\(\\[I\\)Lorg\\/apache\\/commons\\/math3\\/stat\\/regression\\/RegressionResults\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.regression\\.AbstractMultipleLinearRegression\\.validateSampleData\\:\\(\\[\\[D\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.Frequency\\.addValue\\:\\(Ljava\\/lang\\/Comparable\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.Frequency\\.addValue\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.Frequency\\.addValue\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.Frequency\\.addValue\\:\\(C\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.Frequency\\.merge\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/Frequency\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.Frequency\\.merge\\:\\(Ljava\\/util\\/Collection\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NoDataException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.MannWhitneyUTest\\.ensureDataConformance\\:\\(\\[D\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NoDataException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.MannWhitneyUTest\\.mannWhitneyU\\:\\(\\[D\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.ConvergenceException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.MannWhitneyUTest\\.calculateAsymptoticPValue\\:\\(DII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.ConvergenceException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.MannWhitneyUTest\\.mannWhitneyUTest\\:\\(\\[D\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.GTest\\.g\\:\\(\\[D\\[J\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.GTest\\.gTest\\:\\(\\[D\\[J\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.GTest\\.gTestIntrinsic\\:\\(\\[D\\[J\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.GTest\\.gTest\\:\\(\\[D\\[JD\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.ZeroException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.GTest\\.gDataSetsComparison\\:\\(\\[J\\[J\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.ZeroException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.GTest\\.gTestDataSetsComparison\\:\\(\\[J\\[J\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.ZeroException", 
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.GTest\\.gTestDataSetsComparison\\:\\(\\[J\\[JD\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.OneWayAnova\\.anovaFValue\\:\\(Ljava\\/util\\/Collection\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.ConvergenceException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.OneWayAnova\\.anovaPValue\\:\\(Ljava\\/util\\/Collection\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.ConvergenceException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.OneWayAnova\\.anovaPValue\\:\\(Ljava\\/util\\/Collection\\;Z\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.OneWayAnova\\.anovaStats\\:\\(Ljava\\/util\\/Collection\\;\\)Lorg\\/apache\\/commons\\/math3\\/stat\\/inference\\/OneWayAnova\\$AnovaStats\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.ConvergenceException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.OneWayAnova\\.anovaTest\\:\\(Ljava\\/util\\/Collection\\;D\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.OneWayAnova\\.anovaStats\\:\\(Ljava\\/util\\/Collection\\;Z\\)Lorg\\/apache\\/commons\\/math3\\/stat\\/inference\\/OneWayAnova\\$AnovaStats\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TestUtils\\.homoscedasticT\\:\\(\\[D\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TestUtils\\.homoscedasticT\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StatisticalSummary\\;Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StatisticalSummary\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TestUtils\\.homoscedasticTTest\\:\\(\\[D\\[DD\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TestUtils\\.homoscedasticTTest\\:\\(\\[D\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TestUtils\\.homoscedasticTTest\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StatisticalSummary\\;Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StatisticalSummary\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TestUtils\\.pairedT\\:\\(\\[D\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TestUtils\\.pairedTTest\\:\\(\\[D\\[DD\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TestUtils\\.pairedTTest\\:\\(\\[D\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TestUtils\\.t\\:\\(D\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TestUtils\\.t\\:\\(DLorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StatisticalSummary\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TestUtils\\.t\\:\\(\\[D\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TestUtils\\.t\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StatisticalSummary\\;Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StatisticalSummary\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TestUtils\\.tTest\\:\\(D\\[DD\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TestUtils\\.tTest\\:\\(D\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TestUtils\\.tTest\\:\\(DLorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StatisticalSummary\\;D\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TestUtils\\.tTest\\:\\(DLorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StatisticalSummary\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TestUtils\\.tTest\\:\\(\\[D\\[DD\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TestUtils\\.tTest\\:\\(\\[D\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TestUtils\\.tTest\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StatisticalSummary\\;Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StatisticalSummary\\;D\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TestUtils\\.tTest\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StatisticalSummary\\;Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StatisticalSummary\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TestUtils\\.chiSquare\\:\\(\\[D\\[J\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TestUtils\\.chiSquare\\:\\(\\[\\[J\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TestUtils\\.chiSquareTest\\:\\(\\[D\\[JD\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TestUtils\\.chiSquareTest\\:\\(\\[D\\[J\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TestUtils\\.chiSquareTest\\:\\(\\[\\[JD\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TestUtils\\.chiSquareTest\\:\\(\\[\\[J\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.ZeroException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TestUtils\\.chiSquareDataSetsComparison\\:\\(\\[J\\[J\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.ZeroException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TestUtils\\.chiSquareTestDataSetsComparison\\:\\(\\[J\\[J\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.ZeroException", 
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TestUtils\\.chiSquareTestDataSetsComparison\\:\\(\\[J\\[JD\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TestUtils\\.oneWayAnovaFValue\\:\\(Ljava\\/util\\/Collection\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.ConvergenceException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TestUtils\\.oneWayAnovaPValue\\:\\(Ljava\\/util\\/Collection\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.ConvergenceException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TestUtils\\.oneWayAnovaTest\\:\\(Ljava\\/util\\/Collection\\;D\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TestUtils\\.g\\:\\(\\[D\\[J\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TestUtils\\.gTest\\:\\(\\[D\\[J\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TestUtils\\.gTestIntrinsic\\:\\(\\[D\\[J\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TestUtils\\.gTest\\:\\(\\[D\\[JD\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.ZeroException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TestUtils\\.gDataSetsComparison\\:\\(\\[J\\[J\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.ZeroException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TestUtils\\.rootLogLikelihoodRatio\\:\\(JJJJ\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.ZeroException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TestUtils\\.gTestDataSetsComparison\\:\\(\\[J\\[J\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.ZeroException", 
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TestUtils\\.gTestDataSetsComparison\\:\\(\\[J\\[JD\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.ChiSquareTest\\.chiSquare\\:\\(\\[D\\[J\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.ChiSquareTest\\.chiSquareTest\\:\\(\\[D\\[J\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.ChiSquareTest\\.chiSquareTest\\:\\(\\[D\\[JD\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.ChiSquareTest\\.chiSquare\\:\\(\\[\\[J\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.ChiSquareTest\\.chiSquareTest\\:\\(\\[\\[J\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.ChiSquareTest\\.chiSquareTest\\:\\(\\[\\[JD\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.ZeroException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.ChiSquareTest\\.chiSquareDataSetsComparison\\:\\(\\[J\\[J\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.ZeroException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.ChiSquareTest\\.chiSquareTestDataSetsComparison\\:\\(\\[J\\[J\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.ZeroException", 
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.ChiSquareTest\\.chiSquareTestDataSetsComparison\\:\\(\\[J\\[JD\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NotPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.ChiSquareTest\\.checkArray\\:\\(\\[\\[J\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TTest\\.pairedT\\:\\(\\[D\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TTest\\.pairedTTest\\:\\(\\[D\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TTest\\.pairedTTest\\:\\(\\[D\\[DD\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TTest\\.t\\:\\(D\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TTest\\.t\\:\\(DLorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StatisticalSummary\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TTest\\.homoscedasticT\\:\\(\\[D\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TTest\\.t\\:\\(\\[D\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TTest\\.t\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StatisticalSummary\\;Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StatisticalSummary\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TTest\\.homoscedasticT\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StatisticalSummary\\;Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StatisticalSummary\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TTest\\.tTest\\:\\(D\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TTest\\.tTest\\:\\(D\\[DD\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TTest\\.tTest\\:\\(DLorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StatisticalSummary\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TTest\\.tTest\\:\\(DLorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StatisticalSummary\\;D\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TTest\\.tTest\\:\\(\\[D\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TTest\\.homoscedasticTTest\\:\\(\\[D\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TTest\\.tTest\\:\\(\\[D\\[DD\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TTest\\.homoscedasticTTest\\:\\(\\[D\\[DD\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TTest\\.tTest\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StatisticalSummary\\;Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StatisticalSummary\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TTest\\.homoscedasticTTest\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StatisticalSummary\\;Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StatisticalSummary\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException", 
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TTest\\.tTest\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StatisticalSummary\\;Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StatisticalSummary\\;D\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException", 
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TTest\\.tTest\\:\\(DDDD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TTest\\.tTest\\:\\(DDDDDD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TTest\\.homoscedasticTTest\\:\\(DDDDDD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TTest\\.checkSignificanceLevel\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TTest\\.checkSampleData\\:\\(\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.TTest\\.checkSampleData\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StatisticalSummary\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.WilcoxonSignedRankTest\\.ensureDataConformance\\:\\(\\[D\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NoDataException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.WilcoxonSignedRankTest\\.calculateAbsoluteDifferences\\:\\(\\[D\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.WilcoxonSignedRankTest\\.wilcoxonSignedRank\\:\\(\\[D\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NoDataException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NumberIsTooLargeException", 
   "org.apache.commons.math3.exception.ConvergenceException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.inference\\.WilcoxonSignedRankTest\\.wilcoxonSignedRankTest\\:\\(\\[D\\[DZ\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.clustering\\.DBSCANClusterer\\.\\<init\\>\\:\\(DI\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.clustering\\.DBSCANClusterer\\.cluster\\:\\(Ljava\\/util\\/Collection\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException", 
   "org.apache.commons.math3.exception.ConvergenceException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.clustering\\.KMeansPlusPlusClusterer\\.cluster\\:\\(Ljava\\/util\\/Collection\\;III\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException", 
   "org.apache.commons.math3.exception.ConvergenceException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.clustering\\.KMeansPlusPlusClusterer\\.cluster\\:\\(Ljava\\/util\\/Collection\\;II\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.ConvergenceException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.clustering\\.KMeansPlusPlusClusterer\\.getPointFromLargestVarianceCluster\\:\\(Ljava\\/util\\/Collection\\;\\)Lorg\\/apache\\/commons\\/math3\\/stat\\/clustering\\/Clusterable\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.ConvergenceException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.clustering\\.KMeansPlusPlusClusterer\\.getPointFromLargestNumberCluster\\:\\(Ljava\\/util\\/Collection\\;\\)Lorg\\/apache\\/commons\\/math3\\/stat\\/clustering\\/Clusterable\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.ConvergenceException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.clustering\\.KMeansPlusPlusClusterer\\.getFarthestPoint\\:\\(Ljava\\/util\\/Collection\\;\\)Lorg\\/apache\\/commons\\/math3\\/stat\\/clustering\\/Clusterable\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.WeightedEvaluation\\.evaluate\\:\\(\\[D\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.WeightedEvaluation\\.evaluate\\:\\(\\[D\\[DII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.UnivariateStatistic\\.evaluate\\:\\(\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.UnivariateStatistic\\.evaluate\\:\\(\\[DII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.SynchronizedDescriptiveStatistics\\.\\<init\\>\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.SynchronizedDescriptiveStatistics\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/SynchronizedDescriptiveStatistics\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.SynchronizedDescriptiveStatistics\\.setWindowSize\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.SynchronizedDescriptiveStatistics\\.copy\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/SynchronizedDescriptiveStatistics\\;Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/SynchronizedDescriptiveStatistics\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.AggregateSummaryStatistics\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/SummaryStatistics\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.MultivariateSummaryStatistics\\.addValue\\:\\(\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalStateException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.MultivariateSummaryStatistics\\.setImpl\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StorelessUnivariateStatistic\\;\\[Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StorelessUnivariateStatistic\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalStateException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.MultivariateSummaryStatistics\\.setSumImpl\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StorelessUnivariateStatistic\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalStateException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.MultivariateSummaryStatistics\\.setSumsqImpl\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StorelessUnivariateStatistic\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalStateException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.MultivariateSummaryStatistics\\.setMinImpl\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StorelessUnivariateStatistic\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalStateException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.MultivariateSummaryStatistics\\.setMaxImpl\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StorelessUnivariateStatistic\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalStateException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.MultivariateSummaryStatistics\\.setSumLogImpl\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StorelessUnivariateStatistic\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalStateException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.MultivariateSummaryStatistics\\.setGeoMeanImpl\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StorelessUnivariateStatistic\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalStateException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.MultivariateSummaryStatistics\\.setMeanImpl\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StorelessUnivariateStatistic\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.MultivariateSummaryStatistics\\.checkEmpty\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.MultivariateSummaryStatistics\\.checkDimension\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.SynchronizedMultivariateSummaryStatistics\\.addValue\\:\\(\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MathIllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.SynchronizedMultivariateSummaryStatistics\\.setSumImpl\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StorelessUnivariateStatistic\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MathIllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.SynchronizedMultivariateSummaryStatistics\\.setSumsqImpl\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StorelessUnivariateStatistic\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MathIllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.SynchronizedMultivariateSummaryStatistics\\.setMinImpl\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StorelessUnivariateStatistic\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MathIllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.SynchronizedMultivariateSummaryStatistics\\.setMaxImpl\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StorelessUnivariateStatistic\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MathIllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.SynchronizedMultivariateSummaryStatistics\\.setSumLogImpl\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StorelessUnivariateStatistic\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MathIllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.SynchronizedMultivariateSummaryStatistics\\.setGeoMeanImpl\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StorelessUnivariateStatistic\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MathIllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.SynchronizedMultivariateSummaryStatistics\\.setMeanImpl\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StorelessUnivariateStatistic\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.AbstractStorelessUnivariateStatistic\\.evaluate\\:\\(\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.AbstractStorelessUnivariateStatistic\\.evaluate\\:\\(\\[DII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.AbstractStorelessUnivariateStatistic\\.incrementAll\\:\\(\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.AbstractStorelessUnivariateStatistic\\.incrementAll\\:\\(\\[DII\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.StorelessUnivariateStatistic\\.incrementAll\\:\\(\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.StorelessUnivariateStatistic\\.incrementAll\\:\\(\\[DII\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.rank\\.Percentile\\.\\<init\\>\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.rank\\.Percentile\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/rank\\/Percentile\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.rank\\.Percentile\\.setData\\:\\(\\[DII\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.rank\\.Percentile\\.evaluate\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.rank\\.Percentile\\.evaluate\\:\\(\\[DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.rank\\.Percentile\\.evaluate\\:\\(\\[DII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.rank\\.Percentile\\.evaluate\\:\\(\\[DIID\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.rank\\.Percentile\\.setQuantile\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.rank\\.Percentile\\.copy\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/rank\\/Percentile\\;Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/rank\\/Percentile\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.rank\\.Median\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/rank\\/Median\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.rank\\.Min\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/rank\\/Min\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.rank\\.Min\\.evaluate\\:\\(\\[DII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.rank\\.Min\\.copy\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/rank\\/Min\\;Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/rank\\/Min\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.rank\\.Max\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/rank\\/Max\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.rank\\.Max\\.evaluate\\:\\(\\[DII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.rank\\.Max\\.copy\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/rank\\/Max\\;Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/rank\\/Max\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.DescriptiveStatistics\\.\\<init\\>\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.DescriptiveStatistics\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/DescriptiveStatistics\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.DescriptiveStatistics\\.removeMostRecentValue\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.DescriptiveStatistics\\.replaceMostRecentValue\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.DescriptiveStatistics\\.setWindowSize\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalStateException", 
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.DescriptiveStatistics\\.getPercentile\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.DescriptiveStatistics\\.setPercentileImpl\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/UnivariateStatistic\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.DescriptiveStatistics\\.copy\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/DescriptiveStatistics\\;Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/DescriptiveStatistics\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.summary\\.SumOfSquares\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/summary\\/SumOfSquares\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.summary\\.SumOfSquares\\.evaluate\\:\\(\\[DII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.summary\\.SumOfSquares\\.copy\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/summary\\/SumOfSquares\\;Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/summary\\/SumOfSquares\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.summary\\.Sum\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/summary\\/Sum\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.summary\\.Sum\\.evaluate\\:\\(\\[DII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.summary\\.Sum\\.evaluate\\:\\(\\[D\\[DII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.summary\\.Sum\\.evaluate\\:\\(\\[D\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.summary\\.Sum\\.copy\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/summary\\/Sum\\;Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/summary\\/Sum\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.summary\\.SumOfLogs\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/summary\\/SumOfLogs\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.summary\\.SumOfLogs\\.evaluate\\:\\(\\[DII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.summary\\.SumOfLogs\\.copy\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/summary\\/SumOfLogs\\;Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/summary\\/SumOfLogs\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.summary\\.Product\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/summary\\/Product\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.summary\\.Product\\.evaluate\\:\\(\\[DII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.summary\\.Product\\.evaluate\\:\\(\\[D\\[DII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.summary\\.Product\\.evaluate\\:\\(\\[D\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.summary\\.Product\\.copy\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/summary\\/Product\\;Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/summary\\/Product\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.SummaryStatistics\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/SummaryStatistics\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.SummaryStatistics\\.setSumImpl\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StorelessUnivariateStatistic\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.SummaryStatistics\\.setSumsqImpl\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StorelessUnivariateStatistic\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.SummaryStatistics\\.setMinImpl\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StorelessUnivariateStatistic\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.SummaryStatistics\\.setMaxImpl\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StorelessUnivariateStatistic\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.SummaryStatistics\\.setSumLogImpl\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StorelessUnivariateStatistic\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.SummaryStatistics\\.setGeoMeanImpl\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StorelessUnivariateStatistic\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.SummaryStatistics\\.setMeanImpl\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StorelessUnivariateStatistic\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.SummaryStatistics\\.setVarianceImpl\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StorelessUnivariateStatistic\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.SummaryStatistics\\.checkEmpty\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.SummaryStatistics\\.copy\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/SummaryStatistics\\;Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/SummaryStatistics\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.FirstMoment\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/moment\\/FirstMoment\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.FirstMoment\\.copy\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/moment\\/FirstMoment\\;Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/moment\\/FirstMoment\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.VectorialCovariance\\.increment\\:\\(\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.Kurtosis\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/moment\\/Kurtosis\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.Kurtosis\\.evaluate\\:\\(\\[DII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.Kurtosis\\.copy\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/moment\\/Kurtosis\\;Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/moment\\/Kurtosis\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.SemiVariance\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/moment\\/SemiVariance\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.SemiVariance\\.copy\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/moment\\/SemiVariance\\;Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/moment\\/SemiVariance\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.SemiVariance\\.evaluate\\:\\(\\[DII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.SemiVariance\\.evaluate\\:\\(\\[DLorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/moment\\/SemiVariance\\$Direction\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.SemiVariance\\.evaluate\\:\\(\\[DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.SemiVariance\\.evaluate\\:\\(\\[DDLorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/moment\\/SemiVariance\\$Direction\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.SemiVariance\\.evaluate\\:\\(\\[DDLorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/moment\\/SemiVariance\\$Direction\\;ZII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.ThirdMoment\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/moment\\/ThirdMoment\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.ThirdMoment\\.copy\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/moment\\/ThirdMoment\\;Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/moment\\/ThirdMoment\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.Mean\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/moment\\/Mean\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.Mean\\.evaluate\\:\\(\\[DII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.Mean\\.evaluate\\:\\(\\[D\\[DII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.Mean\\.evaluate\\:\\(\\[D\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.Mean\\.copy\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/moment\\/Mean\\;Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/moment\\/Mean\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.Skewness\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/moment\\/Skewness\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.Skewness\\.evaluate\\:\\(\\[DII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.Skewness\\.copy\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/moment\\/Skewness\\;Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/moment\\/Skewness\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.VectorialMean\\.increment\\:\\(\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.SecondMoment\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/moment\\/SecondMoment\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.SecondMoment\\.copy\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/moment\\/SecondMoment\\;Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/moment\\/SecondMoment\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.StandardDeviation\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/moment\\/StandardDeviation\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.StandardDeviation\\.evaluate\\:\\(\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.StandardDeviation\\.evaluate\\:\\(\\[DII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.StandardDeviation\\.evaluate\\:\\(\\[DDII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.StandardDeviation\\.evaluate\\:\\(\\[DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.StandardDeviation\\.copy\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/moment\\/StandardDeviation\\;Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/moment\\/StandardDeviation\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.GeometricMean\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/moment\\/GeometricMean\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.GeometricMean\\.evaluate\\:\\(\\[DII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.GeometricMean\\.setSumLogImpl\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StorelessUnivariateStatistic\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.GeometricMean\\.copy\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/moment\\/GeometricMean\\;Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/moment\\/GeometricMean\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.GeometricMean\\.checkEmpty\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.FourthMoment\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/moment\\/FourthMoment\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.FourthMoment\\.copy\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/moment\\/FourthMoment\\;Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/moment\\/FourthMoment\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.Variance\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/moment\\/Variance\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.Variance\\.evaluate\\:\\(\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.Variance\\.evaluate\\:\\(\\[DII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.Variance\\.evaluate\\:\\(\\[D\\[DII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.Variance\\.evaluate\\:\\(\\[D\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.Variance\\.evaluate\\:\\(\\[DDII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.Variance\\.evaluate\\:\\(\\[DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.Variance\\.evaluate\\:\\(\\[D\\[DDII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.Variance\\.evaluate\\:\\(\\[D\\[DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.moment\\.Variance\\.copy\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/moment\\/Variance\\;Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/moment\\/Variance\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.SynchronizedSummaryStatistics\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/SynchronizedSummaryStatistics\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.SynchronizedSummaryStatistics\\.setSumImpl\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StorelessUnivariateStatistic\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.SynchronizedSummaryStatistics\\.setSumsqImpl\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StorelessUnivariateStatistic\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.SynchronizedSummaryStatistics\\.setMinImpl\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StorelessUnivariateStatistic\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.SynchronizedSummaryStatistics\\.setMaxImpl\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StorelessUnivariateStatistic\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.SynchronizedSummaryStatistics\\.setSumLogImpl\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StorelessUnivariateStatistic\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.SynchronizedSummaryStatistics\\.setGeoMeanImpl\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StorelessUnivariateStatistic\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.SynchronizedSummaryStatistics\\.setMeanImpl\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StorelessUnivariateStatistic\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.SynchronizedSummaryStatistics\\.setVarianceImpl\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/StorelessUnivariateStatistic\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.SynchronizedSummaryStatistics\\.copy\\:\\(Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/SynchronizedSummaryStatistics\\;Lorg\\/apache\\/commons\\/math3\\/stat\\/descriptive\\/SynchronizedSummaryStatistics\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.AbstractUnivariateStatistic\\.setData\\:\\(\\[DII\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.AbstractUnivariateStatistic\\.evaluate\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.AbstractUnivariateStatistic\\.evaluate\\:\\(\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.AbstractUnivariateStatistic\\.evaluate\\:\\(\\[DII\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.AbstractUnivariateStatistic\\.test\\:\\(\\[DII\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.AbstractUnivariateStatistic\\.test\\:\\(\\[DIIZ\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.AbstractUnivariateStatistic\\.test\\:\\(\\[D\\[DII\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.descriptive\\.AbstractUnivariateStatistic\\.test\\:\\(\\[D\\[DIIZ\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.correlation\\.StorelessBivariateCovariance\\.getResult\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.correlation\\.Covariance\\.\\<init\\>\\:\\(\\[\\[DZ\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.correlation\\.Covariance\\.\\<init\\>\\:\\(\\[\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.correlation\\.Covariance\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.correlation\\.Covariance\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.correlation\\.Covariance\\.computeCovarianceMatrix\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;Z\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.correlation\\.Covariance\\.computeCovarianceMatrix\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.correlation\\.Covariance\\.computeCovarianceMatrix\\:\\(\\[\\[DZ\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.correlation\\.Covariance\\.computeCovarianceMatrix\\:\\(\\[\\[D\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.correlation\\.Covariance\\.covariance\\:\\(\\[D\\[DZ\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.correlation\\.Covariance\\.covariance\\:\\(\\[D\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.correlation\\.Covariance\\.checkSufficientData\\:\\(Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.correlation\\.StorelessCovariance\\.getCovariance\\:\\(II\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.correlation\\.StorelessCovariance\\.increment\\:\\(\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.correlation\\.StorelessCovariance\\.getCovarianceMatrix\\:\\(\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/RealMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.correlation\\.StorelessCovariance\\.getData\\:\\(\\)\\[\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathUnsupportedOperationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.stat\\.correlation\\.StorelessCovariance\\.getN\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.KolmogorovSmirnovDistribution\\.\\<init\\>\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.KolmogorovSmirnovDistribution\\.cdf\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.KolmogorovSmirnovDistribution\\.cdfExact\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.KolmogorovSmirnovDistribution\\.cdf\\:\\(DZ\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.KolmogorovSmirnovDistribution\\.exactK\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.KolmogorovSmirnovDistribution\\.roundedK\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException", 
   "org.apache.commons.math3.fraction.FractionConversionException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.KolmogorovSmirnovDistribution\\.createH\\:\\(D\\)Lorg\\/apache\\/commons\\/math3\\/linear\\/FieldMatrix\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.GammaDistribution\\.\\<init\\>\\:\\(DD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.GammaDistribution\\.\\<init\\>\\:\\(DDD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.GammaDistribution\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/random\\/RandomGenerator\\;DDD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.fitting\\.MultivariateNormalMixtureExpectationMaximization\\.\\<init\\>\\:\\(\\[\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.SingularMatrixException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.fitting\\.MultivariateNormalMixtureExpectationMaximization\\.fit\\:\\(Lorg\\/apache\\/commons\\/math3\\/distribution\\/MixtureMultivariateNormalDistribution\\;ID\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.SingularMatrixException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.fitting\\.MultivariateNormalMixtureExpectationMaximization\\.fit\\:\\(Lorg\\/apache\\/commons\\/math3\\/distribution\\/MixtureMultivariateNormalDistribution\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.fitting\\.MultivariateNormalMixtureExpectationMaximization\\.estimate\\:\\(\\[\\[DI\\)Lorg\\/apache\\/commons\\/math3\\/distribution\\/MixtureMultivariateNormalDistribution\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.ZipfDistribution\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/random\\/RandomGenerator\\;ID\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.CauchyDistribution\\.inverseCumulativeProbability\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.NormalDistribution\\.\\<init\\>\\:\\(DD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.NormalDistribution\\.\\<init\\>\\:\\(DDD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.NormalDistribution\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/random\\/RandomGenerator\\;DDD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.NormalDistribution\\.inverseCumulativeProbability\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.NormalDistribution\\.cumulativeProbability\\:\\(DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.NormalDistribution\\.probability\\:\\(DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.TriangularDistribution\\.\\<init\\>\\:\\(DDD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.TriangularDistribution\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/random\\/RandomGenerator\\;DDD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.TriangularDistribution\\.inverseCumulativeProbability\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.MixtureMultivariateNormalDistribution\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/random\\/RandomGenerator\\;Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.MultivariateRealDistribution\\.sample\\:\\(I\\)\\[\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.SingularMatrixException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.MultivariateNormalDistribution\\.\\<init\\>\\:\\(\\[D\\[\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.linear.SingularMatrixException", 
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.MultivariateNormalDistribution\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/random\\/RandomGenerator\\;\\[D\\[\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.MultivariateNormalDistribution\\.density\\:\\(\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.PoissonDistribution\\.\\<init\\>\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.PoissonDistribution\\.\\<init\\>\\:\\(DDI\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.PoissonDistribution\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/random\\/RandomGenerator\\;DDI\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.PoissonDistribution\\.\\<init\\>\\:\\(DD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.AbstractIntegerDistribution\\.cumulativeProbability\\:\\(II\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.AbstractIntegerDistribution\\.inverseCumulativeProbability\\:\\(D\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathInternalError"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.AbstractIntegerDistribution\\.checkedCumulativeProbability\\:\\(I\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.IntegerDistribution\\.cumulativeProbability\\:\\(II\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.IntegerDistribution\\.inverseCumulativeProbability\\:\\(D\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.UniformIntegerDistribution\\.\\<init\\>\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.UniformIntegerDistribution\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/random\\/RandomGenerator\\;II\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.LevyDistribution\\.inverseCumulativeProbability\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.TDistribution\\.\\<init\\>\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.TDistribution\\.\\<init\\>\\:\\(DD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.TDistribution\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/random\\/RandomGenerator\\;DD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.FDistribution\\.\\<init\\>\\:\\(DD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.FDistribution\\.\\<init\\>\\:\\(DDD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.FDistribution\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/random\\/RandomGenerator\\;DDD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.ExponentialDistribution\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/random\\/RandomGenerator\\;DD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.ExponentialDistribution\\.inverseCumulativeProbability\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.MathArithmeticException", 
   "org.apache.commons.math3.exception.NotFiniteNumberException", 
   "org.apache.commons.math3.exception.NotANumberException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.EnumeratedDistribution\\.\\<init\\>\\:\\(Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.MathArithmeticException", 
   "org.apache.commons.math3.exception.NotFiniteNumberException", 
   "org.apache.commons.math3.exception.NotANumberException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.EnumeratedDistribution\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/random\\/RandomGenerator\\;Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.EnumeratedDistribution\\.sample\\:\\(I\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.EnumeratedDistribution\\.sample\\:\\(I\\[Ljava\\/lang\\/Object\\;\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.UniformRealDistribution\\.\\<init\\>\\:\\(DD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.UniformRealDistribution\\.\\<init\\>\\:\\(DDD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.UniformRealDistribution\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/random\\/RandomGenerator\\;DD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.UniformRealDistribution\\.inverseCumulativeProbability\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.WeibullDistribution\\.\\<init\\>\\:\\(DD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.WeibullDistribution\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/random\\/RandomGenerator\\;DDD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.RealDistribution\\.cumulativeProbability\\:\\(DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.RealDistribution\\.inverseCumulativeProbability\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.PascalDistribution\\.\\<init\\>\\:\\(ID\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.PascalDistribution\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/random\\/RandomGenerator\\;ID\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.LogNormalDistribution\\.\\<init\\>\\:\\(DD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.LogNormalDistribution\\.\\<init\\>\\:\\(DDD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.LogNormalDistribution\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/random\\/RandomGenerator\\;DDD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.LogNormalDistribution\\.cumulativeProbability\\:\\(DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.LogNormalDistribution\\.probability\\:\\(DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.MathArithmeticException", 
   "org.apache.commons.math3.exception.NotFiniteNumberException", 
   "org.apache.commons.math3.exception.NotANumberException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.EnumeratedRealDistribution\\.\\<init\\>\\:\\(\\[D\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.MathArithmeticException", 
   "org.apache.commons.math3.exception.NotFiniteNumberException", 
   "org.apache.commons.math3.exception.NotANumberException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.EnumeratedRealDistribution\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/random\\/RandomGenerator\\;\\[D\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.MathArithmeticException", 
   "org.apache.commons.math3.exception.NotFiniteNumberException", 
   "org.apache.commons.math3.exception.NotANumberException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.EnumeratedIntegerDistribution\\.\\<init\\>\\:\\(\\[I\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.MathArithmeticException", 
   "org.apache.commons.math3.exception.NotFiniteNumberException", 
   "org.apache.commons.math3.exception.NotANumberException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.EnumeratedIntegerDistribution\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/random\\/RandomGenerator\\;\\[I\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.AbstractRealDistribution\\.cumulativeProbability\\:\\(DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.AbstractRealDistribution\\.inverseCumulativeProbability\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.HypergeometricDistribution\\.\\<init\\>\\:\\(III\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.NotStrictlyPositiveException", 
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.distribution\\.HypergeometricDistribution\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/random\\/RandomGenerator\\;III\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.exception\\.util\\.ExceptionContext\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.exception\\.util\\.ExceptionContext\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.exception\\.util\\.ExceptionContext\\.serializeMessages\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.exception\\.util\\.ExceptionContext\\.deSerializeMessages\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.exception\\.util\\.ExceptionContext\\.serializeContext\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.exception\\.util\\.ExceptionContext\\.deSerializeContext\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.ConvergenceException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ContinuedFraction\\.evaluate\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.ConvergenceException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ContinuedFraction\\.evaluate\\:\\(DD\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.ConvergenceException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ContinuedFraction\\.evaluate\\:\\(DI\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.ConvergenceException", 
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ContinuedFraction\\.evaluate\\:\\(DDI\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.Incrementor\\$MaxCountExceededCallback\\.trigger\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.IterationManager\\.incrementIterationCount\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.util.ConcurrentModificationException", 
   "java.util.NoSuchElementException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.OpenIntToDoubleHashMap\\$Iterator\\.key\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.util.ConcurrentModificationException", 
   "java.util.NoSuchElementException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.OpenIntToDoubleHashMap\\$Iterator\\.value\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.util.ConcurrentModificationException", 
   "java.util.NoSuchElementException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.OpenIntToDoubleHashMap\\$Iterator\\.advance\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.BigReal\\.divide\\:\\(Lorg\\/apache\\/commons\\/math3\\/util\\/BigReal\\;\\)Lorg\\/apache\\/commons\\/math3\\/util\\/BigReal\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.BigReal\\.reciprocal\\:\\(\\)Lorg\\/apache\\/commons\\/math3\\/util\\/BigReal\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.BigReal\\.reciprocal\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.BigReal\\.divide\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.BigReal\\.multiply\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.BigReal\\.subtract\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.BigReal\\.add\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.OpenIntToDoubleHashMap\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.MathUtils\\.copySign\\:\\(BB\\)B"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.MathUtils\\.copySign\\:\\(SS\\)S"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.MathUtils\\.copySign\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.MathUtils\\.copySign\\:\\(JJ\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotFiniteNumberException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.MathUtils\\.checkFinite\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotFiniteNumberException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.MathUtils\\.checkFinite\\:\\(\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.MathUtils\\.checkNotNull\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/apache\\/commons\\/math3\\/exception\\/util\\/Localizable\\;\\[Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.MathUtils\\.checkNotNull\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.OpenIntToFieldHashMap\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException", 
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.Precision\\.round\\:\\(FII\\)F"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException", 
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.Precision\\.roundUnscaled\\:\\(DDI\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ResizableDoubleArray\\.\\<init\\>\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ResizableDoubleArray\\.\\<init\\>\\:\\(IF\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ResizableDoubleArray\\.\\<init\\>\\:\\(ID\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ResizableDoubleArray\\.\\<init\\>\\:\\(IFF\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ResizableDoubleArray\\.\\<init\\>\\:\\(IDD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ResizableDoubleArray\\.\\<init\\>\\:\\(IFFI\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ResizableDoubleArray\\.\\<init\\>\\:\\(IDDLorg\\/apache\\/commons\\/math3\\/util\\/ResizableDoubleArray\\$ExpansionMode\\;\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ResizableDoubleArray\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/util\\/ResizableDoubleArray\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ResizableDoubleArray\\.substituteMostRecentElement\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ResizableDoubleArray\\.checkContractExpand\\:\\(FF\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ResizableDoubleArray\\.checkContractExpand\\:\\(DD\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ResizableDoubleArray\\.discardFrontElements\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ResizableDoubleArray\\.discardMostRecentElements\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ResizableDoubleArray\\.discardExtremeElements\\:\\(IZ\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ResizableDoubleArray\\.setContractionCriteria\\:\\(F\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ResizableDoubleArray\\.setExpansionFactor\\:\\(F\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ResizableDoubleArray\\.setExpansionMode\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ResizableDoubleArray\\.setInitialCapacity\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ResizableDoubleArray\\.setNumElements\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ResizableDoubleArray\\.copy\\:\\(Lorg\\/apache\\/commons\\/math3\\/util\\/ResizableDoubleArray\\;Lorg\\/apache\\/commons\\/math3\\/util\\/ResizableDoubleArray\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.Decimal64\\.linearCombination\\:\\(\\[Lorg\\/apache\\/commons\\/math3\\/util\\/Decimal64\\;\\[Lorg\\/apache\\/commons\\/math3\\/util\\/Decimal64\\;\\)Lorg\\/apache\\/commons\\/math3\\/util\\/Decimal64\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.Decimal64\\.linearCombination\\:\\(\\[D\\[Lorg\\/apache\\/commons\\/math3\\/util\\/Decimal64\\;\\)Lorg\\/apache\\/commons\\/math3\\/util\\/Decimal64\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.Decimal64\\.linearCombination\\:\\(\\[D\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.Decimal64\\.linearCombination\\:\\(\\[Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.Decimal64\\.atan2\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.Decimal64\\.pow\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.Decimal64\\.hypot\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.Decimal64\\.remainder\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.Decimal64\\.divide\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.Decimal64\\.multiply\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.Decimal64\\.subtract\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.Decimal64\\.add\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.FastMathCalc\\.checkLen\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.DefaultTransformer\\.transform\\:\\(Ljava\\/lang\\/Object\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.TransformerMap\\.transform\\:\\(Ljava\\/lang\\/Object\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.Incrementor\\.\\<init\\>\\:\\(ILorg\\/apache\\/commons\\/math3\\/util\\/Incrementor\\$MaxCountExceededCallback\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.Incrementor\\.incrementCount\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.Incrementor\\.incrementCount\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.MultidimensionalCounter\\.\\<init\\>\\:\\(\\[I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.MultidimensionalCounter\\.getCounts\\:\\(I\\)\\[I"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.MultidimensionalCounter\\.getCount\\:\\(\\[I\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.MathArrays\\.ebeAdd\\:\\(\\[D\\[D\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.MathArrays\\.ebeSubtract\\:\\(\\[D\\[D\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.MathArrays\\.ebeMultiply\\:\\(\\[D\\[D\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.MathArrays\\.ebeDivide\\:\\(\\[D\\[D\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NonMonotonicSequenceException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.MathArrays\\.checkOrder\\:\\(\\[DLorg\\/apache\\/commons\\/math3\\/util\\/MathArrays\\$OrderDirection\\;ZZ\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NonMonotonicSequenceException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.MathArrays\\.checkOrder\\:\\(\\[DLorg\\/apache\\/commons\\/math3\\/util\\/MathArrays\\$OrderDirection\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NonMonotonicSequenceException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.MathArrays\\.checkOrder\\:\\(\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.MathArrays\\.checkRectangular\\:\\(\\[\\[J\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.MathArrays\\.checkPositive\\:\\(\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.MathArrays\\.checkNonNegative\\:\\(\\[J\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.MathArrays\\.checkNonNegative\\:\\(\\[\\[J\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.MathArrays\\.sortInPlace\\:\\(\\[D\\[\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.MathArrays\\.sortInPlace\\:\\(\\[DLorg\\/apache\\/commons\\/math3\\/util\\/MathArrays\\$OrderDirection\\;\\[\\[D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.MathArrays\\.linearCombination\\:\\(\\[D\\[D\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException", 
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.MathArrays\\.normalizeArray\\:\\(\\[DD\\)\\[D"
 }, 
 {
  "exceptions": [
   "java.util.ConcurrentModificationException", 
   "java.util.NoSuchElementException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.OpenIntToFieldHashMap\\$Iterator\\.key\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.util.ConcurrentModificationException", 
   "java.util.NoSuchElementException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.OpenIntToFieldHashMap\\$Iterator\\.value\\:\\(\\)Lorg\\/apache\\/commons\\/math3\\/FieldElement\\;"
 }, 
 {
  "exceptions": [
   "java.util.ConcurrentModificationException", 
   "java.util.NoSuchElementException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.OpenIntToFieldHashMap\\$Iterator\\.advance\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MaxCountExceededException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.Incrementor\\$1\\.trigger\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.NumberTransformer\\.transform\\:\\(Ljava\\/lang\\/Object\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ArithmeticUtils\\.addAndCheck\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ArithmeticUtils\\.addAndCheck\\:\\(JJ\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.NumberIsTooLargeException", 
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ArithmeticUtils\\.binomialCoefficient\\:\\(II\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.NumberIsTooLargeException", 
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ArithmeticUtils\\.binomialCoefficientDouble\\:\\(II\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.NumberIsTooLargeException", 
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ArithmeticUtils\\.binomialCoefficientLog\\:\\(II\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ArithmeticUtils\\.factorial\\:\\(I\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ArithmeticUtils\\.factorialDouble\\:\\(I\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ArithmeticUtils\\.factorialLog\\:\\(I\\)D"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ArithmeticUtils\\.gcd\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ArithmeticUtils\\.gcd\\:\\(JJ\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ArithmeticUtils\\.lcm\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ArithmeticUtils\\.lcm\\:\\(JJ\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ArithmeticUtils\\.mulAndCheck\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ArithmeticUtils\\.mulAndCheck\\:\\(JJ\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ArithmeticUtils\\.subAndCheck\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ArithmeticUtils\\.subAndCheck\\:\\(JJ\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ArithmeticUtils\\.pow\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ArithmeticUtils\\.pow\\:\\(IJ\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ArithmeticUtils\\.pow\\:\\(JI\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ArithmeticUtils\\.pow\\:\\(JJ\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ArithmeticUtils\\.pow\\:\\(Ljava\\/math\\/BigInteger\\;I\\)Ljava\\/math\\/BigInteger\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ArithmeticUtils\\.pow\\:\\(Ljava\\/math\\/BigInteger\\;J\\)Ljava\\/math\\/BigInteger\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ArithmeticUtils\\.pow\\:\\(Ljava\\/math\\/BigInteger\\;Ljava\\/math\\/BigInteger\\;\\)Ljava\\/math\\/BigInteger\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.NumberIsTooLargeException", 
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ArithmeticUtils\\.stirlingS2\\:\\(II\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ArithmeticUtils\\.addAndCheck\\:\\(JJLorg\\/apache\\/commons\\/math3\\/exception\\/util\\/Localizable\\;\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException", 
   "org.apache.commons.math3.exception.NotPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.util\\.ArithmeticUtils\\.checkBinomial\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.genetics\\.OnePointCrossover\\.crossover\\:\\(Lorg\\/apache\\/commons\\/math3\\/genetics\\/Chromosome\\;Lorg\\/apache\\/commons\\/math3\\/genetics\\/Chromosome\\;\\)Lorg\\/apache\\/commons\\/math3\\/genetics\\/ChromosomePair\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.genetics\\.OnePointCrossover\\.crossover\\:\\(Lorg\\/apache\\/commons\\/math3\\/genetics\\/AbstractListChromosome\\;Lorg\\/apache\\/commons\\/math3\\/genetics\\/AbstractListChromosome\\;\\)Lorg\\/apache\\/commons\\/math3\\/genetics\\/ChromosomePair\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.genetics\\.OrderedCrossover\\.crossover\\:\\(Lorg\\/apache\\/commons\\/math3\\/genetics\\/Chromosome\\;Lorg\\/apache\\/commons\\/math3\\/genetics\\/Chromosome\\;\\)Lorg\\/apache\\/commons\\/math3\\/genetics\\/ChromosomePair\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.genetics\\.OrderedCrossover\\.mate\\:\\(Lorg\\/apache\\/commons\\/math3\\/genetics\\/AbstractListChromosome\\;Lorg\\/apache\\/commons\\/math3\\/genetics\\/AbstractListChromosome\\;\\)Lorg\\/apache\\/commons\\/math3\\/genetics\\/ChromosomePair\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.genetics\\.Population\\.addChromosome\\:\\(Lorg\\/apache\\/commons\\/math3\\/genetics\\/Chromosome\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.genetics\\.UniformCrossover\\.\\<init\\>\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.genetics\\.UniformCrossover\\.crossover\\:\\(Lorg\\/apache\\/commons\\/math3\\/genetics\\/Chromosome\\;Lorg\\/apache\\/commons\\/math3\\/genetics\\/Chromosome\\;\\)Lorg\\/apache\\/commons\\/math3\\/genetics\\/ChromosomePair\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.genetics\\.UniformCrossover\\.mate\\:\\(Lorg\\/apache\\/commons\\/math3\\/genetics\\/AbstractListChromosome\\;Lorg\\/apache\\/commons\\/math3\\/genetics\\/AbstractListChromosome\\;\\)Lorg\\/apache\\/commons\\/math3\\/genetics\\/ChromosomePair\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.NumberIsTooLargeException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.genetics\\.ElitisticListPopulation\\.\\<init\\>\\:\\(Ljava\\/util\\/List\\;ID\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.genetics\\.ElitisticListPopulation\\.\\<init\\>\\:\\(ID\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.genetics\\.ElitisticListPopulation\\.setElitismRate\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.genetics\\.FixedElapsedTime\\.\\<init\\>\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.genetics\\.FixedElapsedTime\\.\\<init\\>\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.OutOfRangeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.genetics\\.GeneticAlgorithm\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/math3\\/genetics\\/CrossoverPolicy\\;DLorg\\/apache\\/commons\\/math3\\/genetics\\/MutationPolicy\\;DLorg\\/apache\\/commons\\/math3\\/genetics\\/SelectionPolicy\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.genetics\\.MutationPolicy\\.mutate\\:\\(Lorg\\/apache\\/commons\\/math3\\/genetics\\/Chromosome\\;\\)Lorg\\/apache\\/commons\\/math3\\/genetics\\/Chromosome\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.genetics.InvalidRepresentationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.genetics\\.RandomKey\\.\\<init\\>\\:\\(Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.genetics.InvalidRepresentationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.genetics\\.RandomKey\\.\\<init\\>\\:\\(\\[Ljava\\/lang\\/Double\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.genetics\\.RandomKey\\.decodeGeneric\\:\\(Ljava\\/util\\/List\\;Ljava\\/util\\/List\\;Ljava\\/util\\/List\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.genetics.InvalidRepresentationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.genetics\\.RandomKey\\.checkValidity\\:\\(Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.genetics\\.RandomKey\\.inducedPermutation\\:\\(Ljava\\/util\\/List\\;Ljava\\/util\\/List\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.genetics\\.ListPopulation\\.\\<init\\>\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.genetics\\.ListPopulation\\.\\<init\\>\\:\\(Ljava\\/util\\/List\\;I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.genetics\\.ListPopulation\\.setChromosomes\\:\\(Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.genetics\\.ListPopulation\\.addChromosomes\\:\\(Ljava\\/util\\/Collection\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.genetics\\.ListPopulation\\.addChromosome\\:\\(Lorg\\/apache\\/commons\\/math3\\/genetics\\/Chromosome\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotPositiveException", 
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.genetics\\.ListPopulation\\.setPopulationLimit\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.genetics.InvalidRepresentationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.genetics\\.AbstractListChromosome\\.\\<init\\>\\:\\(Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.genetics.InvalidRepresentationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.genetics\\.AbstractListChromosome\\.\\<init\\>\\:\\(\\[Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.genetics.InvalidRepresentationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.genetics\\.AbstractListChromosome\\.checkValidity\\:\\(Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NotStrictlyPositiveException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.genetics\\.NPointCrossover\\.\\<init\\>\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.genetics\\.NPointCrossover\\.crossover\\:\\(Lorg\\/apache\\/commons\\/math3\\/genetics\\/Chromosome\\;Lorg\\/apache\\/commons\\/math3\\/genetics\\/Chromosome\\;\\)Lorg\\/apache\\/commons\\/math3\\/genetics\\/ChromosomePair\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.NumberIsTooLargeException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.genetics\\.NPointCrossover\\.mate\\:\\(Lorg\\/apache\\/commons\\/math3\\/genetics\\/AbstractListChromosome\\;Lorg\\/apache\\/commons\\/math3\\/genetics\\/AbstractListChromosome\\;\\)Lorg\\/apache\\/commons\\/math3\\/genetics\\/ChromosomePair\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException", 
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.genetics\\.CycleCrossover\\.crossover\\:\\(Lorg\\/apache\\/commons\\/math3\\/genetics\\/Chromosome\\;Lorg\\/apache\\/commons\\/math3\\/genetics\\/Chromosome\\;\\)Lorg\\/apache\\/commons\\/math3\\/genetics\\/ChromosomePair\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.DimensionMismatchException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.genetics\\.CycleCrossover\\.mate\\:\\(Lorg\\/apache\\/commons\\/math3\\/genetics\\/AbstractListChromosome\\;Lorg\\/apache\\/commons\\/math3\\/genetics\\/AbstractListChromosome\\;\\)Lorg\\/apache\\/commons\\/math3\\/genetics\\/ChromosomePair\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.genetics\\.CrossoverPolicy\\.crossover\\:\\(Lorg\\/apache\\/commons\\/math3\\/genetics\\/Chromosome\\;Lorg\\/apache\\/commons\\/math3\\/genetics\\/Chromosome\\;\\)Lorg\\/apache\\/commons\\/math3\\/genetics\\/ChromosomePair\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.genetics\\.TournamentSelection\\.select\\:\\(Lorg\\/apache\\/commons\\/math3\\/genetics\\/Population\\;\\)Lorg\\/apache\\/commons\\/math3\\/genetics\\/ChromosomePair\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.genetics\\.TournamentSelection\\.tournament\\:\\(Lorg\\/apache\\/commons\\/math3\\/genetics\\/ListPopulation\\;\\)Lorg\\/apache\\/commons\\/math3\\/genetics\\/Chromosome\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.genetics\\.RandomKeyMutation\\.mutate\\:\\(Lorg\\/apache\\/commons\\/math3\\/genetics\\/Chromosome\\;\\)Lorg\\/apache\\/commons\\/math3\\/genetics\\/Chromosome\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.genetics.InvalidRepresentationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.genetics\\.BinaryChromosome\\.\\<init\\>\\:\\(Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.genetics.InvalidRepresentationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.genetics\\.BinaryChromosome\\.\\<init\\>\\:\\(\\[Ljava\\/lang\\/Integer\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.genetics.InvalidRepresentationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.genetics\\.BinaryChromosome\\.checkValidity\\:\\(Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.genetics\\.BinaryMutation\\.mutate\\:\\(Lorg\\/apache\\/commons\\/math3\\/genetics\\/Chromosome\\;\\)Lorg\\/apache\\/commons\\/math3\\/genetics\\/Chromosome\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NumberIsTooSmallException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.genetics\\.FixedGenerationCount\\.\\<init\\>\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.genetics\\.SelectionPolicy\\.select\\:\\(Lorg\\/apache\\/commons\\/math3\\/genetics\\/Population\\;\\)Lorg\\/apache\\/commons\\/math3\\/genetics\\/ChromosomePair\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.fraction.FractionConversionException", 
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.fraction\\.FractionFormat\\.format\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/StringBuffer\\;Ljava\\/text\\/FieldPosition\\;\\)Ljava\\/lang\\/StringBuffer\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathParseException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.fraction\\.FractionFormat\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/commons\\/math3\\/fraction\\/Fraction\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.fraction\\.FractionFormat\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Number\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathParseException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.fraction\\.BigFractionFormat\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/commons\\/math3\\/fraction\\/BigFraction\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.fraction\\.BigFractionFormat\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Number\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathIllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.fraction\\.BigFraction\\.\\<init\\>\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.fraction.FractionConversionException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.fraction\\.BigFraction\\.\\<init\\>\\:\\(DDI\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.fraction.FractionConversionException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.fraction\\.BigFraction\\.\\<init\\>\\:\\(DDII\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.fraction.FractionConversionException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.fraction\\.BigFraction\\.\\<init\\>\\:\\(DI\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.fraction\\.BigFraction\\.add\\:\\(Ljava\\/math\\/BigInteger\\;\\)Lorg\\/apache\\/commons\\/math3\\/fraction\\/BigFraction\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.fraction\\.BigFraction\\.reciprocal\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.fraction\\.BigFraction\\.divide\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.fraction\\.BigFraction\\.multiply\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.fraction\\.BigFraction\\.subtract\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.fraction\\.BigFraction\\.add\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.fraction.FractionConversionException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.fraction\\.Fraction\\.\\<init\\>\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.fraction.FractionConversionException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.fraction\\.Fraction\\.\\<init\\>\\:\\(DDI\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.fraction.FractionConversionException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.fraction\\.Fraction\\.\\<init\\>\\:\\(DI\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.fraction.FractionConversionException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.fraction\\.Fraction\\.\\<init\\>\\:\\(DDII\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.fraction\\.Fraction\\.reciprocal\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException", 
   "org.apache.commons.math3.exception.MathArithmeticException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.fraction\\.Fraction\\.divide\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.fraction\\.Fraction\\.multiply\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.fraction\\.Fraction\\.subtract\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.math3.exception.NullArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.math3\\.fraction\\.Fraction\\.add\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.generators\\.annotations\\.APGeneratorDestinaton\\.newResource\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.generators\\.annotations\\.APGeneratorDestinaton\\.getResource\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.openjdk\\.jmh\\.generators\\.annotations\\.APGeneratorDestinaton\\.newClass\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/Writer\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.RT\\.getAgent\\:\\(\\)Lorg\\/jacoco\\/agent\\/rt\\/IAgent\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.IAgent\\.dump\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.JmxRegistration\\.\\<init\\>\\:\\(Lorg\\/jacoco\\/agent\\/rt\\/IAgent\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.JmxRegistration\\.call\\:\\(\\)Ljava\\/lang\\/Void\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.JmxRegistration\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.PreMain\\.premain\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/instrument\\/Instrumentation\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.PreMain\\.createRuntime\\:\\(Ljava\\/lang\\/instrument\\/Instrumentation\\;\\)Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/IRuntime\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.ClassFileDumper\\.dump\\:\\(Ljava\\/lang\\/String\\;\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.Agent\\.getInstance\\:\\(\\)Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/Agent\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.Agent\\.dump\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.TcpConnection\\.init\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.TcpConnection\\.run\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.TcpConnection\\.writeExecutionData\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.TcpConnection\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.TcpConnection\\.visitDumpCommand\\:\\(ZZ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.TcpClientOutput\\.startup\\:\\(Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/AgentOptions\\;Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/RuntimeData\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.TcpClientOutput\\.shutdown\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.TcpClientOutput\\.writeExecutionData\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.TcpClientOutput\\.createSocket\\:\\(Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/AgentOptions\\;\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.FileOutput\\.startup\\:\\(Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/AgentOptions\\;Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/RuntimeData\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.FileOutput\\.writeExecutionData\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.FileOutput\\.shutdown\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.FileOutput\\.openFile\\:\\(\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.TcpServerOutput\\.startup\\:\\(Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/AgentOptions\\;Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/RuntimeData\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.TcpServerOutput\\.shutdown\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.TcpServerOutput\\.writeExecutionData\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.TcpServerOutput\\.createServerSocket\\:\\(Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/AgentOptions\\;\\)Ljava\\/net\\/ServerSocket\\;"
 }, 
 {
  "exceptions": [
   "java.net.UnknownHostException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.TcpServerOutput\\.getInetAddress\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/net\\/InetAddress\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.IAgentOutput\\.startup\\:\\(Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/AgentOptions\\;Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/RuntimeData\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.IAgentOutput\\.shutdown\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.IAgentOutput\\.writeExecutionData\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.instrument.IllegalClassFormatException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.CoverageTransformer\\.transform\\:\\(Ljava\\/lang\\/ClassLoader\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;Ljava\\/security\\/ProtectionDomain\\;\\[B\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.vladium\\.emma\\.rt\\.RT\\.dumpCoverageData\\:\\(Ljava\\/io\\/File\\;ZZ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.vladium\\.emma\\.rt\\.RT\\.dumpCoverageData\\:\\(Ljava\\/io\\/File\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.jacoco.agent.rt.internal_28bab1d.core.data.IncompatibleExecDataVersionException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.data\\.ExecutionDataReader\\.read\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.data\\.ExecutionDataReader\\.readBlock\\:\\(B\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.data\\.ExecutionDataReader\\.readHeader\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.data\\.ExecutionDataReader\\.readSessionInfo\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.data\\.ExecutionDataReader\\.readExecutionData\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.data\\.ExecutionDataStore\\.put\\:\\(Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/data\\/ExecutionData\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.data\\.ExecutionDataStore\\.subtract\\:\\(Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/data\\/ExecutionData\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.data\\.ExecutionData\\.assertCompatibility\\:\\(JLjava\\/lang\\/String\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.data\\.ExecutionDataWriter\\.\\<init\\>\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.data\\.ExecutionDataWriter\\.writeHeader\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.data\\.ExecutionDataWriter\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.runtime\\.RemoteControlReader\\.\\<init\\>\\:\\(Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.runtime\\.RemoteControlReader\\.readBlock\\:\\(B\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.runtime\\.RemoteControlReader\\.readDumpCommand\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.runtime\\.ModifiedSystemClassRuntime\\.startup\\:\\(Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/RuntimeData\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.runtime\\.ModifiedSystemClassRuntime\\.createFor\\:\\(Ljava\\/lang\\/instrument\\/Instrumentation\\;Ljava\\/lang\\/String\\;\\)Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/IRuntime\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.runtime\\.ModifiedSystemClassRuntime\\.createFor\\:\\(Ljava\\/lang\\/instrument\\/Instrumentation\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/IRuntime\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.runtime\\.IRuntime\\.startup\\:\\(Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/RuntimeData\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.runtime\\.IRemoteCommandVisitor\\.visitDumpCommand\\:\\(ZZ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.runtime\\.RemoteControlWriter\\.\\<init\\>\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.runtime\\.RemoteControlWriter\\.sendCmdOk\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.runtime\\.RemoteControlWriter\\.visitDumpCommand\\:\\(ZZ\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.runtime\\.AbstractRuntime\\.startup\\:\\(Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/RuntimeData\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.instrument.IllegalClassFormatException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.runtime\\.ModifiedSystemClassRuntime\\$1\\.transform\\:\\(Ljava\\/lang\\/ClassLoader\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;Ljava\\/security\\/ProtectionDomain\\;\\[B\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.internal\\.data\\.CompactDataOutput\\.writeVarInt\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.internal\\.data\\.CompactDataOutput\\.writeBooleanArray\\:\\(\\[Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.internal\\.data\\.CompactDataInput\\.readVarInt\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.internal\\.data\\.CompactDataInput\\.readBooleanArray\\:\\(\\)\\[Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.internal\\.Pack200Streams\\$NoCloseInput\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.internal\\.InputStreams\\.readFully\\:\\(Ljava\\/io\\/InputStream\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.internal\\.Pack200Streams\\.unpack\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.internal\\.Pack200Streams\\.pack\\:\\(\\[BLjava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.internal\\.ContentTypeDetector\\.\\<init\\>\\:\\(Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.internal\\.ContentTypeDetector\\.determineType\\:\\(Ljava\\/io\\/InputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.internal\\.ContentTypeDetector\\.readInt\\:\\(Ljava\\/io\\/InputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.internal\\.instr\\.SignatureRemover\\.filterEntry\\:\\(Ljava\\/lang\\/String\\;Ljava\\/io\\/InputStream\\;Ljava\\/io\\/OutputStream\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.internal\\.instr\\.InstrSupport\\.assertNotInstrumented\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.instr\\.Instrumenter\\.instrument\\:\\(\\[BLjava\\/lang\\/String\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.instr\\.Instrumenter\\.instrument\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/String\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.instr\\.Instrumenter\\.instrument\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/io\\/OutputStream\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.instr\\.Instrumenter\\.instrumentAll\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/io\\/OutputStream\\;Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.instr\\.Instrumenter\\.instrumentZip\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/io\\/OutputStream\\;Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.instr\\.Instrumenter\\.nextEntry\\:\\(Ljava\\/util\\/zip\\/ZipInputStream\\;Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/zip\\/ZipEntry\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.instr\\.Instrumenter\\.instrumentGzip\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/io\\/OutputStream\\;Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.instr\\.Instrumenter\\.instrumentPack200\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/io\\/OutputStream\\;Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.instr\\.Instrumenter\\.copy\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/io\\/OutputStream\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.instr\\.Instrumenter\\.read\\:\\(Ljava\\/io\\/InputStream\\;\\[BLjava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.asm\\.ClassReader\\.\\<init\\>\\:\\(Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.asm\\.ClassReader\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.asm\\.ClassReader\\.readStream\\:\\(Ljava\\/io\\/InputStream\\;Z\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.jacoco.agent.rt.internal_28bab1d.asm.ClassTooLargeException", 
   "org.jacoco.agent.rt.internal_28bab1d.asm.MethodTooLargeException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.asm\\.ClassWriter\\.toByteArray\\:\\(\\)\\[B"
 }
]